{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/user.svg","webpack:///./src/assets/Logo.svg","webpack:///./node_modules/less/dist/less.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/components/navBar.vue?22e6","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesShadow.js","webpack:///./src/assets/menu.svg","webpack:///./src/assets/search.svg","webpack:///./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack:///./node_modules/@vue/web-component-wrapper/dist/vue-wc-wrapper.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/App.vue?6bf0","webpack:///./src/components/navBar.vue?d36e","webpack:///src/components/navBar.vue","webpack:///./src/components/navBar.vue?879c","webpack:///./src/components/navBar.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./node_modules/@vue/cli-service/lib/commands/build/entry-wc.js","webpack:///./src/components/navBar.vue?deb2","webpack:///./node_modules/@soda/get-current-script/index.js","webpack:///external \"Vue\"","webpack:///./src/components/navBar.vue?492c"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","factory","this","defaultOptions","javascriptEnabled","depends","compress","lint","paths","color","strictImports","insecure","rootpath","rewriteUrls","math","strictUnits","globalVars","modifyVars","urlArgs","extractId","href","replace","addDataAttr","options","tag","opt","dataset","JSON","parse","_","browser","createCSS","document","styles","sheet","id","title","oldStyleNode","getElementById","keepOldStyleNode","styleNode","createElement","setAttribute","media","styleSheet","appendChild","createTextNode","childNodes","length","firstChild","nodeValue","head","getElementsByTagName","nextEl","nextSibling","parentNode","insertBefore","removeChild","cssText","e","Error","currentScript","window","scripts","addDefaultOptions","undefined","isFileProtocol","test","location","protocol","async","fileAsync","poll","env","hostname","port","dumpLineNumbers","exec","hash","useFileCache","onReady","relativeUrls","logger","error","msg","_fireEvent","warn","info","debug","addListener","listener","_listeners","push","removeListener","splice","type","logFunction","Environment","externalEnvironment","fileManagers","optionalFunctions","requiredFunctions","functions","concat","propName","environmentFunc","getFileManager","filename","currentDirectory","environment","isSync","pluginManager","getFileManagers","fileManager","addFileManager","clearFileManagers","colors","unitConversions","duration","angle","Math","PI","data","Node","parent","visibilityBlocks","nodeVisible","rootNode","parsed","self","fileInfo","getIndex","setParent","nodes","set","node","Array","isArray","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","isEmpty","join","output","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","Color","rgb","originalForm","match","map","parseInt","alpha","split","clamp","v","max","min","toHex","round","toString","assign","luma","g","pow","doNotCompress","colorFunction","args","indexOf","toHSL","h","toRGB","splitcolor","operate","other","toHSV","toARGB","x","fromKeyword","keyword","toLowerCase","slice","Paren","_noSpaceCombinators","Combinator","emptyOrWhitespace","trim","spaceOrEmpty","Element","combinator","isVariable","currentFileInfo","clone","firstSelector","charAt","Math$1","ALWAYS","PARENS_DIVISION","PARENS","RewriteUrls","OFF","LOCAL","ALL","getType","payload","isPlainObject","constructor","getPrototypeOf","__spreadArrays","il","arguments","k","j","jl","assignProp","carry","newVal","originalObject","includeNonenumerable","propType","propertyIsEnumerable","writable","configurable","copy","target","props","getOwnPropertyNames","symbols","getOwnPropertySymbols","reduce","includes","val","nonenumerable","getLocation","inputStream","line","column","copyArray","arr","obj","cloned","prop","defaults","obj1","obj2","newObj","_defaults","defaults_1","copyOptions","opts","strictMath","merge","flattenArray","result","length_1","utils","freeze","__proto__","anonymousFunc","LessError","fileContentMap","currentFilename","message","stack","input","contents","loc","col","callLine","lines","found","func","Function","lineAdjust","callExtract","extract","F","stylize","str","errorTxt","substr","Selector","elements","extendList","condition","evaldCondition","getElements","mixinElements_","visitArray","createDerived","newSelector","mediaEmpty","els","parseNode","err","imports","createEmptySelectors","el","sels","olen","len","mixinElements","shift","isJustParentSelector","extend","element","getIsOutput","Value","Keyword","True","False","Anonymous","mapLines","rulesetLike","allowRoot","Boolean","MATH","evalName","Declaration","important","inline","variable","lastRule","prevMath","evaldValue","mathBypass","importantScope","importantResult","pop","makeImportant","debugInfo","ctx","lineSeparator","asComment","asMediaQuery","lineNumber","fileName","filenameWithProtocol","Comment","isLineComment","isSilent","isCompressed","contexts","copyFromOriginal","original","destination","propertiesToCopy","parseCopyProperties","Parse","evalCopyProperties","isPathRelative","path","isPathLocalRelative","makeRegistry","base","_data","addMultiple","_this","keys","getLocalFunctions","inherit","Eval","frames","enterCalc","calcStack","inCalc","exitCalc","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","pathRequiresRewrite","isRelative","rewritePath","newPath","normalizePath","segment","segments","reverse","functionRegistry","defaultFunc","value_","error_","reset","Ruleset","selectors","rules","_lookups","_variables","_properties","isRuleset","selCnt","selector","hasVariable","hasOnePassingSelector","toParseSelectors","rule","subRule","ruleset","originalRuleset","root","firstRoot","allowImports","ctxFrames","unshift","ctxSelectors","evalImports","rsRules","evalFirst","mediaBlockCount","mediaBlocks","filter","apply","resetCache","bubbleSelectors","importRules","matchArgs","matchCondition","lastSelector","_rulesets","variables","vars","name_1","properties","name_2","decl","parseValue","lastDeclaration","toParse","transformDeclaration","nodes_1","rulesets","filtRules","prependRule","find","foundMixins","debugInfo$1","charsetRuleNodes","ruleNodes","tabLevel","sep","tabRuleStr","tabSetStr","charsetNodeIndex","importNodeIndex","isCharset","pathCnt","pathSubCnt","currentLastRule","joinSelectors","joinSelector","createParenthesis","elementsToPak","originalElement","replacementParen","insideParent","createSelector","containedElement","addReplacementIntoPath","beginningPath","addPath","replacedElement","originalSelector","newSelectorPath","newJoinedSelector","parentEl","restOfPath","addAllReplacementsIntoPath","addPaths","mergeElementsOnToSelectors","sel","replaceParentSelector","inSelector","currentElements","newSelectors","selectorsMultiplied","hadParentSelector","findNestedSelector","maybeSelector","nestedSelector","nestedPaths","replaced","replacedNewSelectors","replacementSelector","deriveSelector","deriveFrom","newPaths","concatenated","AtRule","isRooted","outputRuleset","mediaPathBackup","mediaBlocksBackup","mediaPath","ruleCnt","DetachedRuleset","callEval","Unit","numerator","denominator","backupUnit","sort","returnStr","is","unitString","toUpperCase","isLength","RegExp","isSingular","callback","usedUnits","group","mapUnit","groupName","atomicUnit","cancel","counter","count","Dimension","unit","parseFloat","isNaN","toColor","strValue","String","convertTo","unify","conversions","targetUnit","applyUnit","derivedConversions","MATH$1","Operation","operands","isSpaced","__spreadArrays$1","Expression","noSpacing","returnValue","parens","doubleParen","parensInOp","throwAwayComments","functionCaller","isValid","evalArgs","commentFilter","item","subNodes","Call","calc","currentMathContext","funcCaller","columnNumber","Variable","evaluating","frame","fun","Property","mergeRules","less","visitors","ToCSSVisitor","_mergeRules","vArr","Attribute","Quoted","content","escaped","quote","variableRegex","propRegex","escapePath","containsVariables","that","variableReplacement","propertyReplacement","iterativeReplace","regexp","replacementFnc","evaluatedValue","URL","isEvald","delimiter","Media","features","evalTop","evalNested","multiMedia","permute","fragment","rest","Import","css","pathValue","getPath","isPlugin","reference","isVariableImport","evalForImport","evalPath","doEval","registry","skip","importedFilename","newImport","JsEvalNode","evaluateJavaScript","expression","evalContext","jsify","toJS","JavaScript","string","Assignment","Condition","negate","lvalue","rvalue","UnicodeDescriptor","Negative","Extend","option","object_id","next_id","parent_ids","allowBefore","allowAfter","findSelfSelectors","selectorElements","selfElements","selfSelectors","VariableCall","detachedRuleset","NamespaceValue","ruleCall","lookups","substring","Definition","params","variadic","arity","optionalParameters","required","evalParams","mixinEnv","evaldArguments","varargs","arg","isNamedFound","argIndex","argsLength","evalCall","_arguments","mixinFrames","allArgsCnt","requiredArgsCnt","MixinCall","mixins","mixin","mixinPath","argValue","f","isRecursive","isOneFound","candidate","defaultResult","noArgumentsFilter","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","namespace","expand","format","newRules","_setVisibilityToReplacement","replacement","tree","AbstractFileManager","lastIndexOf","tryAppendExtension","ext","tryAppendLessExtension","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","basePath","laterPath","pathDiff","url","baseUrl","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","directories","urlPartsRegex","returner","rawDirectories","rawPath","fileUrl","AbstractPluginLoader","require","evalPlugin","pluginOptions","loader","pluginObj","localModule","shortname","FileManager","trySetOptions","use","registerPlugin","validatePlugin","minVersion","compareVersion","addPlugin","plugin","setOptions","version","versionToString","aVersion","bVersion","versionString","printUsage","plugins","_visitArgs","visitDeeper","_hasIndexed","_noop","indexNodeTypes","ticker","child","typeIndex","Visitor","implementation","_implementation","_visitInCache","_visitOutCache","nodeTypeIndex","fnName","impl","funcOut","visitArgs","newNode","isReplacing","cnt","nonReplacing","out","evald","flatten","nestedCnt","nestedItem","ImportSequencer","onSequencerEmpty","variableImports","_onSequencerEmpty","_currentDepth","addImport","importSequencer","importItem","isReady","tryRun","addVariableImport","variableImport","ImportVisitor","importer","finish","_visitor","_importer","_finish","importCount","onceFileDetectionMap","recursionDetector","_sequencer","run","isFinished","visitImport","importNode","inlineCSS","importParent","processImportNode","evaldImportNode","multiple","importMultiple","onImported","sequencedOnImported","importedAtRoot","fullPath","importVisitor","isOptional","optional","duplicateImport","oldContext","visitDeclaration","declNode","visitDeclarationOut","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","SetTreeVisibilityVisitor","visible","ExtendFinderVisitor","allExtendsStack","allExtends","allSelectorsExtendList","extendOnEveryPath","selectorPath","selExtendList","allSelectorsExtend","foundExtends","firstExtendOnThisSelectorPath","ProcessExtendsVisitor","extendFinder","extendIndices","doExtendChaining","newRoot","checkExtendsForNonMatched","indices","hasFoundMatches","extendsList","extendsListTarget","iterationCount","extendIndex","targetExtendIndex","matches","targetExtend","newExtend","extendsToAdd","extendVisitor","findMatch","selfSelector","extendSelector","extendChainCount","selectorOne","selectorTwo","ruleNode","visitSelector","selectorNode","pathIndex","selectorsToAdd","extendedSelectors","haystackSelectorPath","haystackSelectorIndex","hackstackSelector","hackstackElementIndex","haystackElement","targetCombinator","potentialMatch","needleElements","potentialMatches","matched","initialCombinator","isElementValuesEqual","finished","endPathIndex","endPathElementIndex","elementValue1","elementValue2","matchIndex","firstElement","newElements","currentSelectorPathIndex","currentSelectorPathElementIndex","currentValue","derived","newAllExtends","lastIndex","JoinSelectorVisitor","CSSVisitorUtils","_context","containsSilentNonBlockedChild","bodyRules","keepOnlyVisibleChilds","owner","thing","hasVisibleSelector","resolveVisibility","originalRules","compiledRulesBody","isVisibleRuleset","mixinNode","visitExtend","extendNode","visitComment","commentNode","visitAtRuleWithBody","visitAtRuleWithoutBody","visitAnonymous","anonymousNode","hasFakeRuleset","getBodyRules","nodeRules","charset","comment","checkValidNodes","isRoot","_compileRulesetPaths","nodeRuleCnt","_removeDuplicateRules","ruleList","ruleCache","ruleCSS","groups","groupsArr","result_1","space_1","comma_1","MarkVisibleSelectorsVisitor","ExtendVisitor","chunker","fail","lastOpening","lastOpeningParen","lastMultiComment","lastMultiCommentEndBrace","chunkerCurrentIndex","currentChunkStartIndex","cc","cc2","level","parenLevel","chunks","emitFrom","emitChunk","force","charCodeAt","fromCharCode","getParserInput","furthest","furthestPossibleErrorMessage","current","currentPos","saveStack","parserInput","CHARCODE_SPACE","CHARCODE_TAB","CHARCODE_LF","CHARCODE_CR","CHARCODE_PLUS","CHARCODE_COMMA","CHARCODE_FORWARD_SLASH","CHARCODE_9","skipWhitespace","nextChar","oldi","oldj","curr","endIndex","mem","inp","autoCommentAbsorb","nextNewLine","text","commentStore","nextStarSlash","save","restore","possibleErrorMessage","state","forget","isWhitespace","offset","pos","code","$re","tok","$char","$str","tokLength","$quoted","startChar","currentPosition","$parseUntil","testChar","returnVal","inComment","blockDepth","blockStack","parseGroups","startPos","lastPos","loop","char","expected","peek","peekChar","currentChar","prevChar","getInput","peekNotNumeric","start","chunkInput","failFunction","end","furthestReachedEnd","furthestChar","Parser","parsers","expect","expectChar","getDebugInfo","parseList","currentIndex","returnNodes","parser","endInfo","additionalData","ignored","preText","serializeVars","preProcessors","getPreProcessors","process","banner","contentsIgnoredChars","primary","processImports","extendRule","definition","declaration","variableCall","entities","atrule","foundSemiColon","mixinLookup","quoted","forceEscaped","isEscaped","customFuncCall","stop","ieAlpha","boolean","prevArgs","isSemiColonSeparated","argsComma","argsSemiColon","assignment","literal","dimension","unicodeDescriptor","entity","ch","variableCurly","curly","propertyCurly","colorKeyword","ud","javascript","js","escape","jsQuote","parsedName","inValue","ruleLookups","isRule","getLookup","hasParens","elem","elemIndex","re","isCall","expressionContainsNamed","nameLoop","expressions","hasSep","cond","argInfo","conditions","block","lookupValue","attribute","slashedCombinator","isLess","when","blockRuleset","hasDR","ruleProperty","permissiveValue","anonymousValue","untilTokens","done","testCurrentChar","dir","importOptions","mediaFeatures","optionName","importOption","mediaFeature","pluginArgs","nonVendorSpecificName","hasIdentifier","hasExpression","hasUnknown","hasBlock","sub","addition","multiplication","operation","operand","needsParens","logical","next","or","conditionAnd","insideCondition","negatedCondition","parenthesisCondition","atomicCondition","and","tryConditionFollowedByParenthesis","me","body","delim","simpleProperty","If","trueValue","falseValue","isdefined","colorFunctions","boolean$1","clamp$1","hsla","origColor","hsl","number","scaled","size","rgba","m1_1","m2_1","hue","hsv","hsva","floor","vs","perm","saturation","lightness","hsvhue","hsvsaturation","hsvvalue","red","green","blue","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","w","w1","w2","greyscale","contrast","dark","light","threshold","argb","tint","shade","colorBlend","cb","cs","ar","cr","ab","as","colorBlendModeFunctions","multiply","screen","overlay","softlight","sqrt","hardlight","difference","abs","exclusion","average","negation","dataUri","fallback","functionThis","mimetypeNode","filePathNode","mimetype","filePath","entryPath","fragmentStart","rawBuffer","useBase64","mimeLookup","charsetLookup","fileSync","loadFileSync","buf","encodeBase64","encodeURIComponent","uri","getItemsFromNode","items","list","_SELF","expr","_i","values","range","step","from","to","stepValue","each","rs","iterator","tryEval","valueName","keyName","indexName","MathHelper","fn","mathFunctions","ceil","tan","sin","cos","atan","asin","acos","f$1","fraction","num","minMax","isMin","currentUnified","referenceUnified","unitStatic","unitClone","order","number$1","convert","pi","mod","y","percentage","evaluated","encodeURI","pattern","flags","_loop_1","token","svg","direction","stops","gradientDirectionSvg","position","positionValue","gradientType","rectangleDimension","renderEnv","directionValue","throwArgumentDescriptor","isa","Type","isunit","types","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","transformTree","evaldRoot","evalEnv","visitorIterator","visitors$1","preEvalVisitors","first","isPreEvalVisitor","isPreVisitor","pm","PluginManager","postProcessors","installedPlugins","pluginCache","Loader","PluginLoader","addPlugins","install","addVisitor","addPreProcessor","preProcessor","priority","indexToInsertAt","addPostProcessor","postProcessor","manager","getPostProcessors","getVisitors","PluginManagerFactory","newFactory","SourceMapOutput","_css","_rootNode","_contentsMap","contentsMap","_contentsIgnoredCharsMap","contentsIgnoredCharsMap","sourceMapFilename","_sourceMapFilename","_outputFilename","outputFilename","sourceMapURL","sourceMapBasepath","_sourceMapBasepath","sourceMapRootpath","_sourceMapRootpath","_outputSourceFiles","outputSourceFiles","_sourceMapGeneratorConstructor","getSourceMapGenerator","_lineNumber","_column","removeBasepath","normalizeFilename","sourceLines","columns","sourceColumns","inputSource","_sourceMapGenerator","addMapping","generated","source","file","sourceRoot","setSourceContent","sourceMapContent","stringify","toJSON","sourceMap","SourceMapBuilder","sourceMapOutput","sourceMapOutputFilename","sourceMapGenerator","sourceMapFileInline","disableSourcemapAnnotation","sourceMapInputFilename","getCSSAppendage","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename","ParseTree","sourceMapBuilder","toCSSOptions","files","rootFilename","ImportManager","rootFileInfo","mime","queue","importManager","pluginLoader","fileParsedFunc","importedEqualsRoot","newFileInfo","loadedFile","promise","loadFileCallback","resolvedFilename","newEnv","syncImport","loadPluginSync","loadPlugin","loadFile","then","self_1","Promise","resolve","reject","context_1","pluginManager_1","reUsePluginManager","imports_1","evalResult","fileContent","Render","render","parseTree","parseNodeVersion","res","major","minor","patch","pre","build","logger$1","parseNodeVersion_1","lessRoot","initial","ctor","api","fileCache","doXHR","errback","xhr","XMLHttpRequest","handleResponse","status","responseText","getResponseHeader","overrideMimeType","open","setRequestHeader","send","onreadystatechange","readyState","supports","clearFileCache","hrefParts","lessText","webInfo","lastModified","Date","FM","log","fulfill","catch","LogListener","logLevel_debug","logLevel_info","logLevel_warn","logLevel_error","logLevel","loggers","console","ErrorReporting","errorHTML","rootHref","timer","template","errors","filenameNoPath","className","errorline","classname","innerHTML","style","setInterval","replaceChild","clearInterval","removeErrorHTML","removeError","errorReporting","errorConsole","remove","Cache","cache","localStorage","setCSS","setItem","getCSS","getItem","timestamp","valueOf","ImageSize","imageSize","imageFunctions","typePattern","thisArg","curryArgs","loadStyles","instanceOptions","loadStyleSheet","reload","remaining","loadInitialFileCallback","local","loadStyleSheets","sheets","initRunningMode","watchTimer","watchMode","watch","unwatch","registerStylesheetsImmediately","links","rel","registerStylesheets","record","refresh","startTime","endTime","totalMilliseconds","remainingSheets","refreshStyles","options$1","LESS_PLUGINS","resolveOrReject","pageLoadFinished","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sourceURLs","sources","base64","unescape","mediaQuery","dedupe","alreadyImportedModules","___CSS_LOADER_API_IMPORT___","listToStyles","parentId","newStyles","part","parts","addStylesToShadowDOM","shadowRoot","addStyles","injectedStyles","_injectedStyles","addStyle","createStyleElement","styleElement","NEED_CURRENTSCRIPT_POLYFILL","getCurrentScript","src","camelizeRE","camelize","hyphenateRE","hyphenate","getInitialProps","propsList","injectHook","hook","callHooks","vm","hooks","$options","createCustomEvent","CustomEvent","bubbles","cancelable","detail","isBoolean","isNumber","convertAttributeValue","toVNodes","children","toVNode","nodeType","attrs","getAttributes","domProps","slot","tagName","attributes","attr","nodeName","wrap","Vue","Component","isAsync","cid","hyphenatedPropsList","camelizedPropsList","camelizedPropsMap","isInitialized","initialize","originalPropsAsObject","emit","$emit","$root","customElement","dispatchEvent","CustomElement","_wrapper","syncAttribute","camelized","hasAttribute","getAttribute","HTMLElement","super","attachShadow","wrapper","slotChildren","ref","observer","MutationObserver","mutations","hasChildrenChange","attributeName","$createElement","observe","childList","subtree","characterData","$refs","inner","_isMounted","vueComponent","syncInitialAttributes","resolved","default","$mount","$el","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","originalRender","existing","beforeCreate","_vm","_h","_c","_self","_v","_m","staticClass","style0","__inject__","component","config","productionTip","VueWebComponent","customElements","define","App","locals","descriptor","getOwnPropertyDescriptor","pageSource","inlineScriptSourceRegExp","inlineScriptSource","ieStackRegExp","ffStackRegExp","stackDetails","scriptLocation","currentLocation","documentElement","outerHTML"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,qBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,S,yBClFrDhC,EAAOD,QAAU,IAA0B,yB,uBCA3CC,EAAOD,QAAU,IAA0B,yB;;;;;;;;;;CCU1C,SAAUkC,EAAQC,GACgDlC,EAAOD,QAAUmC,KADpF,CAIEC,GAAM,WAAe,aAGnB,SAASC,IACL,MAAO,CAEHC,mBAAmB,EAEnBC,SAAS,EAITC,UAAU,EAEVC,MAAM,EAMNC,MAAO,GAEPC,OAAO,EAIPC,eAAe,EAEfC,UAAU,EAIVC,SAAU,GAKVC,aAAa,EAObC,KAAM,EAENC,aAAa,EAIbC,WAAY,KAGZC,WAAY,KAEZC,QAAS,IAIjB,SAASC,EAAUC,GACf,OAAOA,EAAKC,QAAQ,sBAAuB,IACtCA,QAAQ,uBAAwB,IAChCA,QAAQ,MAAO,IACfA,QAAQ,eAAgB,IACxBA,QAAQ,aAAc,KACtBA,QAAQ,MAAO,KAExB,SAASC,EAAYC,EAASC,GAC1B,IAAK,IAAIC,KAAOD,EAAIE,QAChB,GAAIF,EAAIE,QAAQ7B,eAAe4B,GAC3B,GAAY,QAARA,GAAyB,oBAARA,GAAqC,aAARA,GAA8B,mBAARA,EACpEF,EAAQE,GAAOD,EAAIE,QAAQD,QAG3B,IACIF,EAAQE,GAAOE,KAAKC,MAAMJ,EAAIE,QAAQD,IAE1C,MAAOI,KAMvB,IAAIC,EAAU,CACVC,UAAW,SAAUC,EAAUC,EAAQC,GAEnC,IAAId,EAAOc,EAAMd,MAAQ,GAErBe,EAAK,SAAWD,EAAME,OAASjB,EAAUC,IAEzCiB,EAAeL,EAASM,eAAeH,GACvCI,GAAmB,EAEnBC,EAAYR,EAASS,cAAc,SACvCD,EAAUE,aAAa,OAAQ,YAC3BR,EAAMS,OACNH,EAAUE,aAAa,QAASR,EAAMS,OAE1CH,EAAUL,GAAKA,EACVK,EAAUI,aACXJ,EAAUK,YAAYb,EAASc,eAAeb,IAE9CM,EAAqC,OAAjBF,GAAyBA,EAAaU,WAAWC,OAAS,GAAKR,EAAUO,WAAWC,OAAS,GAC7GX,EAAaY,WAAWC,YAAcV,EAAUS,WAAWC,WAEnE,IAAIC,EAAOnB,EAASoB,qBAAqB,QAAQ,GAGjD,GAAqB,OAAjBf,IAA8C,IAArBE,EAA4B,CACrD,IAAIc,EAASnB,GAASA,EAAMoB,aAAe,KACvCD,EACAA,EAAOE,WAAWC,aAAahB,EAAWa,GAG1CF,EAAKN,YAAYL,GASzB,GANIH,IAAqC,IAArBE,GAChBF,EAAakB,WAAWE,YAAYpB,GAKpCG,EAAUI,WACV,IACIJ,EAAUI,WAAWc,QAAUzB,EAEnC,MAAO0B,GACH,MAAM,IAAIC,MAAM,2CAI5BC,cAAe,SAAUC,GACrB,IAAI9B,EAAW8B,EAAO9B,SACtB,OAAOA,EAAS6B,eAAiB,WAC7B,IAAIE,EAAU/B,EAASoB,qBAAqB,UAC5C,OAAOW,EAAQA,EAAQf,OAAS,GAFH,KAOrCgB,EAAoB,SAAWF,EAAQvC,GAEvCD,EAAYC,EAASO,EAAQ+B,cAAcC,SACZG,IAA3B1C,EAAQ2C,iBACR3C,EAAQ2C,eAAiB,yDAAyDC,KAAKL,EAAOM,SAASC,WAQ3G9C,EAAQ+C,MAAQ/C,EAAQ+C,QAAS,EACjC/C,EAAQgD,UAAYhD,EAAQgD,YAAa,EAEzChD,EAAQiD,KAAOjD,EAAQiD,OAASjD,EAAQ2C,eAAiB,IAAO,MAChE3C,EAAQkD,IAAMlD,EAAQkD,MAAoC,aAA5BX,EAAOM,SAASM,UACd,WAA5BZ,EAAOM,SAASM,UACY,aAA5BZ,EAAOM,SAASM,UACfZ,EAAOM,SAASO,MACbb,EAAOM,SAASO,KAAK3B,OAAS,GAClCzB,EAAQ2C,eAAiB,cACvB,cACN,IAAIU,EAAkB,6CAA6CC,KAAKf,EAAOM,SAASU,MACpFF,IACArD,EAAQqD,gBAAkBA,EAAgB,SAEjBX,IAAzB1C,EAAQwD,eACRxD,EAAQwD,cAAe,QAEHd,IAApB1C,EAAQyD,UACRzD,EAAQyD,SAAU,GAElBzD,EAAQ0D,eACR1D,EAAQV,YAAc,QAI1BqE,EAAS,CACTC,MAAO,SAAUC,GACblF,KAAKmF,WAAW,QAASD,IAE7BE,KAAM,SAAUF,GACZlF,KAAKmF,WAAW,OAAQD,IAE5BG,KAAM,SAAUH,GACZlF,KAAKmF,WAAW,OAAQD,IAE5BI,MAAO,SAAUJ,GACblF,KAAKmF,WAAW,QAASD,IAE7BK,YAAa,SAAUC,GACnBxF,KAAKyF,WAAWC,KAAKF,IAEzBG,eAAgB,SAAUH,GACtB,IAAK,IAAI1H,EAAI,EAAGA,EAAIkC,KAAKyF,WAAW3C,OAAQhF,IACxC,GAAIkC,KAAKyF,WAAW3H,KAAO0H,EAEvB,YADAxF,KAAKyF,WAAWG,OAAO9H,EAAG,IAKtCqH,WAAY,SAAUU,EAAMX,GACxB,IAAK,IAAIpH,EAAI,EAAGA,EAAIkC,KAAKyF,WAAW3C,OAAQhF,IAAK,CAC7C,IAAIgI,EAAc9F,KAAKyF,WAAW3H,GAAG+H,GACjCC,GACAA,EAAYZ,KAIxBO,WAAY,IAOZM,EAA6B,WAC7B,SAASA,EAAYC,EAAqBC,GACtCjG,KAAKiG,aAAeA,GAAgB,GACpCD,EAAsBA,GAAuB,GAI7C,IAHA,IAAIE,EAAoB,CAAC,eAAgB,aAAc,gBAAiB,yBACpEC,EAAoB,GACpBC,EAAYD,EAAkBE,OAAOH,GAChCpI,EAAI,EAAGA,EAAIsI,EAAUtD,OAAQhF,IAAK,CACvC,IAAIwI,EAAWF,EAAUtI,GACrByI,EAAkBP,EAAoBM,GACtCC,EACAvG,KAAKsG,GAAYC,EAAgBjH,KAAK0G,GAEjClI,EAAIqI,EAAkBrD,QAC3B9C,KAAKoF,KAAK,8CAAgDkB,IA6BtE,OAzBAP,EAAYrG,UAAU8G,eAAiB,SAAUC,EAAUC,EAAkBrF,EAASsF,EAAaC,GAC1FH,GACDzB,EAAOI,KAAK,kFAEQ,MAApBsB,GACA1B,EAAOI,KAAK,qFAEhB,IAAIa,EAAejG,KAAKiG,aACpB5E,EAAQwF,gBACRZ,EAAe,GAAGI,OAAOJ,GAAcI,OAAOhF,EAAQwF,cAAcC,oBAExE,IAAK,IAAIhJ,EAAImI,EAAanD,OAAS,EAAGhF,GAAK,EAAGA,IAAK,CAC/C,IAAIiJ,EAAcd,EAAanI,GAC/B,GAAIiJ,EAAYH,EAAS,eAAiB,YAAYH,EAAUC,EAAkBrF,EAASsF,GACvF,OAAOI,EAGf,OAAO,MAEXhB,EAAYrG,UAAUsH,eAAiB,SAAUD,GAC7C/G,KAAKiG,aAAaP,KAAKqB,IAE3BhB,EAAYrG,UAAUuH,kBAAoB,WACtCjH,KAAKiG,aAAe,IAEjBF,EA3CqB,GA8C5BmB,EAAS,CACT,UAAa,UACb,aAAgB,UAChB,KAAQ,UACR,WAAc,UACd,MAAS,UACT,MAAS,UACT,OAAU,UACV,MAAS,UACT,eAAkB,UAClB,KAAQ,UACR,WAAc,UACd,MAAS,UACT,UAAa,UACb,UAAa,UACb,WAAc,UACd,UAAa,UACb,MAAS,UACT,eAAkB,UAClB,SAAY,UACZ,QAAW,UACX,KAAQ,UACR,SAAY,UACZ,SAAY,UACZ,cAAiB,UACjB,SAAY,UACZ,SAAY,UACZ,UAAa,UACb,UAAa,UACb,YAAe,UACf,eAAkB,UAClB,WAAc,UACd,WAAc,UACd,QAAW,UACX,WAAc,UACd,aAAgB,UAChB,cAAiB,UACjB,cAAiB,UACjB,cAAiB,UACjB,cAAiB,UACjB,WAAc,UACd,SAAY,UACZ,YAAe,UACf,QAAW,UACX,QAAW,UACX,WAAc,UACd,UAAa,UACb,YAAe,UACf,YAAe,UACf,QAAW,UACX,UAAa,UACb,WAAc,UACd,KAAQ,UACR,UAAa,UACb,KAAQ,UACR,KAAQ,UACR,MAAS,UACT,YAAe,UACf,SAAY,UACZ,QAAW,UACX,UAAa,UACb,OAAU,UACV,MAAS,UACT,MAAS,UACT,SAAY,UACZ,cAAiB,UACjB,UAAa,UACb,aAAgB,UAChB,UAAa,UACb,WAAc,UACd,UAAa,UACb,qBAAwB,UACxB,UAAa,UACb,UAAa,UACb,WAAc,UACd,UAAa,UACb,YAAe,UACf,cAAiB,UACjB,aAAgB,UAChB,eAAkB,UAClB,eAAkB,UAClB,eAAkB,UAClB,YAAe,UACf,KAAQ,UACR,UAAa,UACb,MAAS,UACT,QAAW,UACX,OAAU,UACV,iBAAoB,UACpB,WAAc,UACd,aAAgB,UAChB,aAAgB,UAChB,eAAkB,UAClB,gBAAmB,UACnB,kBAAqB,UACrB,gBAAmB,UACnB,gBAAmB,UACnB,aAAgB,UAChB,UAAa,UACb,UAAa,UACb,SAAY,UACZ,YAAe,UACf,KAAQ,UACR,QAAW,UACX,MAAS,UACT,UAAa,UACb,OAAU,UACV,UAAa,UACb,OAAU,UACV,cAAiB,UACjB,UAAa,UACb,cAAiB,UACjB,cAAiB,UACjB,WAAc,UACd,UAAa,UACb,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,WAAc,UACd,OAAU,UACV,cAAiB,UACjB,IAAO,UACP,UAAa,UACb,UAAa,UACb,YAAe,UACf,OAAU,UACV,WAAc,UACd,SAAY,UACZ,SAAY,UACZ,OAAU,UACV,OAAU,UACV,QAAW,UACX,UAAa,UACb,UAAa,UACb,UAAa,UACb,KAAQ,UACR,YAAe,UACf,UAAa,UACb,IAAO,UACP,KAAQ,UACR,QAAW,UACX,OAAU,UACV,UAAa,UACb,OAAU,UACV,MAAS,UACT,MAAS,UACT,WAAc,UACd,OAAU,UACV,YAAe,WAGfC,EAAkB,CAClBrE,OAAQ,CACJ,EAAK,EACL,GAAM,IACN,GAAM,KACN,GAAM,MACN,GAAM,MAAS,GACf,GAAM,MAAS,GACf,GAAM,MAAS,GAAK,IAExBsE,SAAU,CACN,EAAK,EACL,GAAM,MAEVC,MAAO,CACH,IAAO,GAAK,EAAIC,KAAKC,IACrB,IAAO,EAAI,IACX,KAAQ,EAAI,IACZ,KAAQ,IAIZC,EAAO,CAAEN,OAAQA,EAAQC,gBAAiBA,GAQ1CM,EAAsB,WACtB,SAASA,IACLzH,KAAK0H,OAAS,KACd1H,KAAK2H,sBAAmB5D,EACxB/D,KAAK4H,iBAAc7D,EACnB/D,KAAK6H,SAAW,KAChB7H,KAAK8H,OAAS,KACd,IAAIC,EAAO/H,KACXxB,OAAOC,eAAeuB,KAAM,kBAAmB,CAC3CrB,IAAK,WAAc,OAAOoJ,EAAKC,cAEnCxJ,OAAOC,eAAeuB,KAAM,QAAS,CACjCrB,IAAK,WAAc,OAAOoJ,EAAKE,cA8IvC,OA3IAR,EAAK/H,UAAUwI,UAAY,SAAUC,EAAOT,GACxC,SAASU,EAAIC,GACLA,GAAQA,aAAgBZ,IACxBY,EAAKX,OAASA,GAGlBY,MAAMC,QAAQJ,GACdA,EAAMK,QAAQJ,GAGdA,EAAID,IAGZV,EAAK/H,UAAUuI,SAAW,WACtB,OAAOjI,KAAKyI,QAAWzI,KAAK0H,QAAU1H,KAAK0H,OAAOO,YAAe,GAErER,EAAK/H,UAAUsI,SAAW,WACtB,OAAOhI,KAAK0I,WAAc1I,KAAK0H,QAAU1H,KAAK0H,OAAOM,YAAe,IAExEP,EAAK/H,UAAUiJ,cAAgB,WAAc,OAAO,GACpDlB,EAAK/H,UAAUkJ,MAAQ,SAAUC,GAC7B,IAAIC,EAAO,GASX,OARA9I,KAAK+I,OAAOF,EAAS,CACjBG,IAAK,SAAUC,EAAOjB,EAAUkB,GAC5BJ,EAAKpD,KAAKuD,IAEdE,QAAS,WACL,OAAuB,IAAhBL,EAAKhG,UAGbgG,EAAKM,KAAK,KAErB3B,EAAK/H,UAAUqJ,OAAS,SAAUF,EAASQ,GACvCA,EAAOL,IAAIhJ,KAAKjB,QAEpB0I,EAAK/H,UAAU4J,OAAS,SAAUC,GAC9BvJ,KAAKjB,MAAQwK,EAAQC,MAAMxJ,KAAKjB,QAEpC0I,EAAK/H,UAAU+J,KAAO,WAAc,OAAOzJ,MAC3CyH,EAAK/H,UAAUgK,SAAW,SAAUb,EAASc,EAAIC,EAAGC,GAChD,OAAQF,GACJ,IAAK,IAAK,OAAOC,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,EACrB,IAAK,IAAK,OAAOD,EAAIC,IAG7BpC,EAAK/H,UAAUoK,OAAS,SAAUjB,EAAS9J,GACvC,IAAIgL,EAAYlB,GAAWA,EAAQmB,aAEnC,OAAO,EAAcC,QAAQlL,EAAQ,OAAOmL,QAAQH,IAAchL,GAEtE0I,EAAK0C,QAAU,SAAUP,EAAGC,GAMxB,GAAKD,EAAS,SAGG,WAAXC,EAAEhE,MAAgC,cAAXgE,EAAEhE,KAC3B,OAAO+D,EAAEO,QAAQN,GAEhB,GAAIA,EAAEM,QACP,OAAQN,EAAEM,QAAQP,GAEjB,GAAIA,EAAE/D,OAASgE,EAAEhE,KAAjB,CAKL,GAFA+D,EAAIA,EAAE7K,MACN8K,EAAIA,EAAE9K,OACDuJ,MAAMC,QAAQqB,GACf,OAAOA,IAAMC,EAAI,OAAI9F,EAEzB,GAAI6F,EAAE9G,SAAW+G,EAAE/G,OAAnB,CAGA,IAAK,IAAIhF,EAAI,EAAGA,EAAI8L,EAAE9G,OAAQhF,IAC1B,GAAiC,IAA7B2J,EAAK0C,QAAQP,EAAE9L,GAAI+L,EAAE/L,IACrB,OAGR,OAAO,KAEX2J,EAAK2C,eAAiB,SAAUR,EAAGC,GAC/B,OAAOD,EAAIC,GAAK,EACVD,IAAMC,EAAI,EACND,EAAIC,EAAI,OAAI9F,GAG1B0D,EAAK/H,UAAU2K,iBAAmB,WAI9B,OAH6B,MAAzBrK,KAAK2H,mBACL3H,KAAK2H,iBAAmB,GAEK,IAA1B3H,KAAK2H,kBAEhBF,EAAK/H,UAAU4K,mBAAqB,WACH,MAAzBtK,KAAK2H,mBACL3H,KAAK2H,iBAAmB,GAE5B3H,KAAK2H,iBAAmB3H,KAAK2H,iBAAmB,GAEpDF,EAAK/H,UAAU6K,sBAAwB,WACN,MAAzBvK,KAAK2H,mBACL3H,KAAK2H,iBAAmB,GAE5B3H,KAAK2H,iBAAmB3H,KAAK2H,iBAAmB,GAIpDF,EAAK/H,UAAU8K,iBAAmB,WAC9BxK,KAAK4H,aAAc,GAIvBH,EAAK/H,UAAU+K,mBAAqB,WAChCzK,KAAK4H,aAAc,GAMvBH,EAAK/H,UAAUgL,UAAY,WACvB,OAAO1K,KAAK4H,aAEhBH,EAAK/H,UAAUiL,eAAiB,WAC5B,MAAO,CACHhD,iBAAkB3H,KAAK2H,iBACvBC,YAAa5H,KAAK4H,cAG1BH,EAAK/H,UAAUkL,mBAAqB,SAAUvF,GACrCA,IAGLrF,KAAK2H,iBAAmBtC,EAAKsC,iBAC7B3H,KAAK4H,YAAcvC,EAAKuC,cAErBH,EA1Jc,GAgKrBoD,EAAQ,SAAUC,EAAKlB,EAAGmB,GAC1B,IAAIhD,EAAO/H,KAOPsI,MAAMC,QAAQuC,GACd9K,KAAK8K,IAAMA,EAENA,EAAIhI,QAAU,GACnB9C,KAAK8K,IAAM,GACXA,EAAIE,MAAM,SAASC,KAAI,SAAU9M,EAAGL,GAC5BA,EAAI,EACJiK,EAAK+C,IAAIpF,KAAKwF,SAAS/M,EAAG,KAG1B4J,EAAKoD,MAASD,SAAS/M,EAAG,IAAO,SAKzC6B,KAAK8K,IAAM,GACXA,EAAIM,MAAM,IAAIH,KAAI,SAAU9M,EAAGL,GACvBA,EAAI,EACJiK,EAAK+C,IAAIpF,KAAKwF,SAAS/M,EAAIA,EAAG,KAG9B4J,EAAKoD,MAASD,SAAS/M,EAAIA,EAAG,IAAO,QAIjD6B,KAAKmL,MAAQnL,KAAKmL,QAAuB,kBAANvB,EAAiBA,EAAI,GAC5B,qBAAjBmB,IACP/K,KAAKjB,MAAQgM,IAoLrB,SAASM,EAAMC,EAAGC,GACd,OAAOjE,KAAKkE,IAAIlE,KAAKiE,IAAID,EAAG,GAAIC,GAEpC,SAASE,EAAMH,GACX,MAAO,IAAMA,EAAEL,KAAI,SAAU9M,GAEzB,OADAA,EAAIkN,EAAM/D,KAAKoE,MAAMvN,GAAI,MACjBA,EAAI,GAAK,IAAM,IAAMA,EAAEwN,SAAS,OACzCvC,KAAK,IAxLZyB,EAAMnL,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACxC5B,KAAM,QACNgG,KAAM,WACF,IAAIjN,EAAIoB,KAAK8K,IAAI,GAAK,IAAKgB,EAAI9L,KAAK8K,IAAI,GAAK,IAAKjB,EAAI7J,KAAK8K,IAAI,GAAK,IAIpE,OAHAlM,EAAKA,GAAK,OAAWA,EAAI,MAAQ0I,KAAKyE,KAAMnN,EAAI,MAAS,MAAQ,KACjEkN,EAAKA,GAAK,OAAWA,EAAI,MAAQxE,KAAKyE,KAAMD,EAAI,MAAS,MAAQ,KACjEjC,EAAKA,GAAK,OAAWA,EAAI,MAAQvC,KAAKyE,KAAMlC,EAAI,MAAS,MAAQ,KAC1D,MAASjL,EAAI,MAASkN,EAAI,MAASjC,GAE9Cd,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAK4I,MAAMC,KAE1BD,MAAO,SAAUC,EAASmD,GACtB,IACIzL,EACA4K,EACAc,EAHA7L,EAAWyI,GAAWA,EAAQzI,WAAa4L,EAI3CE,EAAO,GAKX,GADAf,EAAQnL,KAAK8J,OAAOjB,EAAS7I,KAAKmL,OAC9BnL,KAAKjB,MACL,GAAkC,IAA9BiB,KAAKjB,MAAMoN,QAAQ,OACfhB,EAAQ,IACRc,EAAgB,YAGnB,IAAkC,IAA9BjM,KAAKjB,MAAMoN,QAAQ,OASxB,OAAOnM,KAAKjB,MAPRkN,EADAd,EAAQ,EACQ,OAGA,WAQpBA,EAAQ,IACRc,EAAgB,QAGxB,OAAQA,GACJ,IAAK,OACDC,EAAOlM,KAAK8K,IAAIG,KAAI,SAAU9M,GAC1B,OAAOkN,EAAM/D,KAAKoE,MAAMvN,GAAI,QAC7BkI,OAAOgF,EAAMF,EAAO,IACvB,MACJ,IAAK,OACDe,EAAKxG,KAAK2F,EAAMF,EAAO,IAC3B,IAAK,MACD5K,EAAQP,KAAKoM,QACbF,EAAO,CACHlM,KAAK8J,OAAOjB,EAAStI,EAAM8L,GAC3BrM,KAAK8J,OAAOjB,EAAmB,IAAVtI,EAAMV,GAAW,IACtCG,KAAK8J,OAAOjB,EAAmB,IAAVtI,EAAMxC,GAAW,KACxCsI,OAAO6F,GAEjB,GAAID,EAEA,OAAOA,EAAgB,IAAMC,EAAK9C,KAAK,KAAOhJ,EAAW,GAAK,MAAQ,IAG1E,GADAG,EAAQP,KAAKsM,QACTlM,EAAU,CACV,IAAImM,EAAahM,EAAM6K,MAAM,IAEzBmB,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAAOA,EAAW,IAAMA,EAAW,KAAOA,EAAW,KACnGhM,EAAQ,IAAMgM,EAAW,GAAKA,EAAW,GAAKA,EAAW,IAGjE,OAAOhM,GAQXiM,QAAS,SAAU3D,EAASc,EAAI8C,GAG5B,IAFA,IAAI3B,EAAM,IAAIxC,MAAM,GAChB6C,EAAQnL,KAAKmL,OAAS,EAAIsB,EAAMtB,OAASsB,EAAMtB,MAC1ChN,EAAI,EAAGA,EAAI,EAAGA,IACnB2M,EAAI3M,GAAK6B,KAAK0J,SAASb,EAASc,EAAI3J,KAAK8K,IAAI3M,GAAIsO,EAAM3B,IAAI3M,IAE/D,OAAO,IAAI0M,EAAMC,EAAKK,IAE1BmB,MAAO,WACH,OAAOb,EAAMzL,KAAK8K,MAEtBsB,MAAO,WACH,IAEIC,EACAxM,EAHAjB,EAAIoB,KAAK8K,IAAI,GAAK,IAAKgB,EAAI9L,KAAK8K,IAAI,GAAK,IAAKjB,EAAI7J,KAAK8K,IAAI,GAAK,IAAKlB,EAAI5J,KAAKmL,MAC9EI,EAAMjE,KAAKiE,IAAI3M,EAAGkN,EAAGjC,GAAI2B,EAAMlE,KAAKkE,IAAI5M,EAAGkN,EAAGjC,GAG9C9L,GAAKwN,EAAMC,GAAO,EAClBpN,EAAImN,EAAMC,EACd,GAAID,IAAQC,EACRa,EAAIxM,EAAI,MAEP,CAED,OADAA,EAAI9B,EAAI,GAAMK,GAAK,EAAImN,EAAMC,GAAOpN,GAAKmN,EAAMC,GACvCD,GACJ,KAAK3M,EACDyN,GAAKP,EAAIjC,GAAKzL,GAAK0N,EAAIjC,EAAI,EAAI,GAC/B,MACJ,KAAKiC,EACDO,GAAKxC,EAAIjL,GAAKR,EAAI,EAClB,MACJ,KAAKyL,EACDwC,GAAKzN,EAAIkN,GAAK1N,EAAI,EAClB,MAERiO,GAAK,EAET,MAAO,CAAEA,EAAO,IAAJA,EAASxM,EAAGA,EAAG9B,EAAGA,EAAG6L,EAAGA,IAGxC8C,MAAO,WACH,IAEIL,EACAxM,EAHAjB,EAAIoB,KAAK8K,IAAI,GAAK,IAAKgB,EAAI9L,KAAK8K,IAAI,GAAK,IAAKjB,EAAI7J,KAAK8K,IAAI,GAAK,IAAKlB,EAAI5J,KAAKmL,MAC9EI,EAAMjE,KAAKiE,IAAI3M,EAAGkN,EAAGjC,GAAI2B,EAAMlE,KAAKkE,IAAI5M,EAAGkN,EAAGjC,GAG9CyB,EAAIC,EACJnN,EAAImN,EAAMC,EAOd,GALI3L,EADQ,IAAR0L,EACI,EAGAnN,EAAImN,EAERA,IAAQC,EACRa,EAAI,MAEH,CACD,OAAQd,GACJ,KAAK3M,EACDyN,GAAKP,EAAIjC,GAAKzL,GAAK0N,EAAIjC,EAAI,EAAI,GAC/B,MACJ,KAAKiC,EACDO,GAAKxC,EAAIjL,GAAKR,EAAI,EAClB,MACJ,KAAKyL,EACDwC,GAAKzN,EAAIkN,GAAK1N,EAAI,EAClB,MAERiO,GAAK,EAET,MAAO,CAAEA,EAAO,IAAJA,EAASxM,EAAGA,EAAGyL,EAAGA,EAAG1B,EAAGA,IAExC+C,OAAQ,WACJ,OAAOlB,EAAM,CAAc,IAAbzL,KAAKmL,OAAa9E,OAAOrG,KAAK8K,OAEhDX,QAAS,SAAUyC,GACf,OAAQA,EAAE9B,KACN8B,EAAE9B,IAAI,KAAO9K,KAAK8K,IAAI,IACtB8B,EAAE9B,IAAI,KAAO9K,KAAK8K,IAAI,IACtB8B,EAAE9B,IAAI,KAAO9K,KAAK8K,IAAI,IACtB8B,EAAEzB,QAAUnL,KAAKmL,MAAS,OAAIpH,KAG1C8G,EAAMgC,YAAc,SAAUC,GAC1B,IAAI3O,EACAkB,EAAMyN,EAAQC,cAOlB,GANI7F,EAAOvH,eAAeN,GACtBlB,EAAI,IAAI0M,EAAM3D,EAAO7H,GAAK2N,MAAM,IAEnB,gBAAR3N,IACLlB,EAAI,IAAI0M,EAAM,CAAC,EAAG,EAAG,GAAI,IAEzB1M,EAEA,OADAA,EAAEY,MAAQ+N,EACH3O,GAaf,IAAI8O,EAAQ,SAAU5E,GAClBrI,KAAKjB,MAAQsJ,GAEjB4E,EAAMvN,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACxC5B,KAAM,QACNkD,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAI,KACXhJ,KAAKjB,MAAMgK,OAAOF,EAASQ,GAC3BA,EAAOL,IAAI,MAEfS,KAAM,SAAUZ,GACZ,OAAO,IAAIoE,EAAMjN,KAAKjB,MAAM0K,KAAKZ,OAIzC,IAAIqE,EAAsB,CACtB,IAAI,EACJ,KAAK,EACL,KAAK,GAELC,EAAa,SAAUpO,GACT,MAAVA,GACAiB,KAAKjB,MAAQ,IACbiB,KAAKoN,mBAAoB,IAGzBpN,KAAKjB,MAAQA,EAAQA,EAAMsO,OAAS,GACpCrN,KAAKoN,kBAAmC,KAAfpN,KAAKjB,QAGtCoO,EAAWzN,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC7C5B,KAAM,aACNkD,OAAQ,SAAUF,EAASQ,GACvB,IAAIiE,EAAgBzE,EAAQzI,UAAY8M,EAAoBlN,KAAKjB,OAAU,GAAK,IAChFsK,EAAOL,IAAIsE,EAAetN,KAAKjB,MAAQuO,MAI/C,IAAIC,EAAU,SAAUC,EAAYzO,EAAO0O,EAAYvE,EAAOwE,EAAiB/C,GAC3E3K,KAAKwN,WAAaA,aAAsBL,EACpCK,EAAa,IAAIL,EAAWK,GAE5BxN,KAAKjB,MADY,kBAAVA,EACMA,EAAMsO,OAEdtO,GAIQ,GAEjBiB,KAAKyN,WAAaA,EAClBzN,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAK4K,mBAAmBD,GACxB3K,KAAKkI,UAAUlI,KAAKwN,WAAYxN,OAEpCuN,EAAQ7N,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC1C5B,KAAM,UACNyD,OAAQ,SAAUC,GACd,IAAIxK,EAAQiB,KAAKjB,MACjBiB,KAAKwN,WAAajE,EAAQC,MAAMxJ,KAAKwN,YAChB,kBAAVzO,IACPiB,KAAKjB,MAAQwK,EAAQC,MAAMzK,KAGnC0K,KAAM,SAAUZ,GACZ,OAAO,IAAI0E,EAAQvN,KAAKwN,WAAYxN,KAAKjB,MAAM0K,KAAOzJ,KAAKjB,MAAM0K,KAAKZ,GAAW7I,KAAKjB,MAAOiB,KAAKyN,WAAYzN,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2K,mBAEzJgD,MAAO,WACH,OAAO,IAAIJ,EAAQvN,KAAKwN,WAAYxN,KAAKjB,MAAOiB,KAAKyN,WAAYzN,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2K,mBAE5G5B,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAK4I,MAAMC,GAAU7I,KAAKgI,WAAYhI,KAAKiI,aAE1DW,MAAO,SAAUC,GACbA,EAAUA,GAAW,GACrB,IAAI9J,EAAQiB,KAAKjB,MACb6O,EAAgB/E,EAAQ+E,cAQ5B,OAPI7O,aAAiBkO,IAGjBpE,EAAQ+E,eAAgB,GAE5B7O,EAAQA,EAAM6J,MAAQ7J,EAAM6J,MAAMC,GAAW9J,EAC7C8J,EAAQ+E,cAAgBA,EACV,KAAV7O,GAAoD,MAApCiB,KAAKwN,WAAWzO,MAAM8O,OAAO,GACtC,GAGA7N,KAAKwN,WAAW5E,MAAMC,GAAW9J,KAKpD,IAAI+O,EAAS,CACTC,OAAQ,EACRC,gBAAiB,EACjBC,OAAQ,GAGRC,EAAc,CACdC,IAAK,EACLC,MAAO,EACPC,IAAK,GAST,SAASC,EAAQC,GACb,OAAO/P,OAAOkB,UAAUiM,SAAS1N,KAAKsQ,GAASvB,MAAM,GAAI,GAQ7D,SAASwB,EAAcD,GACnB,MAAyB,WAArBD,EAAQC,KAELA,EAAQE,cAAgBjQ,QAAUA,OAAOkQ,eAAeH,KAAa/P,OAAOkB,WAQvF,SAAS6I,EAAQgG,GACb,MAA4B,UAArBD,EAAQC;;;;;;;;;;;;;;oFAkBnB,SAASI,IACL,IAAK,IAAI9O,EAAI,EAAG/B,EAAI,EAAG8Q,EAAKC,UAAU/L,OAAQhF,EAAI8Q,EAAI9Q,IAAK+B,GAAKgP,UAAU/Q,GAAGgF,OACxE,IAAIlE,EAAI0J,MAAMzI,GAAIiP,EAAI,EAA3B,IAA8BhR,EAAI,EAAGA,EAAI8Q,EAAI9Q,IACzC,IAAK,IAAI8L,EAAIiF,UAAU/Q,GAAIiR,EAAI,EAAGC,EAAKpF,EAAE9G,OAAQiM,EAAIC,EAAID,IAAKD,IAC1DlQ,EAAEkQ,GAAKlF,EAAEmF,GACjB,OAAOnQ,EAGX,SAASqQ,EAAWC,EAAO7P,EAAK8P,EAAQC,EAAgBC,GACpD,IAAIC,EAAW,GAAGC,qBAAqBtR,KAAKmR,EAAgB/P,GACtD,aACA,gBACW,eAAbiQ,IACAJ,EAAM7P,GAAO8P,GACbE,GAAqC,kBAAbC,GACxB9Q,OAAOC,eAAeyQ,EAAO7P,EAAK,CAC9BN,MAAOoQ,EACPzQ,YAAY,EACZ8Q,UAAU,EACVC,cAAc,IAc1B,SAASC,EAAKC,EAAQtO,GAElB,QADgB,IAAZA,IAAsBA,EAAU,IAChCkH,EAAQoH,GACR,OAAOA,EAAO1E,KAAI,SAAUnN,GAAK,OAAO4R,EAAK5R,EAAGuD,MACpD,IAAKmN,EAAcmB,GACf,OAAOA,EACX,IAAIC,EAAQpR,OAAOqR,oBAAoBF,GACnCG,EAAUtR,OAAOuR,sBAAsBJ,GAC3C,OAAOhB,EAAeiB,EAAOE,GAASE,QAAO,SAAUd,EAAO7P,GAC1D,GAAIkJ,EAAQlH,EAAQuO,SAAWvO,EAAQuO,MAAMK,SAAS5Q,GAClD,OAAO6P,EAEX,IAAIgB,EAAMP,EAAOtQ,GACb8P,EAASO,EAAKQ,EAAK7O,GAEvB,OADA4N,EAAWC,EAAO7P,EAAK8P,EAAQQ,EAAQtO,EAAQ8O,eACxCjB,IACR,IAIP,SAASkB,EAAYlH,EAAOmH,GACxB,IAAI9Q,EAAI2J,EAAQ,EACZoH,EAAO,KACPC,GAAU,EACd,QAAShR,GAAK,GAA+B,OAA1B8Q,EAAYxC,OAAOtO,GAClCgR,IAKJ,MAHqB,kBAAVrH,IACPoH,GAAQD,EAAYrD,MAAM,EAAG9D,GAAO8B,MAAM,QAAU,IAAIlI,QAErD,CACHwN,KAAMA,EACNC,OAAQA,GAGhB,SAASC,EAAUC,GACf,IAAI3S,EACAgF,EAAS2N,EAAI3N,OACb4M,EAAO,IAAIpH,MAAMxF,GACrB,IAAKhF,EAAI,EAAGA,EAAIgF,EAAQhF,IACpB4R,EAAK5R,GAAK2S,EAAI3S,GAElB,OAAO4R,EAEX,SAAS/B,EAAM+C,GACX,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAQF,EACTA,EAAI/Q,eAAeiR,KACnBD,EAAOC,GAAQF,EAAIE,IAG3B,OAAOD,EAEX,SAASE,EAASC,EAAMC,GACpB,IAAIC,EAASD,GAAQ,GACrB,IAAKA,EAAKE,UAAW,CACjBD,EAAS,GACT,IAAIE,EAAaxB,EAAKoB,GACtBE,EAAOC,UAAYC,EACnB,IAAIP,EAASI,EAAOrB,EAAKqB,GAAQ,GACjCvS,OAAOoN,OAAOoF,EAAQE,EAAYP,GAEtC,OAAOK,EAEX,SAASG,EAAYL,EAAMC,GACvB,GAAIA,GAAQA,EAAKE,UACb,OAAOF,EAEX,IAAIK,EAAOP,EAASC,EAAMC,GAQ1B,GAPIK,EAAKC,aACLD,EAAKxQ,KAAOkN,EAAOG,QAGnBmD,EAAKrM,eACLqM,EAAKzQ,YAAcuN,EAAYG,KAEV,kBAAd+C,EAAKxQ,KACZ,OAAQwQ,EAAKxQ,KAAKmM,eACd,IAAK,SACDqE,EAAKxQ,KAAOkN,EAAOC,OACnB,MACJ,IAAK,kBACDqD,EAAKxQ,KAAOkN,EAAOE,gBACnB,MACJ,IAAK,SACL,IAAK,SACDoD,EAAKxQ,KAAOkN,EAAOG,OACnB,MACJ,QACImD,EAAKxQ,KAAOkN,EAAOG,OAG/B,GAAgC,kBAArBmD,EAAKzQ,YACZ,OAAQyQ,EAAKzQ,YAAYoM,eACrB,IAAK,MACDqE,EAAKzQ,YAAcuN,EAAYC,IAC/B,MACJ,IAAK,QACDiD,EAAKzQ,YAAcuN,EAAYE,MAC/B,MACJ,IAAK,MACDgD,EAAKzQ,YAAcuN,EAAYG,IAC/B,MAGZ,OAAO+C,EAEX,SAASE,EAAMR,EAAMC,GACjB,IAAK,IAAIH,KAAQG,EACTA,EAAKpR,eAAeiR,KACpBE,EAAKF,GAAQG,EAAKH,IAG1B,OAAOE,EAEX,SAASS,EAAad,EAAKe,QACR,IAAXA,IAAqBA,EAAS,IAClC,IAAK,IAAI1T,EAAI,EAAG2T,EAAWhB,EAAI3N,OAAQhF,EAAI2T,EAAU3T,IAAK,CACtD,IAAIiB,EAAQ0R,EAAI3S,GACZwK,MAAMC,QAAQxJ,GACdwS,EAAaxS,EAAOyS,QAGNzN,IAAVhF,GACAyS,EAAO9L,KAAK3G,GAIxB,OAAOyS,EAGX,IAAIE,EAAqBlT,OAAOmT,OAAO,CACnCC,UAAW,KACXxB,YAAaA,EACbI,UAAWA,EACX7C,MAAOA,EACPkD,SAAUA,EACVM,YAAaA,EACbG,MAAOA,EACPC,aAAcA,IAGdM,EAAgB,qCAuBhBC,EAAY,SAAUrO,EAAGsO,EAAgBC,GACzCtO,MAAMzF,KAAK+B,MACX,IAAIyG,EAAWhD,EAAEgD,UAAYuL,EAG7B,GAFAhS,KAAKiS,QAAUxO,EAAEwO,QACjBjS,KAAKkS,MAAQzO,EAAEyO,MACXH,GAAkBtL,EAAU,CAC5B,IAAI0L,EAAQJ,EAAeK,SAAS3L,GAChC4L,EAAMjC,EAAY3M,EAAEyF,MAAOiJ,GAC3B7B,EAAO+B,EAAI/B,KACXgC,EAAMD,EAAI9B,OACVgC,EAAW9O,EAAExF,MAAQmS,EAAY3M,EAAExF,KAAMkU,GAAO7B,KAChDkC,EAAQL,EAAQA,EAAM/G,MAAM,MAAQ,GAMxC,GALApL,KAAK6F,KAAOpC,EAAEoC,MAAQ,SACtB7F,KAAKyG,SAAWA,EAChBzG,KAAKkJ,MAAQzF,EAAEyF,MACflJ,KAAKsQ,KAAuB,kBAATA,EAAoBA,EAAO,EAAI,KAClDtQ,KAAKuQ,OAAS+B,GACTtS,KAAKsQ,MAAQtQ,KAAKkS,MAAO,CAC1B,IAAIO,EAAQzS,KAAKkS,MAAMlH,MAAM6G,GAQzBa,EAAO,IAAIC,SAAS,IAAK,qBACzBC,EAAa,EACjB,IACIF,IAEJ,MAAOjP,GACH,IAAIuH,EAAQvH,EAAEyO,MAAMlH,MAAM6G,GACtBvB,EAAOpF,SAASF,EAAM,IAC1B4H,EAAa,EAAItC,EAEjBmC,IACIA,EAAM,KACNzS,KAAKsQ,KAAOpF,SAASuH,EAAM,IAAMG,GAEjCH,EAAM,KACNzS,KAAKuQ,OAASrF,SAASuH,EAAM,MAIzCzS,KAAKuS,SAAWA,EAAW,EAC3BvS,KAAK6S,YAAcL,EAAMD,GACzBvS,KAAK8S,QAAU,CACXN,EAAMxS,KAAKsQ,KAAO,GAClBkC,EAAMxS,KAAKsQ,KAAO,GAClBkC,EAAMxS,KAAKsQ,SAIvB,GAA6B,qBAAlB9R,OAAOY,OAAwB,CACtC,IAAI2T,EAAI,aACRA,EAAErT,UAAYgE,MAAMhE,UACpBoS,EAAUpS,UAAY,IAAIqT,OAG1BjB,EAAUpS,UAAYlB,OAAOY,OAAOsE,MAAMhE,WAE9CoS,EAAUpS,UAAU+O,YAAcqD,EAQlCA,EAAUpS,UAAUiM,SAAW,SAAUtK,GACrCA,EAAUA,GAAW,GACrB,IAAI4Q,EAAU,GACVa,EAAU9S,KAAK8S,SAAW,GAC1B7N,EAAQ,GACR+N,EAAU,SAAUC,GAAO,OAAOA,GACtC,GAAI5R,EAAQ2R,QAAS,CACjB,IAAInN,SAAcxE,EAAQ2R,QAC1B,GAAa,aAATnN,EACA,MAAMnC,MAAM,+CAAiDmC,EAAO,KAExEmN,EAAU3R,EAAQ2R,QAEtB,GAAkB,OAAdhT,KAAKsQ,KAAe,CAIpB,GAH0B,kBAAfwC,EAAQ,IACf7N,EAAMS,KAAKsN,EAAQhT,KAAKsQ,KAAO,EAAI,IAAMwC,EAAQ,GAAI,SAE/B,kBAAfA,EAAQ,GAAiB,CAChC,IAAII,EAAWlT,KAAKsQ,KAAO,IACvBwC,EAAQ,KACRI,GAAYJ,EAAQ,GAAG9F,MAAM,EAAGhN,KAAKuQ,QACjCyC,EAAQA,EAAQA,EAAQF,EAAQ,GAAGK,OAAOnT,KAAKuQ,OAAQ,GAAI,QACvDuC,EAAQ,GAAG9F,MAAMhN,KAAKuQ,OAAS,GAAI,OAAQ,YAEvDtL,EAAMS,KAAKwN,GAEW,kBAAfJ,EAAQ,IACf7N,EAAMS,KAAKsN,EAAQhT,KAAKsQ,KAAO,EAAI,IAAMwC,EAAQ,GAAI,SAEzD7N,EAAQA,EAAMmE,KAAK,MAAQ4J,EAAQ,GAAI,SAAW,KActD,OAZAf,GAAWe,EAAQhT,KAAK6F,KAAO,UAAY7F,KAAKiS,QAAS,OACrDjS,KAAKyG,WACLwL,GAAWe,EAAQ,OAAQ,OAAShT,KAAKyG,UAEzCzG,KAAKsQ,OACL2B,GAAWe,EAAQ,YAAchT,KAAKsQ,KAAO,aAAetQ,KAAKuQ,OAAS,GAAK,IAAK,SAExF0B,GAAW,KAAOhN,EACdjF,KAAKuS,WACLN,GAAWe,EAAQ,QAAS,QAAUhT,KAAKyG,UAAY,IAAM,KAC7DwL,GAAWe,EAAQhT,KAAKuS,SAAU,QAAU,IAAMvS,KAAK6S,YAAc,MAElEZ,GAGX,IAAImB,EAAW,SAAUC,EAAUC,EAAYC,EAAWrK,EAAOwE,EAAiB/C,GAC9E3K,KAAKsT,WAAaA,EAClBtT,KAAKuT,UAAYA,EACjBvT,KAAKwT,gBAAkBD,EACvBvT,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKqT,SAAWrT,KAAKyT,YAAYJ,GACjCrT,KAAK0T,oBAAiB3P,EACtB/D,KAAK4K,mBAAmBD,GACxB3K,KAAKkI,UAAUlI,KAAKqT,SAAUrT,OAElCoT,EAAS1T,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC3C5B,KAAM,WACNyD,OAAQ,SAAUC,GACVvJ,KAAKqT,WACLrT,KAAKqT,SAAW9J,EAAQoK,WAAW3T,KAAKqT,WAExCrT,KAAKsT,aACLtT,KAAKsT,WAAa/J,EAAQoK,WAAW3T,KAAKsT,aAE1CtT,KAAKuT,YACLvT,KAAKuT,UAAYhK,EAAQC,MAAMxJ,KAAKuT,aAG5CK,cAAe,SAAUP,EAAUC,EAAYE,GAC3CH,EAAWrT,KAAKyT,YAAYJ,GAC5B,IAAIQ,EAAc,IAAIT,EAASC,EAAUC,GAActT,KAAKsT,WAAY,KAAMtT,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2K,kBAGrH,OAFAkJ,EAAYL,eAAoC,MAAlBA,EAA0BA,EAAiBxT,KAAKwT,eAC9EK,EAAYC,WAAa9T,KAAK8T,WACvBD,GAEXJ,YAAa,SAAUM,GACnB,OAAKA,GAGc,kBAARA,GACP/T,KAAK0B,MAAMsS,UAAUD,EAAK,CAAC,YAAa/T,KAAKyI,OAAQzI,KAAK0I,WAAW,SAAUuL,EAAKzC,GAChF,GAAIyC,EACA,MAAM,IAAInC,EAAU,CAChB5I,MAAO+K,EAAI/K,MACX+I,QAASgC,EAAIhC,SACdjS,KAAK0B,MAAMwS,QAASlU,KAAK0I,UAAUjC,UAE1CsN,EAAMvC,EAAO,GAAG6B,YAGjBU,GAbI,CAAC,IAAIxG,EAAQ,GAAI,KAAK,EAAOvN,KAAKyI,OAAQzI,KAAK0I,aAe9DyL,qBAAsB,WAClB,IAAIC,EAAK,IAAI7G,EAAQ,GAAI,KAAK,EAAOvN,KAAKyI,OAAQzI,KAAK0I,WAAY2L,EAAO,CAAC,IAAIjB,EAAS,CAACgB,GAAK,KAAM,KAAMpU,KAAKyI,OAAQzI,KAAK0I,YAE5H,OADA2L,EAAK,GAAGP,YAAa,EACdO,GAEXrJ,MAAO,SAAUyB,GACb,IAEI6H,EACAxW,EAHAuV,EAAWrT,KAAKqT,SAChBkB,EAAMlB,EAASvQ,OAKnB,GAFA2J,EAAQA,EAAM+H,gBACdF,EAAO7H,EAAM3J,OACA,IAATwR,GAAcC,EAAMD,EACpB,OAAO,EAGP,IAAKxW,EAAI,EAAGA,EAAIwW,EAAMxW,IAClB,GAAIuV,EAASvV,GAAGiB,QAAU0N,EAAM3O,GAC5B,OAAO,EAInB,OAAOwW,GAEXE,cAAe,WACX,GAAIxU,KAAK0T,eACL,OAAO1T,KAAK0T,eAEhB,IAAIL,EAAWrT,KAAKqT,SAASpI,KAAI,SAAUK,GACvC,OAAOA,EAAEkC,WAAWzO,OAASuM,EAAEvM,MAAMA,OAASuM,EAAEvM,UACjDqK,KAAK,IAAI4B,MAAM,+BASlB,OARIqI,EACoB,MAAhBA,EAAS,IACTA,EAASoB,QAIbpB,EAAW,GAEPrT,KAAK0T,eAAiBL,GAElCqB,qBAAsB,WAClB,OAAQ1U,KAAK8T,YACgB,IAAzB9T,KAAKqT,SAASvQ,QACa,MAA3B9C,KAAKqT,SAAS,GAAGtU,QACsB,MAAtCiB,KAAKqT,SAAS,GAAG7F,WAAWzO,OAAuD,KAAtCiB,KAAKqT,SAAS,GAAG7F,WAAWzO,QAElF0K,KAAM,SAAUZ,GACZ,IAAI2K,EAAiBxT,KAAKuT,WAAavT,KAAKuT,UAAU9J,KAAKZ,GACvDwK,EAAWrT,KAAKqT,SAChBC,EAAatT,KAAKsT,WAGtB,OAFAD,EAAWA,GAAYA,EAASpI,KAAI,SAAUxH,GAAK,OAAOA,EAAEgG,KAAKZ,MACjEyK,EAAaA,GAAcA,EAAWrI,KAAI,SAAU0J,GAAU,OAAOA,EAAOlL,KAAKZ,MAC1E7I,KAAK4T,cAAcP,EAAUC,EAAYE,IAEpDzK,OAAQ,SAAUF,EAASQ,GACvB,IAAIvL,EAAG8W,EAIP,IAHM/L,GAAYA,EAAQ+E,eAAwD,KAAtC5N,KAAKqT,SAAS,GAAG7F,WAAWzO,OACpEsK,EAAOL,IAAI,IAAKhJ,KAAKgI,WAAYhI,KAAKiI,YAErCnK,EAAI,EAAGA,EAAIkC,KAAKqT,SAASvQ,OAAQhF,IAClC8W,EAAU5U,KAAKqT,SAASvV,GACxB8W,EAAQ7L,OAAOF,EAASQ,IAGhCwL,YAAa,WACT,OAAO7U,KAAKwT,kBAIpB,IAAIsB,EAAQ,SAAU/V,GAClB,IAAKA,EACD,MAAM,IAAI2E,MAAM,oCAEf4E,MAAMC,QAAQxJ,GAIfiB,KAAKjB,MAAQA,EAHbiB,KAAKjB,MAAQ,CAACA,IAMtB+V,EAAMpV,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACxC5B,KAAM,QACNyD,OAAQ,SAAUC,GACVvJ,KAAKjB,QACLiB,KAAKjB,MAAQwK,EAAQoK,WAAW3T,KAAKjB,SAG7C0K,KAAM,SAAUZ,GACZ,OAA0B,IAAtB7I,KAAKjB,MAAM+D,OACJ9C,KAAKjB,MAAM,GAAG0K,KAAKZ,GAGnB,IAAIiM,EAAM9U,KAAKjB,MAAMkM,KAAI,SAAUK,GACtC,OAAOA,EAAE7B,KAAKZ,QAI1BE,OAAQ,SAAUF,EAASQ,GACvB,IAAIvL,EACJ,IAAKA,EAAI,EAAGA,EAAIkC,KAAKjB,MAAM+D,OAAQhF,IAC/BkC,KAAKjB,MAAMjB,GAAGiL,OAAOF,EAASQ,GAC1BvL,EAAI,EAAIkC,KAAKjB,MAAM+D,QACnBuG,EAAOL,IAAKH,GAAWA,EAAQzI,SAAY,IAAM,SAMjE,IAAI2U,EAAU,SAAUhW,GACpBiB,KAAKjB,MAAQA,GAEjBgW,EAAQrV,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC1C5B,KAAM,UACNkD,OAAQ,SAAUF,EAASQ,GACvB,GAAmB,MAAfrJ,KAAKjB,MACL,KAAM,CAAE8G,KAAM,SAAUoM,QAAS,4BAErC5I,EAAOL,IAAIhJ,KAAKjB,UAGxBgW,EAAQC,KAAO,IAAID,EAAQ,QAC3BA,EAAQE,MAAQ,IAAIF,EAAQ,SAE5B,IAAIG,EAAY,SAAUnW,EAAOmK,EAAOwE,EAAiByH,EAAUC,EAAazK,GAC5E3K,KAAKjB,MAAQA,EACbiB,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKmV,SAAWA,EAChBnV,KAAKoV,YAAsC,qBAAhBA,GAAuCA,EAClEpV,KAAKqV,WAAY,EACjBrV,KAAK4K,mBAAmBD,IAE5BuK,EAAUxV,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACN4D,KAAM,WACF,OAAO,IAAIyL,EAAUlV,KAAKjB,MAAOiB,KAAKyI,OAAQzI,KAAK0I,UAAW1I,KAAKmV,SAAUnV,KAAKoV,YAAapV,KAAK2K,mBAExGR,QAAS,SAAUsC,GACf,OAAOA,EAAM7D,OAAS5I,KAAK4I,UAAY6D,EAAM7D,QAAU,OAAI7E,GAE/D4E,cAAe,WACX,OAAO3I,KAAKoV,aAEhBrM,OAAQ,SAAUF,EAASQ,GACvBrJ,KAAK4H,YAAc0N,QAAQtV,KAAKjB,OAC5BiB,KAAK4H,aACLyB,EAAOL,IAAIhJ,KAAKjB,MAAOiB,KAAK0I,UAAW1I,KAAKyI,OAAQzI,KAAKmV,aAKrE,IAAII,EAAOzH,EACX,SAAS0H,EAAS3M,EAASxK,GACvB,IACIP,EADAiB,EAAQ,GAERQ,EAAIlB,EAAKyE,OACTuG,EAAS,CAAEL,IAAK,SAAUnJ,GAAKd,GAASc,IAC5C,IAAK/B,EAAI,EAAGA,EAAIyB,EAAGzB,IACfO,EAAKP,GAAG2L,KAAKZ,GAASE,OAAOF,EAASQ,GAE1C,OAAOtK,EAEX,IAAI0W,EAAc,SAAUpX,EAAMU,EAAO2W,EAAWpE,EAAOpI,EAAOwE,EAAiBiI,EAAQC,GACvF5V,KAAK3B,KAAOA,EACZ2B,KAAKjB,MAASA,aAAiB0I,EAAQ1I,EAAQ,IAAI+V,EAAM,CAAC/V,EAAQ,IAAImW,EAAUnW,GAAS,OACzFiB,KAAK0V,UAAYA,EAAY,IAAMA,EAAUrI,OAAS,GACtDrN,KAAKsR,MAAQA,EACbtR,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAK2V,OAASA,IAAU,EACxB3V,KAAK4V,cAAyB7R,IAAb6R,EAA0BA,EACpCvX,EAAKwP,QAA8B,MAAnBxP,EAAKwP,OAAO,GACnC7N,KAAKqV,WAAY,EACjBrV,KAAKkI,UAAUlI,KAAKjB,MAAOiB,OAE/ByV,EAAY/V,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC9C5B,KAAM,cACNkD,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAK3B,MAAQwK,EAAQzI,SAAW,IAAM,MAAOJ,KAAKgI,WAAYhI,KAAKiI,YAC9E,IACIjI,KAAKjB,MAAMgK,OAAOF,EAASQ,GAE/B,MAAO5F,GAGH,MAFAA,EAAEyF,MAAQlJ,KAAKyI,OACfhF,EAAEgD,SAAWzG,KAAK0I,UAAUjC,SACtBhD,EAEV4F,EAAOL,IAAIhJ,KAAK0V,WAAc1V,KAAK2V,QAAW9M,EAAQgN,UAAYhN,EAAQzI,SAAa,GAAK,KAAMJ,KAAK0I,UAAW1I,KAAKyI,SAE3HgB,KAAM,SAAUZ,GACZ,IAAwBiN,EAA4BC,EAAhDC,GAAa,EAAiB3X,EAAO2B,KAAK3B,KAAkBuX,EAAW5V,KAAK4V,SAC5D,kBAATvX,IAGPA,EAAwB,IAAhBA,EAAKyE,QAAkBzE,EAAK,aAAc0W,EAC9C1W,EAAK,GAAGU,MAAQyW,EAAS3M,EAASxK,GACtCuX,GAAW,GAGF,SAATvX,GAAmBwK,EAAQjI,OAAS2U,EAAKxH,SACzCiI,GAAa,EACbF,EAAWjN,EAAQjI,KACnBiI,EAAQjI,KAAO2U,EAAKvH,iBAExB,IAGI,GAFAnF,EAAQoN,eAAevQ,KAAK,IAC5BqQ,EAAa/V,KAAKjB,MAAM0K,KAAKZ,IACxB7I,KAAK4V,UAAgC,oBAApBG,EAAWlQ,KAC7B,KAAM,CAAEoM,QAAS,8CACb/I,MAAOlJ,KAAKiI,WAAYxB,SAAUzG,KAAKgI,WAAWvB,UAE1D,IAAIiP,EAAY1V,KAAK0V,UACjBQ,EAAkBrN,EAAQoN,eAAeE,MAI7C,OAHKT,GAAaQ,EAAgBR,YAC9BA,EAAYQ,EAAgBR,WAEzB,IAAID,EAAYpX,EAAM0X,EAAYL,EAAW1V,KAAKsR,MAAOtR,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2V,OAAQC,GAEnH,MAAOnS,GAKH,KAJuB,kBAAZA,EAAEyF,QACTzF,EAAEyF,MAAQlJ,KAAKiI,WACfxE,EAAEgD,SAAWzG,KAAKgI,WAAWvB,UAE3BhD,EAEV,QACQuS,IACAnN,EAAQjI,KAAOkV,KAI3BM,cAAe,WACX,OAAO,IAAIX,EAAYzV,KAAK3B,KAAM2B,KAAKjB,MAAO,aAAciB,KAAKsR,MAAOtR,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2V,WAIvH,IAAIU,EAA2B,WAC3B,SAASA,EAAUxN,EAASyN,EAAKC,GAC7B,IAAI/E,EAAS,GACb,GAAI3I,EAAQnE,kBAAoBmE,EAAQzI,SACpC,OAAQyI,EAAQnE,iBACZ,IAAK,WACD8M,EAAS6E,EAAUG,UAAUF,GAC7B,MACJ,IAAK,aACD9E,EAAS6E,EAAUI,aAAaH,GAChC,MACJ,IAAK,MACD9E,EAAS6E,EAAUG,UAAUF,IAAQC,GAAiB,IAAMF,EAAUI,aAAaH,GACnF,MAGZ,OAAO9E,EAiBX,OAfA6E,EAAUG,UAAY,SAAUF,GAC5B,MAAO,WAAaA,EAAID,UAAUK,WAAa,KAAOJ,EAAID,UAAUM,SAAW,SAEnFN,EAAUI,aAAe,SAAUH,GAC/B,IAAIM,EAAuBN,EAAID,UAAUM,SAIzC,MAHK,gBAAgB1S,KAAK2S,KACtBA,EAAuB,UAAYA,GAEhC,gDAAkDA,EAAqBzV,QAAQ,eAAe,SAAUyI,GAI3G,MAHS,MAALA,IACAA,EAAI,KAED,KAAOA,KACb,4BAA8B0M,EAAID,UAAUK,WAAa,QAE3DL,EAjCmB,GAoC1BQ,EAAU,SAAU9X,EAAO+X,EAAe5N,EAAOwE,GACjD1N,KAAKjB,MAAQA,EACbiB,KAAK8W,cAAgBA,EACrB9W,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKqV,WAAY,GAErBwB,EAAQnX,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC1C5B,KAAM,UACNkD,OAAQ,SAAUF,EAASQ,GACnBrJ,KAAKqW,WACLhN,EAAOL,IAAIqN,EAAUxN,EAAS7I,MAAOA,KAAKgI,WAAYhI,KAAKiI,YAE/DoB,EAAOL,IAAIhJ,KAAKjB,QAEpBgY,SAAU,SAAUlO,GAChB,IAAImO,EAAenO,EAAQzI,UAA8B,MAAlBJ,KAAKjB,MAAM,GAClD,OAAOiB,KAAK8W,eAAiBE,KAIrC,IAAIC,EAAW,GACXC,EAAmB,SAA0BC,EAAUC,EAAaC,GACpE,GAAKF,EAGL,IAAK,IAAIrZ,EAAI,EAAGA,EAAIuZ,EAAiBvU,OAAQhF,IACrCqZ,EAASxX,eAAe0X,EAAiBvZ,MACzCsZ,EAAYC,EAAiBvZ,IAAMqZ,EAASE,EAAiBvZ,MAOrEwZ,EAAsB,CAEtB,QACA,cACA,WACA,gBACA,WACA,kBACA,WACA,aACA,aACA,OACA,eAEA,iBAEA,iBAEJL,EAASM,MAAQ,SAAUlW,GACvB6V,EAAiB7V,EAASrB,KAAMsX,GACN,kBAAftX,KAAKM,QACZN,KAAKM,MAAQ,CAACN,KAAKM,SAG3B,IAAIkX,EAAqB,CACrB,QACA,WACA,OACA,cACA,YACA,iBACA,UACA,oBACA,gBACA,iBACA,eAuFJ,SAASC,EAAeC,GACpB,OAAQ,sBAAsBzT,KAAKyT,GAEvC,SAASC,EAAoBD,GACzB,MAA0B,MAAnBA,EAAK7J,OAAO,GAIvB,SAAS+J,EAAaC,GAClB,MAAO,CACHC,MAAO,GACP9O,IAAK,SAAU3K,EAAMqU,GAGjBrU,EAAOA,EAAK0O,cACR/M,KAAK8X,MAAMnY,eAAetB,GAC9B2B,KAAK8X,MAAMzZ,GAAQqU,GAEvBqF,YAAa,SAAU3R,GACnB,IAAI4R,EAAQhY,KACZxB,OAAOyZ,KAAK7R,GAAWoC,SAAQ,SAAUnK,GACrC2Z,EAAMhP,IAAI3K,EAAM+H,EAAU/H,QAGlCM,IAAK,SAAUN,GACX,OAAO2B,KAAK8X,MAAMzZ,IAAUwZ,GAAQA,EAAKlZ,IAAIN,IAEjD6Z,kBAAmB,WACf,OAAOlY,KAAK8X,OAEhBK,QAAS,WACL,OAAOP,EAAa5X,OAExBZ,OAAQ,SAAUyY,GACd,OAAOD,EAAaC,KAvHhCZ,EAASmB,KAAO,SAAU/W,EAASgX,GAC/BnB,EAAiB7V,EAASrB,KAAMwX,GACN,kBAAfxX,KAAKM,QACZN,KAAKM,MAAQ,CAACN,KAAKM,QAEvBN,KAAKqY,OAASA,GAAU,GACxBrY,KAAKiW,eAAiBjW,KAAKiW,gBAAkB,IAEjDgB,EAASmB,KAAK1Y,UAAU4Y,UAAY,WAC3BtY,KAAKuY,YACNvY,KAAKuY,UAAY,IAErBvY,KAAKuY,UAAU7S,MAAK,GACpB1F,KAAKwY,QAAS,GAElBvB,EAASmB,KAAK1Y,UAAU+Y,SAAW,WAC/BzY,KAAKuY,UAAUpC,MACVnW,KAAKuY,UAAUzV,SAChB9C,KAAKwY,QAAS,IAGtBvB,EAASmB,KAAK1Y,UAAUgZ,cAAgB,WAC/B1Y,KAAK2Y,cACN3Y,KAAK2Y,YAAc,IAEvB3Y,KAAK2Y,YAAYjT,MAAK,IAE1BuR,EAASmB,KAAK1Y,UAAUkZ,iBAAmB,WACvC5Y,KAAK2Y,YAAYxC,OAErBc,EAASmB,KAAK1Y,UAAU8Y,QAAS,EACjCvB,EAASmB,KAAK1Y,UAAUmZ,QAAS,EACjC5B,EAASmB,KAAK1Y,UAAUoZ,SAAW,SAAUnP,GACzC,QAAK3J,KAAK6Y,YAGC,MAAPlP,GAAc3J,KAAKY,OAASkN,EAAOC,QAAY/N,KAAK2Y,aAAgB3Y,KAAK2Y,YAAY7V,YAGrF9C,KAAKY,KAAOkN,EAAOE,kBACZhO,KAAK2Y,aAAe3Y,KAAK2Y,YAAY7V,UAIpDmU,EAASmB,KAAK1Y,UAAUqZ,oBAAsB,SAAUrB,GACpD,IAAIsB,EAAahZ,KAAKW,cAAgBuN,EAAYE,MAAQuJ,EAAsBF,EAChF,OAAOuB,EAAWtB,IAEtBT,EAASmB,KAAK1Y,UAAUuZ,YAAc,SAAUvB,EAAMhX,GAClD,IAAIwY,EAUJ,OATAxY,EAAWA,GAAY,GACvBwY,EAAUlZ,KAAKmZ,cAAczY,EAAWgX,GAGpCC,EAAoBD,IACpBD,EAAe/W,KACkB,IAAjCiX,EAAoBuB,KACpBA,EAAU,KAAOA,GAEdA,GAEXjC,EAASmB,KAAK1Y,UAAUyZ,cAAgB,SAAUzB,GAC9C,IACI0B,EADAC,EAAW3B,EAAKtM,MAAM,KAAKkO,UAE/B5B,EAAO,GACP,MAA2B,IAApB2B,EAASvW,OAEZ,OADAsW,EAAUC,EAASlD,MACXiD,GACJ,IAAK,IACD,MACJ,IAAK,KACoB,IAAhB1B,EAAK5U,QAA4C,OAA1B4U,EAAKA,EAAK5U,OAAS,GAC3C4U,EAAKhS,KAAK0T,GAGV1B,EAAKvB,MAET,MACJ,QACIuB,EAAKhS,KAAK0T,GACV,MAGZ,OAAO1B,EAAKtO,KAAK,MAwCrB,IAAImQ,EAAmB3B,EAAa,MAEhC4B,GAAc,CACd/P,KAAM,WACF,IAAI6B,EAAItL,KAAKyZ,OACThW,EAAIzD,KAAK0Z,OACb,GAAIjW,EACA,MAAMA,EAEV,GAAS,MAAL6H,EACA,OAAOA,EAAIyJ,EAAQC,KAAOD,EAAQE,OAG1ClW,MAAO,SAAUuM,GACbtL,KAAKyZ,OAASnO,GAElBrG,MAAO,SAAUxB,GACbzD,KAAK0Z,OAASjW,GAElBkW,MAAO,WACH3Z,KAAKyZ,OAASzZ,KAAK0Z,OAAS,OAIhCE,GAAU,SAAUC,EAAWC,EAAOtZ,EAAemK,GACrD3K,KAAK6Z,UAAYA,EACjB7Z,KAAK8Z,MAAQA,EACb9Z,KAAK+Z,SAAW,GAChB/Z,KAAKga,WAAa,KAClBha,KAAKia,YAAc,KACnBja,KAAKQ,cAAgBA,EACrBR,KAAK4K,mBAAmBD,GACxB3K,KAAKqV,WAAY,EACjBrV,KAAKkI,UAAUlI,KAAK6Z,UAAW7Z,MAC/BA,KAAKkI,UAAUlI,KAAK8Z,MAAO9Z,OAE/B4Z,GAAQla,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC1C5B,KAAM,UACNqU,WAAW,EACXvR,cAAe,WAAc,OAAO,GACpCW,OAAQ,SAAUC,GACVvJ,KAAKM,MACLN,KAAKM,MAAQiJ,EAAQoK,WAAW3T,KAAKM,OAAO,GAEvCN,KAAK6Z,YACV7Z,KAAK6Z,UAAYtQ,EAAQoK,WAAW3T,KAAK6Z,YAEzC7Z,KAAK8Z,OAAS9Z,KAAK8Z,MAAMhX,SACzB9C,KAAK8Z,MAAQvQ,EAAQoK,WAAW3T,KAAK8Z,SAG7CrQ,KAAM,SAAUZ,GACZ,IAAIgR,EACAM,EACAC,EACAtc,EACAuc,EACAC,GAAwB,EAC5B,GAAIta,KAAK6Z,YAAcM,EAASna,KAAK6Z,UAAU/W,QAAS,CAMpD,IALA+W,EAAY,IAAIvR,MAAM6R,GACtBX,GAAYvU,MAAM,CACdY,KAAM,SACNoM,QAAS,6DAERnU,EAAI,EAAGA,EAAIqc,EAAQrc,IAAK,CACzBsc,EAAWpa,KAAK6Z,UAAU/b,GAAG2L,KAAKZ,GAClC,IAAK,IAAIkG,EAAI,EAAGA,EAAIqL,EAAS/G,SAASvQ,OAAQiM,IAC1C,GAAIqL,EAAS/G,SAAStE,GAAGtB,WAAY,CACjC4M,GAAc,EACd,MAGRR,EAAU/b,GAAKsc,EACXA,EAAS5G,iBACT8G,GAAwB,GAGhC,GAAID,EAAa,CACb,IAAIE,EAAmB,IAAIjS,MAAM6R,GACjC,IAAKrc,EAAI,EAAGA,EAAIqc,EAAQrc,IACpBsc,EAAWP,EAAU/b,GACrByc,EAAiBzc,GAAKsc,EAASxR,MAAMC,GAEzC7I,KAAK0B,MAAMsS,UAAUuG,EAAiBnR,KAAK,KAAM,CAAC,aAAcyQ,EAAU,GAAG5R,WAAY4R,EAAU,GAAG7R,YAAY,SAAUiM,EAAKzC,GACzHA,IACAqI,EAAYtI,EAAaC,OAIrCgI,GAAYG,aAGZW,GAAwB,EAE5B,IAEIE,EACAC,EAHAX,EAAQ9Z,KAAK8Z,MAAQtJ,EAAUxQ,KAAK8Z,OAAS,KAC7CY,EAAU,IAAId,GAAQC,EAAWC,EAAO9Z,KAAKQ,cAAeR,KAAK2K,kBAGrE+P,EAAQC,gBAAkB3a,KAC1B0a,EAAQE,KAAO5a,KAAK4a,KACpBF,EAAQG,UAAY7a,KAAK6a,UACzBH,EAAQI,aAAe9a,KAAK8a,aACxB9a,KAAKqW,YACLqE,EAAQrE,UAAYrW,KAAKqW,WAExBiE,IACDR,EAAMhX,OAAS,GAInB4X,EAAQnB,iBAAoB,SAAUlB,GAIlC,IAHA,IAEI5F,EAFA3U,EAAI,EACJyB,EAAI8Y,EAAOvV,OAERhF,IAAMyB,IAAKzB,EAEd,GADA2U,EAAQ4F,EAAOva,GAAGyb,iBACd9G,EACA,OAAOA,EAGf,OAAO8G,EAVgB,CAWzB1Q,EAAQwP,QAASF,UAEnB,IAAI4C,EAAYlS,EAAQwP,OACxB0C,EAAUC,QAAQN,GAElB,IAAIO,EAAepS,EAAQgR,UACtBoB,IACDpS,EAAQgR,UAAYoB,EAAe,IAEvCA,EAAaD,QAAQhb,KAAK6Z,YAEtBa,EAAQE,MAAQF,EAAQI,eAAiBJ,EAAQla,gBACjDka,EAAQQ,YAAYrS,GAIxB,IAAIsS,EAAUT,EAAQZ,MACtB,IAAKhc,EAAI,EAAI0c,EAAOW,EAAQrd,GAAKA,IACzB0c,EAAKY,YACLD,EAAQrd,GAAK0c,EAAK/Q,KAAKZ,IAG/B,IAAIwS,EAAmBxS,EAAQyS,aAAezS,EAAQyS,YAAYxY,QAAW,EAE7E,IAAKhF,EAAI,EAAI0c,EAAOW,EAAQrd,GAAKA,IACX,cAAd0c,EAAK3U,MAELiU,EAAQU,EAAK/Q,KAAKZ,GAAS0S,QAAO,SAAU3c,GACxC,QAAKA,aAAa6W,GAAgB7W,EAAEgX,YAIvB8E,EAAQ9E,SAAShX,EAAEP,SAIpC8c,EAAQvV,OAAO4V,MAAML,EAAS,CAACrd,EAAG,GAAGuI,OAAOyT,IAC5Chc,GAAKgc,EAAMhX,OAAS,EACpB4X,EAAQe,cAEW,iBAAdjB,EAAK3U,OAEViU,EAAQU,EAAK/Q,KAAKZ,GAASiR,MAAMyB,QAAO,SAAU3c,GAC9C,QAAKA,aAAa6W,GAAgB7W,EAAEgX,aAMxCuF,EAAQvV,OAAO4V,MAAML,EAAS,CAACrd,EAAG,GAAGuI,OAAOyT,IAC5Chc,GAAKgc,EAAMhX,OAAS,EACpB4X,EAAQe,cAIhB,IAAK3d,EAAI,EAAI0c,EAAOW,EAAQrd,GAAKA,IACxB0c,EAAKY,YACND,EAAQrd,GAAK0c,EAAOA,EAAK/Q,KAAO+Q,EAAK/Q,KAAKZ,GAAW2R,GAI7D,IAAK1c,EAAI,EAAI0c,EAAOW,EAAQrd,GAAKA,IAE7B,GAAI0c,aAAgBZ,IAAWY,EAAKX,WAAuC,IAA1BW,EAAKX,UAAU/W,QAExD0X,EAAKX,UAAU,IAAMW,EAAKX,UAAU,GAAGnF,uBAAwB,CAC/DyG,EAAQvV,OAAO9H,IAAK,GACpB,IAASiR,EAAI,EAAI0L,EAAUD,EAAKV,MAAM/K,GAAKA,IACnC0L,aAAmBhT,IACnBgT,EAAQ7P,mBAAmB4P,EAAK7P,kBAC1B8P,aAAmBhF,GAAiBgF,EAAQ7E,UAC9CuF,EAAQvV,SAAS9H,EAAG,EAAG2c,IAU/C,GAFAM,EAAUtG,QACVwG,EAAaxG,QACT5L,EAAQyS,YACR,IAAKxd,EAAIud,EAAiBvd,EAAI+K,EAAQyS,YAAYxY,OAAQhF,IACtD+K,EAAQyS,YAAYxd,GAAG4d,gBAAgB7B,GAG/C,OAAOa,GAEXQ,YAAa,SAAUrS,GACnB,IACI/K,EACA6d,EAFA7B,EAAQ9Z,KAAK8Z,MAGjB,GAAKA,EAGL,IAAKhc,EAAI,EAAGA,EAAIgc,EAAMhX,OAAQhF,IACJ,WAAlBgc,EAAMhc,GAAG+H,OACT8V,EAAc7B,EAAMhc,GAAG2L,KAAKZ,GACxB8S,IAAgBA,EAAY7Y,QAAiC,IAAvB6Y,EAAY7Y,SAClDgX,EAAMlU,OAAO4V,MAAM1B,EAAO,CAAChc,EAAG,GAAGuI,OAAOsV,IACxC7d,GAAK6d,EAAY7Y,OAAS,GAG1BgX,EAAMlU,OAAO9H,EAAG,EAAG6d,GAEvB3b,KAAKyb,eAIjBrF,cAAe,WACX,IAAI5E,EAAS,IAAIoI,GAAQ5Z,KAAK6Z,UAAW7Z,KAAK8Z,MAAM7O,KAAI,SAAUrM,GAC9D,OAAIA,EAAEwX,cACKxX,EAAEwX,gBAGFxX,KAEXoB,KAAKQ,cAAeR,KAAK2K,kBAC7B,OAAO6G,GAEXoK,UAAW,SAAU1P,GACjB,OAAQA,GAAwB,IAAhBA,EAAKpJ,QAGzB+Y,eAAgB,SAAU3P,EAAMrD,GAC5B,IAAIiT,EAAe9b,KAAK6Z,UAAU7Z,KAAK6Z,UAAU/W,OAAS,GAC1D,QAAKgZ,EAAatI,kBAGdsI,EAAavI,YACZuI,EAAavI,UAAU9J,KAAK,IAAIwN,EAASmB,KAAKvP,EAASA,EAAQwP,WAKxEoD,WAAY,WACRzb,KAAK+b,UAAY,KACjB/b,KAAKga,WAAa,KAClBha,KAAKia,YAAc,KACnBja,KAAK+Z,SAAW,IAEpBiC,UAAW,WAoBP,OAnBKhc,KAAKga,aACNha,KAAKga,WAAcha,KAAK8Z,MAAa9Z,KAAK8Z,MAAM9J,QAAO,SAAUpL,EAAMhG,GAOnE,GANIA,aAAa6W,IAA8B,IAAf7W,EAAEgX,WAC9BhR,EAAKhG,EAAEP,MAAQO,GAKJ,WAAXA,EAAEiH,MAAqBjH,EAAEgc,MAAQhc,EAAEgc,KAAKoB,UAAW,CACnD,IAAIC,EAAOrd,EAAEgc,KAAKoB,YAClB,IAAK,IAAIE,KAAUD,EACXA,EAAKtc,eAAeuc,KACpBtX,EAAKsX,GAAUtd,EAAEgc,KAAKhF,SAASsG,IAI3C,OAAOtX,IACR,IAhB6B,IAkB7B5E,KAAKga,YAEhBmC,WAAY,WAiBR,OAhBKnc,KAAKia,cACNja,KAAKia,YAAeja,KAAK8Z,MAAa9Z,KAAK8Z,MAAM9J,QAAO,SAAUpL,EAAMhG,GACpE,GAAIA,aAAa6W,IAA8B,IAAf7W,EAAEgX,SAAmB,CACjD,IAAIwG,EAA4B,IAAlBxd,EAAEP,KAAKyE,QAAkBlE,EAAEP,KAAK,aAAc0W,EACxDnW,EAAEP,KAAK,GAAGU,MAAQH,EAAEP,KAEnBuG,EAAK,IAAMwX,GAIZxX,EAAK,IAAMwX,GAAQ1W,KAAK9G,GAHxBgG,EAAK,IAAMwX,GAAU,CAACxd,GAM9B,OAAOgG,IACR,IAb8B,IAe9B5E,KAAKia,aAEhBrE,SAAU,SAAUvX,GAChB,IAAIge,EAAOrc,KAAKgc,YAAY3d,GAC5B,GAAIge,EACA,OAAOrc,KAAKsc,WAAWD,IAG/B5c,SAAU,SAAUpB,GAChB,IAAIge,EAAOrc,KAAKmc,aAAa9d,GAC7B,GAAIge,EACA,OAAOrc,KAAKsc,WAAWD,IAG/BE,gBAAiB,WACb,IAAK,IAAIze,EAAIkC,KAAK8Z,MAAMhX,OAAQhF,EAAI,EAAGA,IAAK,CACxC,IAAIue,EAAOrc,KAAK8Z,MAAMhc,EAAI,GAC1B,GAAIue,aAAgB5G,EAChB,OAAOzV,KAAKsc,WAAWD,KAInCC,WAAY,SAAUE,GAClB,IAAIzU,EAAO/H,KACX,SAASyc,EAAqBJ,GAC1B,OAAIA,EAAKtd,iBAAiBmW,IAAcmH,EAAKvU,QACT,kBAArBuU,EAAKtd,MAAMA,MAClBiB,KAAK0B,MAAMsS,UAAUqI,EAAKtd,MAAMA,MAAO,CAAC,QAAS,aAAcsd,EAAKtd,MAAMkJ,WAAYoU,EAAKrU,YAAY,SAAUiM,EAAKzC,GAC9GyC,IACAoI,EAAKvU,QAAS,GAEd0J,IACA6K,EAAKtd,MAAQyS,EAAO,GACpB6K,EAAK3G,UAAYlE,EAAO,IAAM,GAC9B6K,EAAKvU,QAAS,MAKtBuU,EAAKvU,QAAS,EAEXuU,GAGAA,EAGf,GAAK/T,MAAMC,QAAQiU,GAGd,CACD,IAAIE,EAAU,GAId,OAHAF,EAAQhU,SAAQ,SAAUjJ,GACtBmd,EAAQhX,KAAK+W,EAAqBxe,KAAK8J,EAAMxI,OAE1Cmd,EAPP,OAAOD,EAAqBxe,KAAK8J,EAAMyU,IAU/CG,SAAU,WACN,IAAK3c,KAAK8Z,MACN,MAAO,GAEX,IAEIhc,EACA0c,EAHAoC,EAAY,GACZ9C,EAAQ9Z,KAAK8Z,MAGjB,IAAKhc,EAAI,EAAI0c,EAAOV,EAAMhc,GAAKA,IACvB0c,EAAKN,WACL0C,EAAUlX,KAAK8U,GAGvB,OAAOoC,GAEXC,YAAa,SAAUrC,GACnB,IAAIV,EAAQ9Z,KAAK8Z,MACbA,EACAA,EAAMkB,QAAQR,GAGdxa,KAAK8Z,MAAQ,CAACU,GAElBxa,KAAKkI,UAAUsS,EAAMxa,OAEzB8c,KAAM,SAAU1C,EAAUrS,EAAMwT,GAC5BxT,EAAOA,GAAQ/H,KACf,IACIgL,EACA+R,EAFAjD,EAAQ,GAGRza,EAAM+a,EAASxR,QACnB,OAAIvJ,KAAOW,KAAK+Z,SACL/Z,KAAK+Z,SAAS1a,IAEzBW,KAAK2c,WAAWnU,SAAQ,SAAUgS,GAC9B,GAAIA,IAASzS,EACT,IAAK,IAAIgH,EAAI,EAAGA,EAAIyL,EAAKX,UAAU/W,OAAQiM,IAEvC,GADA/D,EAAQoP,EAASpP,MAAMwP,EAAKX,UAAU9K,IAClC/D,EAAO,CACP,GAAIoP,EAAS/G,SAASvQ,OAASkI,GAC3B,IAAKuQ,GAAUA,EAAOf,GAAO,CACzBuC,EAAcvC,EAAKsC,KAAK,IAAI1J,EAASgH,EAAS/G,SAASrG,MAAMhC,IAASjD,EAAMwT,GAC5E,IAAK,IAAIzd,EAAI,EAAGA,EAAIif,EAAYja,SAAUhF,EACtCif,EAAYjf,GAAG4Z,KAAKhS,KAAK8U,GAE7BlS,MAAM5I,UAAUgG,KAAK8V,MAAM1B,EAAOiD,SAItCjD,EAAMpU,KAAK,CAAE8U,KAAMA,EAAM9C,KAAM,KAEnC,UAKhB1X,KAAK+Z,SAAS1a,GAAOya,EACdA,IAEX/Q,OAAQ,SAAUF,EAASQ,GACvB,IAAIvL,EACAiR,EAIJiO,EACIxC,EACA9C,EALAuF,EAAmB,GACnBC,EAAY,GAKhBrU,EAAQsU,SAAYtU,EAAQsU,UAAY,EACnCnd,KAAK4a,MACN/R,EAAQsU,WAEZ,IAEIC,EAFAC,EAAaxU,EAAQzI,SAAW,GAAKkI,MAAMO,EAAQsU,SAAW,GAAG/T,KAAK,MACtEkU,EAAYzU,EAAQzI,SAAW,GAAKkI,MAAMO,EAAQsU,UAAU/T,KAAK,MAEjEmU,EAAmB,EACnBC,EAAkB,EACtB,IAAK1f,EAAI,EAAI0c,EAAOxa,KAAK8Z,MAAMhc,GAAKA,IAC5B0c,aAAgB3D,GACZ2G,IAAoB1f,GACpB0f,IAEJN,EAAUxX,KAAK8U,IAEVA,EAAKiD,WAAajD,EAAKiD,aAC5BP,EAAUtX,OAAO2X,EAAkB,EAAG/C,GACtC+C,IACAC,KAEmB,WAAdhD,EAAK3U,MACVqX,EAAUtX,OAAO4X,EAAiB,EAAGhD,GACrCgD,KAGAN,EAAUxX,KAAK8U,GAMvB,GAHA0C,EAAYD,EAAiB5W,OAAO6W,IAG/Bld,KAAK4a,KAAM,CACZoC,EAAc3G,EAAUxN,EAAS7I,KAAMsd,GACnCN,IACA3T,EAAOL,IAAIgU,GACX3T,EAAOL,IAAIsU,IAEf,IAAIhd,EAAQN,KAAKM,MACbod,EAAUpd,EAAMwC,OAChB6a,OAAa,EAEjB,IADAP,EAAMvU,EAAQzI,SAAW,IAAO,MAAQkd,EACnCxf,EAAI,EAAGA,EAAI4f,EAAS5f,IAErB,GADA4Z,EAAOpX,EAAMxC,GACP6f,EAAajG,EAAK5U,OASxB,IANIhF,EAAI,GACJuL,EAAOL,IAAIoU,GAEfvU,EAAQ+E,eAAgB,EACxB8J,EAAK,GAAG3O,OAAOF,EAASQ,GACxBR,EAAQ+E,eAAgB,EACnBmB,EAAI,EAAGA,EAAI4O,EAAY5O,IACxB2I,EAAK3I,GAAGhG,OAAOF,EAASQ,GAGhCA,EAAOL,KAAKH,EAAQzI,SAAW,IAAM,QAAUid,GAGnD,IAAKvf,EAAI,EAAI0c,EAAO0C,EAAUpf,GAAKA,IAAK,CAChCA,EAAI,IAAMof,EAAUpa,SACpB+F,EAAQgN,UAAW,GAEvB,IAAI+H,EAAkB/U,EAAQgN,SAC1B2E,EAAK7R,cAAc6R,KACnB3R,EAAQgN,UAAW,GAEnB2E,EAAKzR,OACLyR,EAAKzR,OAAOF,EAASQ,GAEhBmR,EAAKzb,OACVsK,EAAOL,IAAIwR,EAAKzb,MAAM4M,YAE1B9C,EAAQgN,SAAW+H,GACd/U,EAAQgN,UAAY2E,EAAK9P,YAC1BrB,EAAOL,IAAIH,EAAQzI,SAAW,GAAM,KAAOid,GAG3CxU,EAAQgN,UAAW,EAGtB7V,KAAK4a,OACNvR,EAAOL,IAAKH,EAAQzI,SAAW,IAAM,KAAOkd,EAAY,KACxDzU,EAAQsU,YAEP9T,EAAOF,WAAcN,EAAQzI,WAAYJ,KAAK6a,WAC/CxR,EAAOL,IAAI,OAGnB6U,cAAe,SAAUvd,EAAOuI,EAASgR,GACrC,IAAK,IAAIha,EAAI,EAAGA,EAAIga,EAAU/W,OAAQjD,IAClCG,KAAK8d,aAAaxd,EAAOuI,EAASgR,EAAUha,KAGpDie,aAAc,SAAUxd,EAAOuI,EAASuR,GACpC,SAAS2D,EAAkBC,EAAeC,GACtC,IAAIC,EAAkBnP,EACtB,GAA6B,IAAzBiP,EAAclb,OACdob,EAAmB,IAAIjR,EAAM+Q,EAAc,QAE1C,CACD,IAAIG,EAAe,IAAI7V,MAAM0V,EAAclb,QAC3C,IAAKiM,EAAI,EAAGA,EAAIiP,EAAclb,OAAQiM,IAClCoP,EAAapP,GAAK,IAAIxB,EAAQ,KAAMyQ,EAAcjP,GAAIkP,EAAgBxQ,WAAYwQ,EAAgBxV,OAAQwV,EAAgBvV,WAE9HwV,EAAmB,IAAIjR,EAAM,IAAImG,EAAS+K,IAE9C,OAAOD,EAEX,SAASE,EAAeC,EAAkBJ,GACtC,IAAIrJ,EAASwF,EAGb,OAFAxF,EAAU,IAAIrH,EAAQ,KAAM8Q,EAAkBJ,EAAgBxQ,WAAYwQ,EAAgBxV,OAAQwV,EAAgBvV,WAClH0R,EAAW,IAAIhH,EAAS,CAACwB,IAClBwF,EAKX,SAASkE,EAAuBC,EAAeC,EAASC,EAAiBC,GACrE,IAAIC,EAAiB7C,EAAc8C,EAanC,GAXAD,EAAkB,GAGdJ,EAAczb,OAAS,GACvB6b,EAAkBnO,EAAU+N,GAC5BzC,EAAe6C,EAAgBxI,MAC/ByI,EAAoBF,EAAiB9K,cAAcpD,EAAUsL,EAAazI,YAG1EuL,EAAoBF,EAAiB9K,cAAc,IAEnD4K,EAAQ1b,OAAS,EAAG,CAMpB,IAAI0K,EAAaiR,EAAgBjR,WAC7BqR,EAAWL,EAAQ,GAAGnL,SAAS,GAC/B7F,EAAWJ,oBAAsByR,EAASrR,WAAWJ,oBACrDI,EAAaqR,EAASrR,YAG1BoR,EAAkBvL,SAAS3N,KAAK,IAAI6H,EAAQC,EAAYqR,EAAS9f,MAAO0f,EAAgBhR,WAAYgR,EAAgBhW,OAAQgW,EAAgB/V,YAC5IkW,EAAkBvL,SAAWuL,EAAkBvL,SAAShN,OAAOmY,EAAQ,GAAGnL,SAASrG,MAAM,IAO7F,GAJ0C,IAAtC4R,EAAkBvL,SAASvQ,QAC3B6b,EAAgBjZ,KAAKkZ,GAGrBJ,EAAQ1b,OAAS,EAAG,CACpB,IAAIgc,EAAaN,EAAQxR,MAAM,GAC/B8R,EAAaA,EAAW7T,KAAI,SAAUmP,GAClC,OAAOA,EAASxG,cAAcwG,EAAS/G,SAAU,OAErDsL,EAAkBA,EAAgBtY,OAAOyY,GAE7C,OAAOH,EAKX,SAASI,EAA2BR,EAAeS,EAAUP,EAAiBC,EAAkBlN,GAC5F,IAAIzC,EACJ,IAAKA,EAAI,EAAGA,EAAIwP,EAAczb,OAAQiM,IAAK,CACvC,IAAI4P,EAAkBL,EAAuBC,EAAcxP,GAAIiQ,EAAUP,EAAiBC,GAC1FlN,EAAO9L,KAAKiZ,GAEhB,OAAOnN,EAEX,SAASyN,EAA2B5L,EAAUwG,GAC1C,IAAI/b,EAAGohB,EACP,GAAwB,IAApB7L,EAASvQ,OAGb,GAAyB,IAArB+W,EAAU/W,OAId,IAAKhF,EAAI,EAAIohB,EAAMrF,EAAU/b,GAAKA,IAE1BohB,EAAIpc,OAAS,EACboc,EAAIA,EAAIpc,OAAS,GAAKoc,EAAIA,EAAIpc,OAAS,GAAG8Q,cAAcsL,EAAIA,EAAIpc,OAAS,GAAGuQ,SAAShN,OAAOgN,IAG5F6L,EAAIxZ,KAAK,IAAI0N,EAASC,SAT1BwG,EAAUnU,KAAK,CAAC,IAAI0N,EAASC,KAgBrC,SAAS8L,EAAsB7e,EAAOuI,EAASuW,GAW3C,IAAIthB,EAAGiR,EAAGD,EAAGuQ,EAAiBC,EAAcC,EAAqBL,EAAK9K,EAA+BtR,EAAQgZ,EAAnC0D,GAAoB,EAC9F,SAASC,EAAmB7K,GACxB,IAAI8K,EACJ,OAAM9K,EAAQ7V,iBAAiBkO,GAG/ByS,EAAgB9K,EAAQ7V,MAAMA,MACxB2gB,aAAyBtM,EAGxBsM,EAFI,MAJA,KAgBf,IAPAL,EAAkB,GAIlBC,EAAe,CACX,IAECxhB,EAAI,EAAIsW,EAAKgL,EAAW/L,SAASvV,GAAKA,IAEvC,GAAiB,MAAbsW,EAAGrV,MAAe,CAClB,IAAI4gB,EAAiBF,EAAmBrL,GACxC,GAAsB,MAAlBuL,EAAwB,CAGxBV,EAA2BI,EAAiBC,GAC5C,IAAIM,EAAc,GACdC,OAAW,EACXC,EAAuB,GAI3B,IAHAD,EAAWV,EAAsBS,EAAa/W,EAAS8W,GACvDH,EAAoBA,GAAqBK,EAEpC/Q,EAAI,EAAGA,EAAI8Q,EAAY9c,OAAQgM,IAAK,CACrC,IAAIiR,EAAsB3B,EAAeL,EAAkB6B,EAAY9Q,GAAIsF,GAAKA,GAChF2K,EAA2BO,EAAc,CAACS,GAAsB3L,EAAIgL,EAAYU,GAEpFR,EAAeQ,EACfT,EAAkB,QAGlBA,EAAgB3Z,KAAK0O,OAGxB,CAQD,IAPAoL,GAAoB,EAEpBD,EAAsB,GAGtBN,EAA2BI,EAAiBC,GAEvCvQ,EAAI,EAAGA,EAAIuQ,EAAaxc,OAAQiM,IAIjC,GAHAmQ,EAAMI,EAAavQ,GAGI,IAAnBlG,EAAQ/F,OAGJoc,EAAIpc,OAAS,GACboc,EAAI,GAAG7L,SAAS3N,KAAK,IAAI6H,EAAQ6G,EAAG5G,WAAY,GAAI4G,EAAG3G,WAAY2G,EAAG3L,OAAQ2L,EAAG1L,YAErF6W,EAAoB7Z,KAAKwZ,QAIzB,IAAKpQ,EAAI,EAAGA,EAAIjG,EAAQ/F,OAAQgM,IAAK,CAGjC,IAAI6P,EAAkBL,EAAuBY,EAAKrW,EAAQiG,GAAIsF,EAAIgL,GAElEG,EAAoB7Z,KAAKiZ,GAKrCW,EAAeC,EACfF,EAAkB,GAM1B,IADAJ,EAA2BI,EAAiBC,GACvCxhB,EAAI,EAAGA,EAAIwhB,EAAaxc,OAAQhF,IACjCgF,EAASwc,EAAaxhB,GAAGgF,OACrBA,EAAS,IACTxC,EAAMoF,KAAK4Z,EAAaxhB,IACxBge,EAAewD,EAAaxhB,GAAGgF,EAAS,GACxCwc,EAAaxhB,GAAGgF,EAAS,GAAKgZ,EAAalI,cAAckI,EAAazI,SAAU+L,EAAW9L,aAGnG,OAAOkM,EAEX,SAASQ,EAAerV,EAAgBsV,GACpC,IAAIpM,EAAcoM,EAAWrM,cAAcqM,EAAW5M,SAAU4M,EAAW3M,WAAY2M,EAAWzM,gBAElG,OADAK,EAAYjJ,mBAAmBD,GACxBkJ,EAGX,IAAI/V,EAAGoiB,EAAUV,EAGjB,GAFAU,EAAW,GACXV,EAAoBL,EAAsBe,EAAUrX,EAASuR,IACxDoF,EACD,GAAI3W,EAAQ/F,OAAS,EAEjB,IADAod,EAAW,GACNpiB,EAAI,EAAGA,EAAI+K,EAAQ/F,OAAQhF,IAAK,CACjC,IAAIqiB,EAAetX,EAAQ/K,GAAGmN,IAAI+U,EAAe1gB,KAAKU,KAAMoa,EAASzP,mBACrEwV,EAAaza,KAAK0U,GAClB8F,EAASxa,KAAKya,QAIlBD,EAAW,CAAC,CAAC9F,IAGrB,IAAKtc,EAAI,EAAGA,EAAIoiB,EAASpd,OAAQhF,IAC7BwC,EAAMoF,KAAKwa,EAASpiB,OAKhC,IAAIsiB,GAAS,SAAU/hB,EAAMU,EAAO+a,EAAO5Q,EAAOwE,EAAiB2I,EAAWgK,EAAU1V,GACpF,IAAI7M,EAGJ,GAFAkC,KAAK3B,KAAOA,EACZ2B,KAAKjB,MAASA,aAAiB0I,EAAQ1I,EAASA,EAAQ,IAAImW,EAAUnW,GAASA,EAC3E+a,EAAO,CAQP,IAPIxR,MAAMC,QAAQuR,GACd9Z,KAAK8Z,MAAQA,GAGb9Z,KAAK8Z,MAAQ,CAACA,GACd9Z,KAAK8Z,MAAM,GAAGD,UAAY,IAAKzG,EAAS,GAAI,KAAM,KAAMlK,EAAOwE,GAAkByG,wBAEhFrW,EAAI,EAAGA,EAAIkC,KAAK8Z,MAAMhX,OAAQhF,IAC/BkC,KAAK8Z,MAAMhc,GAAGgd,cAAe,EAEjC9a,KAAKkI,UAAUlI,KAAK8Z,MAAO9Z,MAE/BA,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKqW,UAAYA,EACjBrW,KAAKqgB,SAAWA,IAAY,EAC5BrgB,KAAK4K,mBAAmBD,GACxB3K,KAAKqV,WAAY,GAErB+K,GAAO1gB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACzC5B,KAAM,SACNyD,OAAQ,SAAUC,GACd,IAAIxK,EAAQiB,KAAKjB,MAAO+a,EAAQ9Z,KAAK8Z,MACjCA,IACA9Z,KAAK8Z,MAAQvQ,EAAQoK,WAAWmG,IAEhC/a,IACAiB,KAAKjB,MAAQwK,EAAQC,MAAMzK,KAGnC4J,cAAe,WACX,OAAO3I,KAAK8Z,QAAU9Z,KAAKyd,aAE/BA,UAAW,WACP,MAAO,aAAezd,KAAK3B,MAE/B0K,OAAQ,SAAUF,EAASQ,GACvB,IAAItK,EAAQiB,KAAKjB,MAAO+a,EAAQ9Z,KAAK8Z,MACrCzQ,EAAOL,IAAIhJ,KAAK3B,KAAM2B,KAAKgI,WAAYhI,KAAKiI,YACxClJ,IACAsK,EAAOL,IAAI,KACXjK,EAAMgK,OAAOF,EAASQ,IAEtByQ,EACA9Z,KAAKsgB,cAAczX,EAASQ,EAAQyQ,GAGpCzQ,EAAOL,IAAI,MAGnBS,KAAM,SAAUZ,GACZ,IAAI0X,EAAiBC,EAAmBzhB,EAAQiB,KAAKjB,MAAO+a,EAAQ9Z,KAAK8Z,MAmBzE,OAhBAyG,EAAkB1X,EAAQ4X,UAC1BD,EAAoB3X,EAAQyS,YAE5BzS,EAAQ4X,UAAY,GACpB5X,EAAQyS,YAAc,GAClBvc,IACAA,EAAQA,EAAM0K,KAAKZ,IAEnBiR,IAEAA,EAAQ,CAACA,EAAM,GAAGrQ,KAAKZ,IACvBiR,EAAM,GAAGc,MAAO,GAGpB/R,EAAQ4X,UAAYF,EACpB1X,EAAQyS,YAAckF,EACf,IAAIJ,GAAOpgB,KAAK3B,KAAMU,EAAO+a,EAAO9Z,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAKqW,UAAWrW,KAAKqgB,SAAUrgB,KAAK2K,mBAErHiL,SAAU,SAAUvX,GAChB,GAAI2B,KAAK8Z,MAEL,OAAOF,GAAQla,UAAUkW,SAAS3X,KAAK+B,KAAK8Z,MAAM,GAAIzb,IAG9Dye,KAAM,WACF,GAAI9c,KAAK8Z,MAEL,OAAOF,GAAQla,UAAUod,KAAKtB,MAAMxb,KAAK8Z,MAAM,GAAIjL,YAG3D8N,SAAU,WACN,GAAI3c,KAAK8Z,MAEL,OAAOF,GAAQla,UAAUid,SAASnB,MAAMxb,KAAK8Z,MAAM,KAG3DwG,cAAe,SAAUzX,EAASQ,EAAQyQ,GACtC,IACIhc,EADA4iB,EAAU5G,EAAMhX,OAIpB,GAFA+F,EAAQsU,SAAoC,GAAL,EAAnBtU,EAAQsU,UAExBtU,EAAQzI,SAAU,CAElB,IADAiJ,EAAOL,IAAI,KACNlL,EAAI,EAAGA,EAAI4iB,EAAS5iB,IACrBgc,EAAMhc,GAAGiL,OAAOF,EAASQ,GAI7B,OAFAA,EAAOL,IAAI,UACXH,EAAQsU,WAIZ,IAAIG,EAAY,KAAOhV,MAAMO,EAAQsU,UAAU/T,KAAK,MAAOiU,EAAaC,EAAY,KACpF,GAAKoD,EAGA,CAGD,IAFArX,EAAOL,IAAI,KAAOqU,GAClBvD,EAAM,GAAG/Q,OAAOF,EAASQ,GACpBvL,EAAI,EAAGA,EAAI4iB,EAAS5iB,IACrBuL,EAAOL,IAAIqU,GACXvD,EAAMhc,GAAGiL,OAAOF,EAASQ,GAE7BA,EAAOL,IAAIsU,EAAY,UATvBjU,EAAOL,IAAI,KAAOsU,EAAY,KAWlCzU,EAAQsU,cAIhB,IAAIwD,GAAkB,SAAUjG,EAASrC,GACrCrY,KAAK0a,QAAUA,EACf1a,KAAKqY,OAASA,EACdrY,KAAKkI,UAAUlI,KAAK0a,QAAS1a,OAEjC2gB,GAAgBjhB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAClD5B,KAAM,kBACNuV,WAAW,EACX9R,OAAQ,SAAUC,GACdvJ,KAAK0a,QAAUnR,EAAQC,MAAMxJ,KAAK0a,UAEtCjR,KAAM,SAAUZ,GACZ,IAAIwP,EAASrY,KAAKqY,QAAU7H,EAAU3H,EAAQwP,QAC9C,OAAO,IAAIsI,GAAgB3gB,KAAK0a,QAASrC,IAE7CuI,SAAU,SAAU/X,GAChB,OAAO7I,KAAK0a,QAAQjR,KAAKzJ,KAAKqY,OAAS,IAAIpB,EAASmB,KAAKvP,EAAS7I,KAAKqY,OAAOhS,OAAOwC,EAAQwP,SAAWxP,MAIhH,IAAIgY,GAAO,SAAUC,EAAWC,EAAaC,GACzChhB,KAAK8gB,UAAYA,EAAYtQ,EAAUsQ,GAAWG,OAAS,GAC3DjhB,KAAK+gB,YAAcA,EAAcvQ,EAAUuQ,GAAaE,OAAS,GAC7DD,EACAhhB,KAAKghB,WAAaA,EAEbF,GAAaA,EAAUhe,SAC5B9C,KAAKghB,WAAaF,EAAU,KAGpCD,GAAKnhB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACvC5B,KAAM,OACN8H,MAAO,WACH,OAAO,IAAIkT,GAAKrQ,EAAUxQ,KAAK8gB,WAAYtQ,EAAUxQ,KAAK+gB,aAAc/gB,KAAKghB,aAEjFjY,OAAQ,SAAUF,EAASQ,GAEvB,IAAIxI,EAAcgI,GAAWA,EAAQhI,YACP,IAA1Bb,KAAK8gB,UAAUhe,OACfuG,EAAOL,IAAIhJ,KAAK8gB,UAAU,KAEpBjgB,GAAeb,KAAKghB,WAC1B3X,EAAOL,IAAIhJ,KAAKghB,aAEVngB,GAAeb,KAAK+gB,YAAYje,QACtCuG,EAAOL,IAAIhJ,KAAK+gB,YAAY,KAGpCpV,SAAU,WACN,IAAI7N,EAAGojB,EAAYlhB,KAAK8gB,UAAU1X,KAAK,KACvC,IAAKtL,EAAI,EAAGA,EAAIkC,KAAK+gB,YAAYje,OAAQhF,IACrCojB,GAAa,IAAMlhB,KAAK+gB,YAAYjjB,GAExC,OAAOojB,GAEX/W,QAAS,SAAUsC,GACf,OAAOzM,KAAKmhB,GAAG1U,EAAMd,YAAc,OAAI5H,GAE3Cod,GAAI,SAAUC,GACV,OAAOphB,KAAK2L,WAAW0V,gBAAkBD,EAAWC,eAExDC,SAAU,WACN,OAAOC,OAAO,wDAAyD,MAAMtd,KAAKjE,KAAK4I,UAE3FO,QAAS,WACL,OAAiC,IAA1BnJ,KAAK8gB,UAAUhe,QAA4C,IAA5B9C,KAAK+gB,YAAYje,QAE3D0e,WAAY,WACR,OAAOxhB,KAAK8gB,UAAUhe,QAAU,GAAiC,IAA5B9C,KAAK+gB,YAAYje,QAE1DmI,IAAK,SAAUwW,GACX,IAAI3jB,EACJ,IAAKA,EAAI,EAAGA,EAAIkC,KAAK8gB,UAAUhe,OAAQhF,IACnCkC,KAAK8gB,UAAUhjB,GAAK2jB,EAASzhB,KAAK8gB,UAAUhjB,IAAI,GAEpD,IAAKA,EAAI,EAAGA,EAAIkC,KAAK+gB,YAAYje,OAAQhF,IACrCkC,KAAK+gB,YAAYjjB,GAAK2jB,EAASzhB,KAAK+gB,YAAYjjB,IAAI,IAG5D4jB,UAAW,WACP,IAAIC,EAEAC,EACAC,EAFArQ,EAAS,GAUb,IAAKqQ,KAPLD,EAAU,SAAUE,GAKhB,OAHIH,EAAMhiB,eAAemiB,KAAgBtQ,EAAOqQ,KAC5CrQ,EAAOqQ,GAAaC,GAEjBA,GAEO3a,EACVA,EAAgBxH,eAAekiB,KAC/BF,EAAQxa,EAAgB0a,GACxB7hB,KAAKiL,IAAI2W,IAGjB,OAAOpQ,GAEXuQ,OAAQ,WACJ,IACID,EACAhkB,EAFAkkB,EAAU,GAGd,IAAKlkB,EAAI,EAAGA,EAAIkC,KAAK8gB,UAAUhe,OAAQhF,IACnCgkB,EAAa9hB,KAAK8gB,UAAUhjB,GAC5BkkB,EAAQF,IAAeE,EAAQF,IAAe,GAAK,EAEvD,IAAKhkB,EAAI,EAAGA,EAAIkC,KAAK+gB,YAAYje,OAAQhF,IACrCgkB,EAAa9hB,KAAK+gB,YAAYjjB,GAC9BkkB,EAAQF,IAAeE,EAAQF,IAAe,GAAK,EAIvD,IAAKA,KAFL9hB,KAAK8gB,UAAY,GACjB9gB,KAAK+gB,YAAc,GACAiB,EACf,GAAIA,EAAQriB,eAAemiB,GAAa,CACpC,IAAIG,EAAQD,EAAQF,GACpB,GAAIG,EAAQ,EACR,IAAKnkB,EAAI,EAAGA,EAAImkB,EAAOnkB,IACnBkC,KAAK8gB,UAAUpb,KAAKoc,QAGvB,GAAIG,EAAQ,EACb,IAAKnkB,EAAI,EAAGA,GAAKmkB,EAAOnkB,IACpBkC,KAAK+gB,YAAYrb,KAAKoc,GAKtC9hB,KAAK8gB,UAAUG,OACfjhB,KAAK+gB,YAAYE,UAOzB,IAAIiB,GAAY,SAAUnjB,EAAOojB,GAE7B,GADAniB,KAAKjB,MAAQqjB,WAAWrjB,GACpBsjB,MAAMriB,KAAKjB,OACX,MAAM,IAAI2E,MAAM,8BAEpB1D,KAAKmiB,KAAQA,GAAQA,aAAgBtB,GAAQsB,EACzC,IAAItB,GAAKsB,EAAO,CAACA,QAAQpe,GAC7B/D,KAAKkI,UAAUlI,KAAKmiB,KAAMniB,OAE9BkiB,GAAUxiB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACNyD,OAAQ,SAAUC,GACdvJ,KAAKmiB,KAAO5Y,EAAQC,MAAMxJ,KAAKmiB,OAEnC1Y,KAAM,SAAUZ,GACZ,OAAO7I,MAEXsiB,QAAS,WACL,OAAO,IAAIzX,EAAM,CAAC7K,KAAKjB,MAAOiB,KAAKjB,MAAOiB,KAAKjB,SAEnDgK,OAAQ,SAAUF,EAASQ,GACvB,GAAKR,GAAWA,EAAQhI,cAAiBb,KAAKmiB,KAAKX,aAC/C,MAAM,IAAI9d,MAAM,sFAAwF1D,KAAKmiB,KAAKxW,YAEtH,IAAI5M,EAAQiB,KAAK8J,OAAOjB,EAAS7I,KAAKjB,OAClCwjB,EAAWC,OAAOzjB,GAKtB,GAJc,IAAVA,GAAeA,EAAQ,MAAYA,GAAS,OAE5CwjB,EAAWxjB,EAAMmL,QAAQ,IAAI/I,QAAQ,MAAO,KAE5C0H,GAAWA,EAAQzI,SAAU,CAE7B,GAAc,IAAVrB,GAAeiB,KAAKmiB,KAAKb,WAEzB,YADAjY,EAAOL,IAAIuZ,GAIXxjB,EAAQ,GAAKA,EAAQ,IACrBwjB,EAAW,EAAWpP,OAAO,IAGrC9J,EAAOL,IAAIuZ,GACXviB,KAAKmiB,KAAKpZ,OAAOF,EAASQ,IAK9BmD,QAAS,SAAU3D,EAASc,EAAI8C,GAE5B,IAAI1N,EAAQiB,KAAK0J,SAASb,EAASc,EAAI3J,KAAKjB,MAAO0N,EAAM1N,OACrDojB,EAAOniB,KAAKmiB,KAAKxU,QACrB,GAAW,MAAPhE,GAAqB,MAAPA,EACd,GAA8B,IAA1BwY,EAAKrB,UAAUhe,QAA4C,IAA5Bqf,EAAKpB,YAAYje,OAChDqf,EAAO1V,EAAM0V,KAAKxU,QACd3N,KAAKmiB,KAAKnB,aACVmB,EAAKnB,WAAahhB,KAAKmiB,KAAKnB,iBAG/B,GAAoC,IAAhCvU,EAAM0V,KAAKrB,UAAUhe,QAA4C,IAA5Bqf,EAAKpB,YAAYje,YAC1D,CAED,GADA2J,EAAQA,EAAMgW,UAAUziB,KAAKmiB,KAAKT,aAC9B7Y,EAAQhI,aAAe4L,EAAM0V,KAAKxW,aAAewW,EAAKxW,WACtD,MAAM,IAAIjI,MAAM,8EACQye,EAAKxW,WAAa,UAAYc,EAAM0V,KAAKxW,WAAa,MAElF5M,EAAQiB,KAAK0J,SAASb,EAASc,EAAI3J,KAAKjB,MAAO0N,EAAM1N,WAG7C,MAAP4K,GACLwY,EAAKrB,UAAYqB,EAAKrB,UAAUza,OAAOoG,EAAM0V,KAAKrB,WAAWG,OAC7DkB,EAAKpB,YAAcoB,EAAKpB,YAAY1a,OAAOoG,EAAM0V,KAAKpB,aAAaE,OACnEkB,EAAKJ,UAEO,MAAPpY,IACLwY,EAAKrB,UAAYqB,EAAKrB,UAAUza,OAAOoG,EAAM0V,KAAKpB,aAAaE,OAC/DkB,EAAKpB,YAAcoB,EAAKpB,YAAY1a,OAAOoG,EAAM0V,KAAKrB,WAAWG,OACjEkB,EAAKJ,UAET,OAAO,IAAIG,GAAUnjB,EAAOojB,IAEhChY,QAAS,SAAUsC,GACf,IAAI7C,EAAGC,EACP,GAAM4C,aAAiByV,GAAvB,CAGA,GAAIliB,KAAKmiB,KAAKhZ,WAAasD,EAAM0V,KAAKhZ,UAClCS,EAAI5J,KACJ6J,EAAI4C,OAKJ,GAFA7C,EAAI5J,KAAK0iB,QACT7Y,EAAI4C,EAAMiW,QACqB,IAA3B9Y,EAAEuY,KAAKhY,QAAQN,EAAEsY,MACjB,OAGR,OAAO1a,EAAK2C,eAAeR,EAAE7K,MAAO8K,EAAE9K,SAE1C2jB,MAAO,WACH,OAAO1iB,KAAKyiB,UAAU,CAAE3f,OAAQ,KAAMsE,SAAU,IAAKC,MAAO,SAEhEob,UAAW,SAAUE,GACjB,IAEI7kB,EACA+jB,EACAF,EACAiB,EAEAC,EAPA9jB,EAAQiB,KAAKjB,MACbojB,EAAOniB,KAAKmiB,KAAKxU,QAKjBmV,EAAqB,GAEzB,GAA2B,kBAAhBH,EAA0B,CACjC,IAAK7kB,KAAKqJ,EACFA,EAAgBrJ,GAAG6B,eAAegjB,KAClCG,EAAqB,GACrBA,EAAmBhlB,GAAK6kB,GAGhCA,EAAcG,EAelB,IAAKjB,KAbLgB,EAAY,SAAUf,EAAYf,GAE9B,OAAIY,EAAMhiB,eAAemiB,IACjBf,EACAhiB,GAAiB4iB,EAAMG,GAAcH,EAAMiB,GAG3C7jB,GAAiB4iB,EAAMG,GAAcH,EAAMiB,GAExCA,GAEJd,GAEOa,EACVA,EAAYhjB,eAAekiB,KAC3Be,EAAaD,EAAYd,GACzBF,EAAQxa,EAAgB0a,GACxBM,EAAKlX,IAAI4X,IAIjB,OADAV,EAAKJ,SACE,IAAIG,GAAUnjB,EAAOojB,MAIpC,IAAIY,GAASjV,EACTkV,GAAY,SAAUrZ,EAAIsZ,EAAUC,GACpCljB,KAAK2J,GAAKA,EAAG0D,OACbrN,KAAKijB,SAAWA,EAChBjjB,KAAKkjB,SAAWA;;;;;;;;;;;;;;;AA2DpB,SAASC,KACL,IAAK,IAAItjB,EAAI,EAAG/B,EAAI,EAAG8Q,EAAKC,UAAU/L,OAAQhF,EAAI8Q,EAAI9Q,IAAK+B,GAAKgP,UAAU/Q,GAAGgF,OACxE,IAAIlE,EAAI0J,MAAMzI,GAAIiP,EAAI,EAA3B,IAA8BhR,EAAI,EAAGA,EAAI8Q,EAAI9Q,IACzC,IAAK,IAAI8L,EAAIiF,UAAU/Q,GAAIiR,EAAI,EAAGC,EAAKpF,EAAE9G,OAAQiM,EAAIC,EAAID,IAAKD,IAC1DlQ,EAAEkQ,GAAKlF,EAAEmF,GACjB,OAAOnQ,EA9DXokB,GAAUtjB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACNyD,OAAQ,SAAUC,GACdvJ,KAAKijB,SAAW1Z,EAAQoK,WAAW3T,KAAKijB,WAE5CxZ,KAAM,SAAUZ,GACZ,IAA4Ec,EAAxEC,EAAI5J,KAAKijB,SAAS,GAAGxZ,KAAKZ,GAAUgB,EAAI7J,KAAKijB,SAAS,GAAGxZ,KAAKZ,GAClE,GAAIA,EAAQiQ,SAAS9Y,KAAK2J,IAAK,CAQ3B,GAPAA,EAAiB,OAAZ3J,KAAK2J,GAAc,IAAM3J,KAAK2J,GAC/BC,aAAasY,IAAarY,aAAagB,IACvCjB,EAAIA,EAAE0Y,WAENzY,aAAaqY,IAAatY,aAAaiB,IACvChB,EAAIA,EAAEyY,YAEL1Y,EAAE4C,UAAY3C,EAAE2C,QAAS,CAC1B,IAAK5C,aAAaoZ,IAAanZ,aAAamZ,KAC5B,MAATpZ,EAAED,IAAcd,EAAQjI,OAASmiB,GAAO/U,gBAC3C,OAAO,IAAIgV,GAAUhjB,KAAK2J,GAAI,CAACC,EAAGC,GAAI7J,KAAKkjB,UAE/C,KAAM,CAAErd,KAAM,YACVoM,QAAS,gCAEjB,OAAOrI,EAAE4C,QAAQ3D,EAASc,EAAIE,GAG9B,OAAO,IAAImZ,GAAUhjB,KAAK2J,GAAI,CAACC,EAAGC,GAAI7J,KAAKkjB,WAGnDna,OAAQ,SAAUF,EAASQ,GACvBrJ,KAAKijB,SAAS,GAAGla,OAAOF,EAASQ,GAC7BrJ,KAAKkjB,UACL7Z,EAAOL,IAAI,KAEfK,EAAOL,IAAIhJ,KAAK2J,IACZ3J,KAAKkjB,UACL7Z,EAAOL,IAAI,KAEfhJ,KAAKijB,SAAS,GAAGla,OAAOF,EAASQ,MA2BzC,IAAI+Z,GAAa,SAAUrkB,EAAOskB,GAG9B,GAFArjB,KAAKjB,MAAQA,EACbiB,KAAKqjB,UAAYA,GACZtkB,EACD,MAAM,IAAI2E,MAAM,2CAGxB0f,GAAW1jB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC7C5B,KAAM,aACNyD,OAAQ,SAAUC,GACdvJ,KAAKjB,MAAQwK,EAAQoK,WAAW3T,KAAKjB,QAEzC0K,KAAM,SAAUZ,GACZ,IAAIya,EACAzK,EAAShQ,EAAQiQ,WACjBJ,EAAgB1Y,KAAKujB,OACrBC,GAAc,EA4BlB,OA3BI9K,GACA7P,EAAQ6P,gBAER1Y,KAAKjB,MAAM+D,OAAS,EACpBwgB,EAAc,IAAIF,GAAWpjB,KAAKjB,MAAMkM,KAAI,SAAUxH,GAClD,OAAKA,EAAEgG,KAGAhG,EAAEgG,KAAKZ,GAFHpF,KAGXzD,KAAKqjB,WAEkB,IAAtBrjB,KAAKjB,MAAM+D,SACZ9C,KAAKjB,MAAM,GAAGwkB,QAAWvjB,KAAKjB,MAAM,GAAG0kB,YAAe5a,EAAQ2P,SAC9DgL,GAAc,GAElBF,EAActjB,KAAKjB,MAAM,GAAG0K,KAAKZ,IAGjCya,EAActjB,KAEd0Y,GACA7P,EAAQ+P,oBAER5Y,KAAKujB,SAAUvjB,KAAKyjB,YAAe5K,GAAW2K,GACxCF,aAAuBpB,KAC7BoB,EAAc,IAAIrW,EAAMqW,IAErBA,GAEXva,OAAQ,SAAUF,EAASQ,GACvB,IAAK,IAAIvL,EAAI,EAAGA,EAAIkC,KAAKjB,MAAM+D,OAAQhF,IACnCkC,KAAKjB,MAAMjB,GAAGiL,OAAOF,EAASQ,IACzBrJ,KAAKqjB,WAAavlB,EAAI,EAAIkC,KAAKjB,MAAM+D,QACtCuG,EAAOL,IAAI,MAIvB0a,kBAAmB,WACf1jB,KAAKjB,MAAQiB,KAAKjB,MAAMwc,QAAO,SAAUjQ,GACrC,QAASA,aAAauL,SAKlC,IAAI8M,GAAgC,WAChC,SAASA,EAAetlB,EAAMwK,EAASK,EAAOwE,GAC1C1N,KAAK3B,KAAOA,EAAK0O,cACjB/M,KAAKkJ,MAAQA,EACblJ,KAAK6I,QAAUA,EACf7I,KAAK0N,gBAAkBA,EACvB1N,KAAK0S,KAAO7J,EAAQwP,OAAO,GAAGkB,iBAAiB5a,IAAIqB,KAAK3B,MAoC5D,OAlCAslB,EAAejkB,UAAUkkB,QAAU,WAC/B,OAAOtO,QAAQtV,KAAK0S,OAExBiR,EAAejkB,UAAUzB,KAAO,SAAUiO,GACtC,IAAI8L,EAAQhY,KACNsI,MAAMC,QAAQ2D,KAChBA,EAAO,CAACA,IAEZ,IAAI2X,EAAW7jB,KAAK0S,KAAKmR,UACR,IAAbA,IACA3X,EAAOA,EAAKjB,KAAI,SAAUrB,GAAK,OAAOA,EAAEH,KAAKuO,EAAMnP,aAEvD,IAAIib,EAAgB,SAAUC,GAAQ,QAAuB,YAAdA,EAAKle,OAiBpD,OAdAqG,EAAOA,EACFqP,OAAOuI,GACP7Y,KAAI,SAAU8Y,GACf,GAAkB,eAAdA,EAAKle,KAAuB,CAC5B,IAAIme,EAAWD,EAAKhlB,MAAMwc,OAAOuI,GACjC,OAAwB,IAApBE,EAASlhB,OACFkhB,EAAS,GAGT,IAAIZ,GAAWY,GAG9B,OAAOD,MAEM,IAAbF,EACO7jB,KAAK0S,KAAK8I,MAAMxb,KAAMmjB,GAAiB,CAACnjB,KAAK6I,SAAUqD,IAE3DlM,KAAK0S,KAAK8I,MAAMxb,KAAMkM,IAE1ByX,EA1CwB,GAgD/BM,GAAO,SAAU5lB,EAAM6N,EAAMhD,EAAOwE,GACpC1N,KAAK3B,KAAOA,EACZ2B,KAAKkM,KAAOA,EACZlM,KAAKkkB,KAAgB,SAAT7lB,EACZ2B,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,GAErBuW,GAAKvkB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACvC5B,KAAM,OACNyD,OAAQ,SAAUC,GACVvJ,KAAKkM,OACLlM,KAAKkM,KAAO3C,EAAQoK,WAAW3T,KAAKkM,QAc5CzC,KAAM,SAAUZ,GACZ,IAAImP,EAAQhY,KAIRmkB,EAAqBtb,EAAQgQ,OACjChQ,EAAQgQ,QAAU7Y,KAAKkkB,MACnBlkB,KAAKkkB,MAAQrb,EAAQ2P,SACrB3P,EAAQyP,YAEZ,IAMI9G,EANAiH,EAAW,YACPT,EAAMkM,MAAQrb,EAAQ2P,SACtB3P,EAAQ4P,WAEZ5P,EAAQgQ,OAASsL,GAGjBC,EAAa,IAAIT,GAAe3jB,KAAK3B,KAAMwK,EAAS7I,KAAKiI,WAAYjI,KAAKgI,YAC9E,GAAIoc,EAAWR,UACX,IACIpS,EAAS4S,EAAWnmB,KAAK+B,KAAKkM,MAC9BuM,IAEJ,MAAOhV,GACH,GAAIA,EAAE9D,eAAe,SAAW8D,EAAE9D,eAAe,UAC7C,MAAM8D,EAEV,KAAM,CACFoC,KAAMpC,EAAEoC,MAAQ,UAChBoM,QAAS,8BAAgCjS,KAAK3B,KAAO,KAAOoF,EAAEwO,QAAU,KAAOxO,EAAEwO,QAAU,IAC3F/I,MAAOlJ,KAAKiI,WACZxB,SAAUzG,KAAKgI,WAAWvB,SAC1B6J,KAAM7M,EAAEiT,WACRnG,OAAQ9M,EAAE4gB,cAItB,GAAe,OAAX7S,QAA8BzN,IAAXyN,EAanB,OAVMA,aAAkB/J,IAKhB+J,EAAS,IAAI0D,EAJZ1D,IAAqB,IAAXA,EAIYA,EAAO7F,WAHP,OAM/B6F,EAAO/I,OAASzI,KAAKyI,OACrB+I,EAAO9I,UAAY1I,KAAK0I,UACjB8I,EAEX,IAAItF,EAAOlM,KAAKkM,KAAKjB,KAAI,SAAUrB,GAAK,OAAOA,EAAEH,KAAKZ,MAEtD,OADA4P,IACO,IAAIwL,GAAKjkB,KAAK3B,KAAM6N,EAAMlM,KAAKiI,WAAYjI,KAAKgI,aAE3De,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAK3B,KAAO,IAAK2B,KAAKgI,WAAYhI,KAAKiI,YAClD,IAAK,IAAInK,EAAI,EAAGA,EAAIkC,KAAKkM,KAAKpJ,OAAQhF,IAClCkC,KAAKkM,KAAKpO,GAAGiL,OAAOF,EAASQ,GACzBvL,EAAI,EAAIkC,KAAKkM,KAAKpJ,QAClBuG,EAAOL,IAAI,MAGnBK,EAAOL,IAAI,QAInB,IAAIsb,GAAW,SAAUjmB,EAAM6K,EAAOwE,GAClC1N,KAAK3B,KAAOA,EACZ2B,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,GAErB4W,GAAS5kB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC3C5B,KAAM,WACN4D,KAAM,SAAUZ,GACZ,IAAI+M,EAAUvX,EAAO2B,KAAK3B,KAI1B,GAH2B,IAAvBA,EAAK8N,QAAQ,QACb9N,EAAO,IAAM,IAAIimB,GAASjmB,EAAK2O,MAAM,GAAIhN,KAAKiI,WAAYjI,KAAKgI,YAAYyB,KAAKZ,GAAS9J,OAEzFiB,KAAKukB,WACL,KAAM,CAAE1e,KAAM,OAAQoM,QAAS,qCAAuC5T,EAAMoI,SAAUzG,KAAKgI,WAAWvB,SAClGyC,MAAOlJ,KAAKiI,YAmBpB,GAjBAjI,KAAKukB,YAAa,EAClB3O,EAAW5V,KAAK8c,KAAKjU,EAAQwP,QAAQ,SAAUmM,GAC3C,IAAIlZ,EAAIkZ,EAAM5O,SAASvX,GACvB,GAAIiN,EAAG,CACH,GAAIA,EAAEoK,UAAW,CACb,IAAIO,EAAiBpN,EAAQoN,eAAepN,EAAQoN,eAAenT,OAAS,GAC5EmT,EAAeP,UAAYpK,EAAEoK,UAGjC,OAAI7M,EAAQ2P,OACD,IAAKyL,GAAK,QAAS,CAAC3Y,EAAEvM,QAAS0K,KAAKZ,GAGpCyC,EAAEvM,MAAM0K,KAAKZ,OAI5B+M,EAEA,OADA5V,KAAKukB,YAAa,EACX3O,EAGP,KAAM,CAAE/P,KAAM,OAAQoM,QAAS,YAAc5T,EAAO,gBAAiBoI,SAAUzG,KAAKgI,WAAWvB,SAC3FyC,MAAOlJ,KAAKiI,aAGxB6U,KAAM,SAAUpM,EAAK+T,GACjB,IAAK,IAAI3mB,EAAI,EAAGc,OAAI,EAAQd,EAAI4S,EAAI5N,OAAQhF,IAExC,GADAc,EAAI6lB,EAAIxmB,KAAKyS,EAAKA,EAAI5S,IAClBc,EACA,OAAOA,EAGf,OAAO,QAIf,IAAI8lB,GAAW,SAAUrmB,EAAM6K,EAAOwE,GAClC1N,KAAK3B,KAAOA,EACZ2B,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,GAErBgX,GAAShlB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC3C5B,KAAM,WACN4D,KAAM,SAAUZ,GACZ,IAAIpJ,EACApB,EAAO2B,KAAK3B,KAEZsmB,EAAa9b,EAAQhC,cAAc+d,KAAKC,SAASC,aAAaplB,UAAUqlB,YAC5E,GAAI/kB,KAAKukB,WACL,KAAM,CAAE1e,KAAM,OAAQoM,QAAS,oCAAsC5T,EAAMoI,SAAUzG,KAAKgI,WAAWvB,SACjGyC,MAAOlJ,KAAKiI,YAqBpB,GAnBAjI,KAAKukB,YAAa,EAClB9kB,EAAWO,KAAK8c,KAAKjU,EAAQwP,QAAQ,SAAUmM,GAC3C,IAAIlZ,EACA0Z,EAAOR,EAAM/kB,SAASpB,GAC1B,GAAI2mB,EAAM,CACN,IAAK,IAAIlnB,EAAI,EAAGA,EAAIknB,EAAKliB,OAAQhF,IAC7BwN,EAAI0Z,EAAKlnB,GACTknB,EAAKlnB,GAAK,IAAI2X,EAAYnK,EAAEjN,KAAMiN,EAAEvM,MAAOuM,EAAEoK,UAAWpK,EAAEgG,MAAOhG,EAAEpC,MAAOoC,EAAEoC,gBAAiBpC,EAAEqK,OAAQrK,EAAEsK,UAI7G,GAFA+O,EAAWK,GACX1Z,EAAI0Z,EAAKA,EAAKliB,OAAS,GACnBwI,EAAEoK,UAAW,CACb,IAAIO,EAAiBpN,EAAQoN,eAAepN,EAAQoN,eAAenT,OAAS,GAC5EmT,EAAeP,UAAYpK,EAAEoK,UAGjC,OADApK,EAAIA,EAAEvM,MAAM0K,KAAKZ,GACVyC,MAGX7L,EAEA,OADAO,KAAKukB,YAAa,EACX9kB,EAGP,KAAM,CAAEoG,KAAM,OAAQoM,QAAS,aAAe5T,EAAO,iBAAkBoI,SAAUzG,KAAK0N,gBAAgBjH,SAClGyC,MAAOlJ,KAAKkJ,QAGxB4T,KAAM,SAAUpM,EAAK+T,GACjB,IAAK,IAAI3mB,EAAI,EAAGc,OAAI,EAAQd,EAAI4S,EAAI5N,OAAQhF,IAExC,GADAc,EAAI6lB,EAAIxmB,KAAKyS,EAAKA,EAAI5S,IAClBc,EACA,OAAOA,EAGf,OAAO,QAIf,IAAIqmB,GAAY,SAAU5lB,EAAKsK,EAAI5K,GAC/BiB,KAAKX,IAAMA,EACXW,KAAK2J,GAAKA,EACV3J,KAAKjB,MAAQA,GAEjBkmB,GAAUvlB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACN4D,KAAM,SAAUZ,GACZ,OAAO,IAAIoc,GAAUjlB,KAAKX,IAAIoK,KAAOzJ,KAAKX,IAAIoK,KAAKZ,GAAW7I,KAAKX,IAAKW,KAAK2J,GAAK3J,KAAKjB,OAASiB,KAAKjB,MAAM0K,KAAQzJ,KAAKjB,MAAM0K,KAAKZ,GAAW7I,KAAKjB,QAEvJgK,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAK4I,MAAMC,KAE1BD,MAAO,SAAUC,GACb,IAAI9J,EAAQiB,KAAKX,IAAIuJ,MAAQ5I,KAAKX,IAAIuJ,MAAMC,GAAW7I,KAAKX,IAK5D,OAJIW,KAAK2J,KACL5K,GAASiB,KAAK2J,GACd5K,GAAUiB,KAAKjB,MAAM6J,MAAQ5I,KAAKjB,MAAM6J,MAAMC,GAAW7I,KAAKjB,OAE3D,IAAMA,EAAQ,OAI7B,IAAImmB,GAAS,SAAUjS,EAAKkS,EAASC,EAASlc,EAAOwE,GACjD1N,KAAKolB,QAAsB,MAAXA,GAA0BA,EAC1CplB,KAAKjB,MAAQomB,GAAW,GACxBnlB,KAAKqlB,MAAQpS,EAAIpF,OAAO,GACxB7N,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKslB,cAAgB,iBACrBtlB,KAAKulB,UAAY,kBACjBvlB,KAAKqV,UAAY+P,GAkDrB,SAASI,GAAW9N,GAChB,OAAOA,EAAKvW,QAAQ,eAAe,SAAU6J,GAAS,MAAO,KAAOA,KAjDxEka,GAAOxlB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACzC5B,KAAM,SACNkD,OAAQ,SAAUF,EAASQ,GAClBrJ,KAAKolB,SACN/b,EAAOL,IAAIhJ,KAAKqlB,MAAOrlB,KAAKgI,WAAYhI,KAAKiI,YAEjDoB,EAAOL,IAAIhJ,KAAKjB,OACXiB,KAAKolB,SACN/b,EAAOL,IAAIhJ,KAAKqlB,QAGxBI,kBAAmB,WACf,OAAOzlB,KAAKjB,MAAMiM,MAAMhL,KAAKslB,gBAEjC7b,KAAM,SAAUZ,GACZ,IAAI6c,EAAO1lB,KACPjB,EAAQiB,KAAKjB,MACb4mB,EAAsB,SAAUhkB,EAAGtD,GACnC,IAAIiN,EAAI,IAAIgZ,GAAS,IAAMjmB,EAAMqnB,EAAKzd,WAAYyd,EAAK1d,YAAYyB,KAAKZ,GAAS,GACjF,OAAQyC,aAAa4Z,GAAU5Z,EAAEvM,MAAQuM,EAAE1C,SAE3Cgd,EAAsB,SAAUjkB,EAAGtD,GACnC,IAAIiN,EAAI,IAAIoZ,GAAS,IAAMrmB,EAAMqnB,EAAKzd,WAAYyd,EAAK1d,YAAYyB,KAAKZ,GAAS,GACjF,OAAQyC,aAAa4Z,GAAU5Z,EAAEvM,MAAQuM,EAAE1C,SAE/C,SAASid,EAAiB9mB,EAAO+mB,EAAQC,GACrC,IAAIC,EAAiBjnB,EACrB,GACIA,EAAQinB,EAAera,WACvBqa,EAAiBjnB,EAAMoC,QAAQ2kB,EAAQC,SAClChnB,IAAUinB,GACnB,OAAOA,EAIX,OAFAjnB,EAAQ8mB,EAAiB9mB,EAAOiB,KAAKslB,cAAeK,GACpD5mB,EAAQ8mB,EAAiB9mB,EAAOiB,KAAKulB,UAAWK,GACzC,IAAIV,GAAOllB,KAAKqlB,MAAQtmB,EAAQiB,KAAKqlB,MAAOtmB,EAAOiB,KAAKolB,QAASplB,KAAKiI,WAAYjI,KAAKgI,aAElGmC,QAAS,SAAUsC,GAEf,MAAmB,WAAfA,EAAM5G,MAAsB7F,KAAKolB,SAAY3Y,EAAM2Y,QAI5C3Y,EAAM7D,OAAS5I,KAAK4I,UAAY6D,EAAM7D,QAAU,OAAI7E,EAHpD0D,EAAK2C,eAAepK,KAAKjB,MAAO0N,EAAM1N,UAWzD,IAAIknB,GAAM,SAAU/V,EAAKhH,EAAOwE,EAAiBwY,GAC7ClmB,KAAKjB,MAAQmR,EACblQ,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKkmB,QAAUA,GAEnBD,GAAIvmB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACtC5B,KAAM,MACNyD,OAAQ,SAAUC,GACdvJ,KAAKjB,MAAQwK,EAAQC,MAAMxJ,KAAKjB,QAEpCgK,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAI,QACXhJ,KAAKjB,MAAMgK,OAAOF,EAASQ,GAC3BA,EAAOL,IAAI,MAEfS,KAAM,SAAUZ,GACZ,IACInI,EADAwP,EAAMlQ,KAAKjB,MAAM0K,KAAKZ,GAE1B,IAAK7I,KAAKkmB,UAENxlB,EAAWV,KAAKgI,YAAchI,KAAKgI,WAAWtH,SACtB,kBAAbA,GACc,kBAAdwP,EAAInR,OACX8J,EAAQkQ,oBAAoB7I,EAAInR,QAC3BmR,EAAImV,QACL3kB,EAAW8kB,GAAW9kB,IAE1BwP,EAAInR,MAAQ8J,EAAQoQ,YAAY/I,EAAInR,MAAO2B,IAG3CwP,EAAInR,MAAQ8J,EAAQsQ,cAAcjJ,EAAInR,OAGtC8J,EAAQ7H,UACHkP,EAAInR,MAAMiM,MAAM,cAAc,CAC/B,IAAImb,GAAwC,IAA5BjW,EAAInR,MAAMoN,QAAQ,KAAc,IAAM,IAClDnL,EAAUmlB,EAAYtd,EAAQ7H,SACF,IAA5BkP,EAAInR,MAAMoN,QAAQ,KAClB+D,EAAInR,MAAQmR,EAAInR,MAAMoC,QAAQ,IAAKH,EAAU,KAG7CkP,EAAInR,OAASiC,EAK7B,OAAO,IAAIilB,GAAI/V,EAAKlQ,KAAKiI,WAAYjI,KAAKgI,YAAY,MAI9D,IAAIoe,GAAQ,SAAUrnB,EAAOsnB,EAAUnd,EAAOwE,EAAiB/C,GAC3D3K,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB,IAAImM,EAAY,IAAKzG,EAAS,GAAI,KAAM,KAAMpT,KAAKyI,OAAQzI,KAAK0I,WAAYyL,uBAC5EnU,KAAKqmB,SAAW,IAAIvR,EAAMuR,GAC1BrmB,KAAK8Z,MAAQ,CAAC,IAAIF,GAAQC,EAAW9a,IACrCiB,KAAK8Z,MAAM,GAAGgB,cAAe,EAC7B9a,KAAK4K,mBAAmBD,GACxB3K,KAAKqV,WAAY,EACjBrV,KAAKkI,UAAU2R,EAAW7Z,MAC1BA,KAAKkI,UAAUlI,KAAKqmB,SAAUrmB,MAC9BA,KAAKkI,UAAUlI,KAAK8Z,MAAO9Z,OAE/BomB,GAAM1mB,UAAYlB,OAAOoN,OAAO,IAAIwU,GAAU,CAC1Cva,KAAM,QACN8C,cAAe,WACX,OAAO,GAEXW,OAAQ,SAAUC,GACVvJ,KAAKqmB,WACLrmB,KAAKqmB,SAAW9c,EAAQC,MAAMxJ,KAAKqmB,WAEnCrmB,KAAK8Z,QACL9Z,KAAK8Z,MAAQvQ,EAAQoK,WAAW3T,KAAK8Z,SAG7C/Q,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAI,UAAWhJ,KAAK0I,UAAW1I,KAAKyI,QAC3CzI,KAAKqmB,SAAStd,OAAOF,EAASQ,GAC9BrJ,KAAKsgB,cAAczX,EAASQ,EAAQrJ,KAAK8Z,QAE7CrQ,KAAM,SAAUZ,GACPA,EAAQyS,cACTzS,EAAQyS,YAAc,GACtBzS,EAAQ4X,UAAY,IAExB,IAAIhe,EAAQ,IAAI2jB,GAAM,KAAM,GAAIpmB,KAAKyI,OAAQzI,KAAK0I,UAAW1I,KAAK2K,kBAalE,OAZI3K,KAAKqW,YACLrW,KAAK8Z,MAAM,GAAGzD,UAAYrW,KAAKqW,UAC/B5T,EAAM4T,UAAYrW,KAAKqW,WAE3B5T,EAAM4jB,SAAWrmB,KAAKqmB,SAAS5c,KAAKZ,GACpCA,EAAQ4X,UAAU/a,KAAKjD,GACvBoG,EAAQyS,YAAY5V,KAAKjD,GACzBzC,KAAK8Z,MAAM,GAAGP,iBAAmB1Q,EAAQwP,OAAO,GAAGkB,iBAAiBpB,UACpEtP,EAAQwP,OAAO2C,QAAQhb,KAAK8Z,MAAM,IAClCrX,EAAMqX,MAAQ,CAAC9Z,KAAK8Z,MAAM,GAAGrQ,KAAKZ,IAClCA,EAAQwP,OAAO5D,QACf5L,EAAQ4X,UAAUtK,MACkB,IAA7BtN,EAAQ4X,UAAU3d,OAAeL,EAAM6jB,QAAQzd,GAClDpG,EAAM8jB,WAAW1d,IAEzByd,QAAS,SAAUzd,GACf,IAAI2I,EAASxR,KAEb,GAAI6I,EAAQyS,YAAYxY,OAAS,EAAG,CAChC,IAAI+W,EAAY,IAAKzG,EAAS,GAAI,KAAM,KAAMpT,KAAKiI,WAAYjI,KAAKgI,YAAamM,uBACjF3C,EAAS,IAAIoI,GAAQC,EAAWhR,EAAQyS,aACxC9J,EAAOgV,YAAa,EACpBhV,EAAO5G,mBAAmB5K,KAAK2K,kBAC/B3K,KAAKkI,UAAUsJ,EAAQxR,MAI3B,cAFO6I,EAAQyS,mBACRzS,EAAQ4X,UACRjP,GAEX+U,WAAY,SAAU1d,GAClB,IAAI/K,EACAiB,EACA2Y,EAAO7O,EAAQ4X,UAAUpa,OAAO,CAACrG,OAErC,IAAKlC,EAAI,EAAGA,EAAI4Z,EAAK5U,OAAQhF,IACzBiB,EAAQ2Y,EAAK5Z,GAAGuoB,oBAAoBvR,EAChC4C,EAAK5Z,GAAGuoB,SAAStnB,MAAQ2Y,EAAK5Z,GAAGuoB,SACrC3O,EAAK5Z,GAAKwK,MAAMC,QAAQxJ,GAASA,EAAQ,CAACA,GAkB9C,OATAiB,KAAKqmB,SAAW,IAAIvR,EAAM9U,KAAKymB,QAAQ/O,GAAMzM,KAAI,SAAUyM,GAEvD,IADAA,EAAOA,EAAKzM,KAAI,SAAUyb,GAAY,OAAOA,EAAS9d,MAAQ8d,EAAW,IAAIxR,EAAUwR,MAClF5oB,EAAI4Z,EAAK5U,OAAS,EAAGhF,EAAI,EAAGA,IAC7B4Z,EAAK9R,OAAO9H,EAAG,EAAG,IAAIoX,EAAU,QAEpC,OAAO,IAAIkO,GAAW1L,OAE1B1X,KAAKkI,UAAUlI,KAAKqmB,SAAUrmB,MAEvB,IAAI4Z,GAAQ,GAAI,KAE3B6M,QAAS,SAAUhW,GACf,GAAmB,IAAfA,EAAI3N,OACJ,MAAO,GAEN,GAAmB,IAAf2N,EAAI3N,OACT,OAAO2N,EAAI,GAKX,IAFA,IAAIe,EAAS,GACTmV,EAAO3mB,KAAKymB,QAAQhW,EAAIzD,MAAM,IACzBlP,EAAI,EAAGA,EAAI6oB,EAAK7jB,OAAQhF,IAC7B,IAAK,IAAIiR,EAAI,EAAGA,EAAI0B,EAAI,GAAG3N,OAAQiM,IAC/ByC,EAAO9L,KAAK,CAAC+K,EAAI,GAAG1B,IAAI1I,OAAOsgB,EAAK7oB,KAG5C,OAAO0T,GAGfkK,gBAAiB,SAAU7B,GAClBA,IAGL7Z,KAAK8Z,MAAQ,CAAC,IAAIF,GAAQpJ,EAAUqJ,GAAY,CAAC7Z,KAAK8Z,MAAM,MAC5D9Z,KAAKkI,UAAUlI,KAAK8Z,MAAO9Z,UAgBnC,IAAI4mB,GAAS,SAAUlP,EAAM2O,EAAUhlB,EAAS6H,EAAOwE,EAAiB/C,GAOpE,GANA3K,KAAKqB,QAAUA,EACfrB,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAK0X,KAAOA,EACZ1X,KAAKqmB,SAAWA,EAChBrmB,KAAKqV,WAAY,OACStR,IAAtB/D,KAAKqB,QAAQujB,MAAsB5kB,KAAKqB,QAAQsU,OAChD3V,KAAK6mB,KAAO7mB,KAAKqB,QAAQujB,MAAQ5kB,KAAKqB,QAAQsU,WAE7C,CACD,IAAImR,EAAY9mB,KAAK+mB,UACjBD,GAAa,0BAA0B7iB,KAAK6iB,KAC5C9mB,KAAK6mB,KAAM,GAGnB7mB,KAAK4K,mBAAmBD,GACxB3K,KAAKkI,UAAUlI,KAAKqmB,SAAUrmB,MAC9BA,KAAKkI,UAAUlI,KAAK0X,KAAM1X,OAE9B4mB,GAAOlnB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACzC5B,KAAM,SACNyD,OAAQ,SAAUC,GACVvJ,KAAKqmB,WACLrmB,KAAKqmB,SAAW9c,EAAQC,MAAMxJ,KAAKqmB,WAEvCrmB,KAAK0X,KAAOnO,EAAQC,MAAMxJ,KAAK0X,MAC1B1X,KAAKqB,QAAQ2lB,UAAahnB,KAAKqB,QAAQsU,SAAU3V,KAAK4a,OACvD5a,KAAK4a,KAAOrR,EAAQC,MAAMxJ,KAAK4a,QAGvC7R,OAAQ,SAAUF,EAASQ,GACnBrJ,KAAK6mB,UAAyC9iB,IAAlC/D,KAAK0X,KAAKhP,UAAUue,YAChC5d,EAAOL,IAAI,WAAYhJ,KAAK0I,UAAW1I,KAAKyI,QAC5CzI,KAAK0X,KAAK3O,OAAOF,EAASQ,GACtBrJ,KAAKqmB,WACLhd,EAAOL,IAAI,KACXhJ,KAAKqmB,SAAStd,OAAOF,EAASQ,IAElCA,EAAOL,IAAI,OAGnB+d,QAAS,WACL,OAAQ/mB,KAAK0X,gBAAgBuO,GACzBjmB,KAAK0X,KAAK3Y,MAAMA,MAAQiB,KAAK0X,KAAK3Y,OAE1CmoB,iBAAkB,WACd,IAAIxP,EAAO1X,KAAK0X,KAIhB,OAHIA,aAAgBuO,KAChBvO,EAAOA,EAAK3Y,SAEZ2Y,aAAgBwN,KACTxN,EAAK+N,qBAIpB0B,cAAe,SAAUte,GACrB,IAAI6O,EAAO1X,KAAK0X,KAIhB,OAHIA,aAAgBuO,KAChBvO,EAAOA,EAAK3Y,OAET,IAAI6nB,GAAOlP,EAAKjO,KAAKZ,GAAU7I,KAAKqmB,SAAUrmB,KAAKqB,QAASrB,KAAKyI,OAAQzI,KAAK0I,UAAW1I,KAAK2K,mBAEzGyc,SAAU,SAAUve,GAChB,IAAI6O,EAAO1X,KAAK0X,KAAKjO,KAAKZ,GACtBb,EAAWhI,KAAK0I,UACpB,KAAMgP,aAAgBuO,IAAM,CAExB,IAAIa,EAAYpP,EAAK3Y,MACjBiJ,GACA8e,GACAje,EAAQkQ,oBAAoB+N,GAC5BpP,EAAK3Y,MAAQ8J,EAAQoQ,YAAY6N,EAAW9e,EAAStH,UAGrDgX,EAAK3Y,MAAQ8J,EAAQsQ,cAAczB,EAAK3Y,OAGhD,OAAO2Y,GAEXjO,KAAM,SAAUZ,GACZ,IAAI2I,EAASxR,KAAKqnB,OAAOxe,GAWzB,OAVI7I,KAAKqB,QAAQ4lB,WAAajnB,KAAKqK,sBAC3BmH,EAAO1O,QAA4B,IAAlB0O,EAAO1O,OACxB0O,EAAOhJ,SAAQ,SAAUH,GACrBA,EAAKiC,wBAITkH,EAAOlH,sBAGRkH,GAEX6V,OAAQ,SAAUxe,GACd,IAAI6R,EACA4M,EACAjB,EAAWrmB,KAAKqmB,UAAYrmB,KAAKqmB,SAAS5c,KAAKZ,GACnD,GAAI7I,KAAKqB,QAAQ2lB,SAAU,CACvB,GAAIhnB,KAAK4a,MAAQ5a,KAAK4a,KAAKnR,KACvB,IACIzJ,KAAK4a,KAAKnR,KAAKZ,GAEnB,MAAOpF,GAEH,MADAA,EAAEwO,QAAU,iCACN,IAAIH,EAAUrO,EAAGzD,KAAK4a,KAAK1G,QAASlU,KAAK4a,KAAKnU,UAO5D,OAJA6gB,EAAWze,EAAQwP,OAAO,IAAMxP,EAAQwP,OAAO,GAAGkB,iBAC9C+N,GAAYtnB,KAAK4a,MAAQ5a,KAAK4a,KAAKxU,WACnCkhB,EAASvP,YAAY/X,KAAK4a,KAAKxU,WAE5B,GAEX,GAAIpG,KAAKunB,OACoB,oBAAdvnB,KAAKunB,OACZvnB,KAAKunB,KAAOvnB,KAAKunB,QAEjBvnB,KAAKunB,MACL,MAAO,GAGf,GAAIvnB,KAAKqB,QAAQsU,OAAQ,CACrB,IAAIvD,EAAW,IAAI8C,EAAUlV,KAAK4a,KAAM,EAAG,CACvCnU,SAAUzG,KAAKwnB,iBACfP,UAAWjnB,KAAK0X,KAAKhP,WAAa1I,KAAK0X,KAAKhP,UAAUue,YACvD,GAAM,GACT,OAAOjnB,KAAKqmB,SAAW,IAAID,GAAM,CAAChU,GAAWpS,KAAKqmB,SAAStnB,OAAS,CAACqT,GAEpE,GAAIpS,KAAK6mB,IAAK,CACf,IAAIY,EAAY,IAAIb,GAAO5mB,KAAKonB,SAASve,GAAUwd,EAAUrmB,KAAKqB,QAASrB,KAAKyI,QAChF,IAAKgf,EAAUZ,KAAO7mB,KAAKiF,MACvB,MAAMjF,KAAKiF,MAEf,OAAOwiB,EAEN,OAAIznB,KAAK4a,MACVF,EAAU,IAAId,GAAQ,KAAMpJ,EAAUxQ,KAAK4a,KAAKd,QAChDY,EAAQQ,YAAYrS,GACb7I,KAAKqmB,SAAW,IAAID,GAAM1L,EAAQZ,MAAO9Z,KAAKqmB,SAAStnB,OAAS2b,EAAQZ,OAGxE,MAKnB,IAAI4N,GAAa,aACjBA,GAAWhoB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC7CkgB,mBAAoB,SAAUC,EAAY/e,GACtC,IAAI2I,EACAkU,EAAO1lB,KACP6nB,EAAc,GAClB,IAAKhf,EAAQ3I,kBACT,KAAM,CAAE+R,QAAS,+DACbxL,SAAUzG,KAAKgI,WAAWvB,SAC1ByC,MAAOlJ,KAAKiI,YAEpB2f,EAAaA,EAAWzmB,QAAQ,kBAAkB,SAAUQ,EAAGtD,GAC3D,OAAOqnB,EAAKoC,MAAM,IAAIxD,GAAS,IAAMjmB,EAAMqnB,EAAKzd,WAAYyd,EAAK1d,YAAYyB,KAAKZ,OAEtF,IACI+e,EAAa,IAAIjV,SAAS,WAAaiV,EAAa,KAExD,MAAOnkB,GACH,KAAM,CAAEwO,QAAS,gCAAkCxO,EAAEwO,QAAU,UAAY2V,EAAa,IAAKnhB,SAAUzG,KAAKgI,WAAWvB,SACnHyC,MAAOlJ,KAAKiI,YAEpB,IAAI+T,EAAYnT,EAAQwP,OAAO,GAAG2D,YAClC,IAAK,IAAIlN,KAAKkN,EACNA,EAAUrc,eAAemP,KAEzB+Y,EAAY/Y,EAAE9B,MAAM,IAAM,CACtBjO,MAAOid,EAAUlN,GAAG/P,MACpBgpB,KAAM,WACF,OAAO/nB,KAAKjB,MAAM0K,KAAKZ,GAASD,WAKhD,IACI4I,EAASoW,EAAW3pB,KAAK4pB,GAE7B,MAAOpkB,GACH,KAAM,CAAEwO,QAAS,iCAAmCxO,EAAEpF,KAAO,KAAOoF,EAAEwO,QAAQ9Q,QAAQ,OAAQ,KAAQ,IAAKsF,SAAUzG,KAAKgI,WAAWvB,SACjIyC,MAAOlJ,KAAKiI,YAEpB,OAAOuJ,GAEXsW,MAAO,SAAUpX,GACb,OAAIpI,MAAMC,QAAQmI,EAAI3R,QAAW2R,EAAI3R,MAAM+D,OAAS,EACzC,IAAM4N,EAAI3R,MAAMkM,KAAI,SAAUK,GAAK,OAAOA,EAAE1C,WAAYQ,KAAK,MAAQ,IAGrEsH,EAAI9H,WAKvB,IAAIof,GAAa,SAAUC,EAAQ7C,EAASlc,EAAOwE,GAC/C1N,KAAKolB,QAAUA,EACfplB,KAAK4nB,WAAaK,EAClBjoB,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,GAErBsa,GAAWtoB,UAAYlB,OAAOoN,OAAO,IAAI8b,GAAc,CACnD7hB,KAAM,aACN4D,KAAM,SAAUZ,GACZ,IAAI2I,EAASxR,KAAK2nB,mBAAmB3nB,KAAK4nB,WAAY/e,GAClDhD,SAAc2L,EAClB,MAAa,WAAT3L,GAAsBwc,MAAM7Q,GAGd,WAAT3L,EACE,IAAIqf,GAAO,IAAO1T,EAAS,IAAMA,EAAQxR,KAAKolB,QAASplB,KAAKyI,QAE9DH,MAAMC,QAAQiJ,GACZ,IAAI0D,EAAU1D,EAAOpI,KAAK,OAG1B,IAAI8L,EAAU1D,GATd,IAAI0Q,GAAU1Q,MAcjC,IAAI0W,GAAa,SAAU7oB,EAAK6Q,GAC5BlQ,KAAKX,IAAMA,EACXW,KAAKjB,MAAQmR,GAEjBgY,GAAWxoB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC7C5B,KAAM,aACNyD,OAAQ,SAAUC,GACdvJ,KAAKjB,MAAQwK,EAAQC,MAAMxJ,KAAKjB,QAEpC0K,KAAM,SAAUZ,GACZ,OAAI7I,KAAKjB,MAAM0K,KACJ,IAAIye,GAAWloB,KAAKX,IAAKW,KAAKjB,MAAM0K,KAAKZ,IAE7C7I,MAEX+I,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAIhJ,KAAKX,IAAM,KAClBW,KAAKjB,MAAMgK,OACX/I,KAAKjB,MAAMgK,OAAOF,EAASQ,GAG3BA,EAAOL,IAAIhJ,KAAKjB,UAK5B,IAAIopB,GAAY,SAAUxe,EAAI5L,EAAGa,EAAGd,EAAGsqB,GACnCpoB,KAAK2J,GAAKA,EAAG0D,OACbrN,KAAKqoB,OAAStqB,EACdiC,KAAKsoB,OAAS1pB,EACdoB,KAAKyI,OAAS3K,EACdkC,KAAKooB,OAASA,GAElBD,GAAUzoB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACNyD,OAAQ,SAAUC,GACdvJ,KAAKqoB,OAAS9e,EAAQC,MAAMxJ,KAAKqoB,QACjCroB,KAAKsoB,OAAS/e,EAAQC,MAAMxJ,KAAKsoB,SAErC7e,KAAM,SAAUZ,GACZ,IAAI2I,EAAS,SAAW7H,EAAIC,EAAGC,GAC3B,OAAQF,GACJ,IAAK,MAAO,OAAOC,GAAKC,EACxB,IAAK,KAAM,OAAOD,GAAKC,EACvB,QACI,OAAQpC,EAAK0C,QAAQP,EAAGC,IACpB,KAAM,EACF,MAAc,MAAPF,GAAqB,OAAPA,GAAsB,OAAPA,EACxC,KAAK,EACD,MAAc,MAAPA,GAAqB,OAAPA,GAAsB,OAAPA,GAAsB,OAAPA,EACvD,KAAK,EACD,MAAc,MAAPA,GAAqB,OAAPA,EACzB,QACI,OAAO,IAbd,CAgBV3J,KAAK2J,GAAI3J,KAAKqoB,OAAO5e,KAAKZ,GAAU7I,KAAKsoB,OAAO7e,KAAKZ,IACxD,OAAO7I,KAAKooB,QAAU5W,EAASA,KAIvC,IAAI+W,GAAoB,SAAUxpB,GAC9BiB,KAAKjB,MAAQA,GAEjBwpB,GAAkB7oB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACpD5B,KAAM,sBAGV,IAAI2iB,GAAW,SAAUngB,GACrBrI,KAAKjB,MAAQsJ,GAEjBmgB,GAAS9oB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC3C5B,KAAM,WACNkD,OAAQ,SAAUF,EAASQ,GACvBA,EAAOL,IAAI,KACXhJ,KAAKjB,MAAMgK,OAAOF,EAASQ,IAE/BI,KAAM,SAAUZ,GACZ,OAAIA,EAAQiQ,WACD,IAAKkK,GAAU,IAAK,CAAC,IAAId,IAAW,GAAIliB,KAAKjB,QAAS0K,KAAKZ,GAE/D,IAAI2f,GAASxoB,KAAKjB,MAAM0K,KAAKZ,OAI5C,IAAI4f,GAAS,SAAUrO,EAAUsO,EAAQxf,EAAOwE,EAAiB/C,GAS7D,OARA3K,KAAKoa,SAAWA,EAChBpa,KAAK0oB,OAASA,EACd1oB,KAAK2oB,UAAYF,GAAOG,UACxB5oB,KAAK6oB,WAAa,CAAC7oB,KAAK2oB,WACxB3oB,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAK4K,mBAAmBD,GACxB3K,KAAKqV,WAAY,EACTqT,GACJ,IAAK,MACD1oB,KAAK8oB,aAAc,EACnB9oB,KAAK+oB,YAAa,EAClB,MACJ,QACI/oB,KAAK8oB,aAAc,EACnB9oB,KAAK+oB,YAAa,EAClB,MAER/oB,KAAKkI,UAAUlI,KAAKoa,SAAUpa,OAElCyoB,GAAO/oB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACzC5B,KAAM,SACNyD,OAAQ,SAAUC,GACdvJ,KAAKoa,SAAW7Q,EAAQC,MAAMxJ,KAAKoa,WAEvC3Q,KAAM,SAAUZ,GACZ,OAAO,IAAI4f,GAAOzoB,KAAKoa,SAAS3Q,KAAKZ,GAAU7I,KAAK0oB,OAAQ1oB,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2K,mBAEvGgD,MAAO,SAAU9E,GACb,OAAO,IAAI4f,GAAOzoB,KAAKoa,SAAUpa,KAAK0oB,OAAQ1oB,KAAKiI,WAAYjI,KAAKgI,WAAYhI,KAAK2K,mBAGzFqe,kBAAmB,SAAUnP,GACzB,IAAuB/b,EAAGmrB,EAAtBC,EAAe,GACnB,IAAKprB,EAAI,EAAGA,EAAI+b,EAAU/W,OAAQhF,IAC9BmrB,EAAmBpP,EAAU/b,GAAGuV,SAG5BvV,EAAI,GAAKmrB,EAAiBnmB,QAAmD,KAAzCmmB,EAAiB,GAAGzb,WAAWzO,QACnEkqB,EAAiB,GAAGzb,WAAWzO,MAAQ,KAE3CmqB,EAAeA,EAAa7iB,OAAOwT,EAAU/b,GAAGuV,UAEpDrT,KAAKmpB,cAAgB,CAAC,IAAI/V,EAAS8V,IACnClpB,KAAKmpB,cAAc,GAAGve,mBAAmB5K,KAAK2K,qBAGtD8d,GAAOG,QAAU,EAEjB,IAAIQ,GAAe,SAAUxT,EAAU1M,EAAOwE,GAC1C1N,KAAK4V,SAAWA,EAChB5V,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAKqV,WAAY,GAErB+T,GAAa1pB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC/C5B,KAAM,eACN4D,KAAM,SAAUZ,GACZ,IAAIiR,EACAuP,EAAkB,IAAI/E,GAAStkB,KAAK4V,SAAU5V,KAAKiI,WAAYjI,KAAKgI,YAAYyB,KAAKZ,GACrF5D,EAAQ,IAAI6M,EAAU,CAAEG,QAAS,oCAAsCjS,KAAK4V,WAChF,IAAKyT,EAAgB3O,QAAS,CAC1B,GAAI2O,EAAgBvP,MAChBA,EAAQuP,OAEP,GAAI/gB,MAAMC,QAAQ8gB,GACnBvP,EAAQ,IAAIF,GAAQ,GAAIyP,OAEvB,KAAI/gB,MAAMC,QAAQ8gB,EAAgBtqB,OAInC,MAAMkG,EAHN6U,EAAQ,IAAIF,GAAQ,GAAIyP,EAAgBtqB,OAK5CsqB,EAAkB,IAAI1I,GAAgB7G,GAE1C,GAAIuP,EAAgB3O,QAChB,OAAO2O,EAAgBzI,SAAS/X,GAEpC,MAAM5D,KAId,IAAIqkB,GAAiB,SAAUC,EAAUC,EAAStgB,EAAOlB,GACrDhI,KAAKjB,MAAQwqB,EACbvpB,KAAKwpB,QAAUA,EACfxpB,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYV,GAErBshB,GAAe5pB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CACjD5B,KAAM,iBACN4D,KAAM,SAAUZ,GACZ,IAAI/K,EAAGO,EAAMyb,EAAQ9Z,KAAKjB,MAAM0K,KAAKZ,GACrC,IAAK/K,EAAI,EAAGA,EAAIkC,KAAKwpB,QAAQ1mB,OAAQhF,IAAK,CAUtC,GATAO,EAAO2B,KAAKwpB,QAAQ1rB,GAMhBwK,MAAMC,QAAQuR,KACdA,EAAQ,IAAIF,GAAQ,CAAC,IAAIxG,GAAa0G,IAE7B,KAATzb,EACAyb,EAAQA,EAAMyC,uBAEb,GAAuB,MAAnBle,EAAKwP,OAAO,IAOjB,GANuB,MAAnBxP,EAAKwP,OAAO,KACZxP,EAAO,IAAM,IAAIimB,GAASjmB,EAAK8U,OAAO,IAAI1J,KAAKZ,GAAS9J,OAExD+a,EAAMkC,YACNlC,EAAQA,EAAMlE,SAASvX,KAEtByb,EACD,KAAM,CAAEjU,KAAM,OAAQoM,QAAS,YAAc5T,EAAO,aAAcoI,SAAUzG,KAAKgI,WAAWvB,SACxFyC,MAAOlJ,KAAKiI,gBAGnB,CAUD,GARI5J,EADyB,OAAzBA,EAAKorB,UAAU,EAAG,GACX,IAAM,IAAInF,GAASjmB,EAAK8U,OAAO,IAAI1J,KAAKZ,GAAS9J,MAG9B,MAAnBV,EAAKwP,OAAO,GAAaxP,EAAO,IAAMA,EAE7Cyb,EAAMqC,aACNrC,EAAQA,EAAMra,SAASpB,KAEtByb,EACD,KAAM,CAAEjU,KAAM,OAAQoM,QAAS,aAAgB5T,EAAK8U,OAAO,GAAK,cAAgB1M,SAAUzG,KAAKgI,WAAWvB,SACtGyC,MAAOlJ,KAAKiI,YAIpB6R,EAAQA,EAAMA,EAAMhX,OAAS,GAE7BgX,EAAM/a,QACN+a,EAAQA,EAAMrQ,KAAKZ,GAAS9J,OAE5B+a,EAAMY,UACNZ,EAAQA,EAAMY,QAAQjR,KAAKZ,IAGnC,OAAOiR,KAIf,IAAI4P,GAAa,SAAUrrB,EAAMsrB,EAAQ7P,EAAOvG,EAAWqW,EAAUvR,EAAQ1N,GACzE3K,KAAK3B,KAAOA,GAAQ,kBACpB2B,KAAK6Z,UAAY,CAAC,IAAIzG,EAAS,CAAC,IAAI7F,EAAQ,KAAMlP,GAAM,EAAO2B,KAAKyI,OAAQzI,KAAK0I,cACjF1I,KAAK2pB,OAASA,EACd3pB,KAAKuT,UAAYA,EACjBvT,KAAK4pB,SAAWA,EAChB5pB,KAAK6pB,MAAQF,EAAO7mB,OACpB9C,KAAK8Z,MAAQA,EACb9Z,KAAK+Z,SAAW,GAChB,IAAI+P,EAAqB,GACzB9pB,KAAK+pB,SAAWJ,EAAO3Z,QAAO,SAAUiS,EAAOriB,GAC3C,OAAKA,EAAEvB,MAASuB,EAAEvB,OAASuB,EAAEb,MAClBkjB,EAAQ,GAGf6H,EAAmBpkB,KAAK9F,EAAEvB,MACnB4jB,KAEZ,GACHjiB,KAAK8pB,mBAAqBA,EAC1B9pB,KAAKqY,OAASA,EACdrY,KAAK4K,mBAAmBD,GACxB3K,KAAKqV,WAAY,GAErBqU,GAAWhqB,UAAYlB,OAAOoN,OAAO,IAAIgO,GAAW,CAChD/T,KAAM,kBACNuV,WAAW,EACX9R,OAAQ,SAAUC,GACVvJ,KAAK2pB,QAAU3pB,KAAK2pB,OAAO7mB,SAC3B9C,KAAK2pB,OAASpgB,EAAQoK,WAAW3T,KAAK2pB,SAE1C3pB,KAAK8Z,MAAQvQ,EAAQoK,WAAW3T,KAAK8Z,OACjC9Z,KAAKuT,YACLvT,KAAKuT,UAAYhK,EAAQC,MAAMxJ,KAAKuT,aAG5CyW,WAAY,SAAUnhB,EAASohB,EAAU/d,EAAMge,GAE3C,IACIC,EACAC,EAEAtsB,EACAiR,EACAmB,EACA7R,EACAgsB,EACAC,EATA9F,EAAQ,IAAI5K,GAAQ,KAAM,MAG1B+P,EAASnZ,EAAUxQ,KAAK2pB,QAOxBY,EAAa,EAKjB,GAJIN,EAAS5R,QAAU4R,EAAS5R,OAAO,IAAM4R,EAAS5R,OAAO,GAAGkB,mBAC5DiL,EAAMjL,iBAAmB0Q,EAAS5R,OAAO,GAAGkB,iBAAiBpB,WAEjE8R,EAAW,IAAIhT,EAASmB,KAAK6R,EAAU,CAACzF,GAAOne,OAAO4jB,EAAS5R,SAC3DnM,EAGA,IAFAA,EAAOsE,EAAUtE,GACjBqe,EAAare,EAAKpJ,OACbhF,EAAI,EAAGA,EAAIysB,EAAYzsB,IAExB,GADAssB,EAAMle,EAAKpO,GACPO,EAAQ+rB,GAAOA,EAAI/rB,KAAO,CAE1B,IADAgsB,GAAe,EACVtb,EAAI,EAAGA,EAAI4a,EAAO7mB,OAAQiM,IAC3B,IAAKmb,EAAenb,IAAM1Q,IAASsrB,EAAO5a,GAAG1Q,KAAM,CAC/C6rB,EAAenb,GAAKqb,EAAIrrB,MAAM0K,KAAKZ,GACnC2b,EAAM3H,YAAY,IAAIpH,EAAYpX,EAAM+rB,EAAIrrB,MAAM0K,KAAKZ,KACvDwhB,GAAe,EACf,MAGR,GAAIA,EAAc,CACdne,EAAKtG,OAAO9H,EAAG,GACfA,IACA,SAGA,KAAM,CAAE+H,KAAM,UAAWoM,QAAS,sBAAwBjS,KAAK3B,KAAO,IAAM6N,EAAKpO,GAAGO,KAAO,cAM3G,IADAisB,EAAW,EACNxsB,EAAI,EAAGA,EAAI6rB,EAAO7mB,OAAQhF,IAC3B,IAAIosB,EAAepsB,GAAnB,CAIA,GADAssB,EAAMle,GAAQA,EAAKoe,GACfjsB,EAAOsrB,EAAO7rB,GAAGO,KACjB,GAAIsrB,EAAO7rB,GAAG8rB,SAAU,CAEpB,IADAO,EAAU,GACLpb,EAAIub,EAAUvb,EAAIwb,EAAYxb,IAC/Bob,EAAQzkB,KAAKwG,EAAK6C,GAAGhQ,MAAM0K,KAAKZ,IAEpC2b,EAAM3H,YAAY,IAAIpH,EAAYpX,EAAM,IAAI+kB,GAAW+G,GAAS1gB,KAAKZ,SAEpE,CAED,GADAqH,EAAMka,GAAOA,EAAIrrB,MACbmR,EAGIA,EADA5H,MAAMC,QAAQ2H,GACR,IAAIyQ,GAAgB,IAAI/G,GAAQ,GAAI1J,IAGpCA,EAAIzG,KAAKZ,OAGlB,KAAI8gB,EAAO7rB,GAAGiB,MAKf,KAAM,CAAE8G,KAAM,UAAWoM,QAAS,iCAAmCjS,KAAK3B,KAAO,KAAOksB,EAAa,QAAUvqB,KAAK6pB,MAAQ,KAJ5H3Z,EAAMyZ,EAAO7rB,GAAGiB,MAAM0K,KAAKwgB,GAC3BzF,EAAM/I,aAKV+I,EAAM3H,YAAY,IAAIpH,EAAYpX,EAAM6R,IACxCga,EAAepsB,GAAKoS,EAG5B,GAAIyZ,EAAO7rB,GAAG8rB,UAAY1d,EACtB,IAAK6C,EAAIub,EAAUvb,EAAIwb,EAAYxb,IAC/Bmb,EAAenb,GAAK7C,EAAK6C,GAAGhQ,MAAM0K,KAAKZ,GAG/CyhB,IAEJ,OAAO9F,GAEXpO,cAAe,WACX,IAAI0D,EAAS9Z,KAAK8Z,MAAqB9Z,KAAK8Z,MAAM7O,KAAI,SAAUrM,GAC5D,OAAIA,EAAEwX,cACKxX,EAAEwX,eAAc,GAGhBxX,KALWoB,KAAK8Z,MAQ3BtI,EAAS,IAAIkY,GAAW1pB,KAAK3B,KAAM2B,KAAK2pB,OAAQ7P,EAAO9Z,KAAKuT,UAAWvT,KAAK4pB,SAAU5pB,KAAKqY,QAC/F,OAAO7G,GAEX/H,KAAM,SAAUZ,GACZ,OAAO,IAAI6gB,GAAW1pB,KAAK3B,KAAM2B,KAAK2pB,OAAQ3pB,KAAK8Z,MAAO9Z,KAAKuT,UAAWvT,KAAK4pB,SAAU5pB,KAAKqY,QAAU7H,EAAU3H,EAAQwP,UAE9HmS,SAAU,SAAU3hB,EAASqD,EAAMwJ,GAC/B,IAGIoE,EACAY,EAJA+P,EAAa,GACbC,EAAc1qB,KAAKqY,OAASrY,KAAKqY,OAAOhS,OAAOwC,EAAQwP,QAAUxP,EAAQwP,OACzEmM,EAAQxkB,KAAKgqB,WAAWnhB,EAAS,IAAIoO,EAASmB,KAAKvP,EAAS6hB,GAAcxe,EAAMue,GAWpF,OARAjG,EAAM3H,YAAY,IAAIpH,EAAY,aAAc,IAAI2N,GAAWqH,GAAYhhB,KAAKZ,KAChFiR,EAAQtJ,EAAUxQ,KAAK8Z,OACvBY,EAAU,IAAId,GAAQ,KAAME,GAC5BY,EAAQC,gBAAkB3a,KAC1B0a,EAAUA,EAAQjR,KAAK,IAAIwN,EAASmB,KAAKvP,EAAS,CAAC7I,KAAMwkB,GAAOne,OAAOqkB,KACnEhV,IACAgF,EAAUA,EAAQtE,iBAEfsE,GAEXmB,eAAgB,SAAU3P,EAAMrD,GAC5B,QAAI7I,KAAKuT,YAAcvT,KAAKuT,UAAU9J,KAAK,IAAIwN,EAASmB,KAAKvP,EAAS,CAAC7I,KAAKgqB,WAAWnhB,EAAuC,IAAIoO,EAASmB,KAAKvP,EAAS7I,KAAKqY,OAASrY,KAAKqY,OAAOhS,OAAOwC,EAAQwP,QAAUxP,EAAQwP,QAASnM,EAAM,KAC9N7F,OAAOrG,KAAKqY,QAAU,IACtBhS,OAAOwC,EAAQwP,YAKxBuD,UAAW,SAAU1P,EAAMrD,GACvB,IACI0L,EADAoW,EAAcze,GAAQA,EAAKpJ,QAAW,EAEtCgnB,EAAqB9pB,KAAK8pB,mBAC1Bc,EAAmB1e,EAAWA,EAAK8D,QAAO,SAAUiS,EAAOriB,GAC3D,OAAIkqB,EAAmB3d,QAAQvM,EAAEvB,MAAQ,EAC9B4jB,EAAQ,EAGRA,IAEZ,GAP2B,EAQ9B,GAAKjiB,KAAK4pB,UASN,GAAIgB,EAAmB5qB,KAAK+pB,SAAW,EACnC,OAAO,MAVK,CAChB,GAAIa,EAAkB5qB,KAAK+pB,SACvB,OAAO,EAEX,GAAIY,EAAa3qB,KAAK2pB,OAAO7mB,OACzB,OAAO,EASfyR,EAAMjN,KAAKkE,IAAIof,EAAiB5qB,KAAK6pB,OACrC,IAAK,IAAI/rB,EAAI,EAAGA,EAAIyW,EAAKzW,IACrB,IAAKkC,KAAK2pB,OAAO7rB,GAAGO,OAAS2B,KAAK2pB,OAAO7rB,GAAG8rB,UACpC1d,EAAKpO,GAAGiB,MAAM0K,KAAKZ,GAASD,SAAW5I,KAAK2pB,OAAO7rB,GAAGiB,MAAM0K,KAAKZ,GAASD,QAC1E,OAAO,EAInB,OAAO,KAIf,IAAIiiB,GAAY,SAAUxX,EAAUnH,EAAMhD,EAAOwE,EAAiBgI,GAC9D1V,KAAKoa,SAAW,IAAIhH,EAASC,GAC7BrT,KAAK6O,UAAY3C,GAAQ,GACzBlM,KAAKyI,OAASS,EACdlJ,KAAK0I,UAAYgF,EACjB1N,KAAK0V,UAAYA,EACjB1V,KAAKqV,WAAY,EACjBrV,KAAKkI,UAAUlI,KAAKoa,SAAUpa,OAElC6qB,GAAUnrB,UAAYlB,OAAOoN,OAAO,IAAInE,EAAQ,CAC5C5B,KAAM,YACNyD,OAAQ,SAAUC,GACVvJ,KAAKoa,WACLpa,KAAKoa,SAAW7Q,EAAQC,MAAMxJ,KAAKoa,WAEnCpa,KAAK6O,UAAU/L,SACf9C,KAAK6O,UAAYtF,EAAQoK,WAAW3T,KAAK6O,aAGjDpF,KAAM,SAAUZ,GACZ,IAAIiiB,EACAC,EACAC,EAEAZ,EACAa,EAGAntB,EACAI,EACAgtB,EACAC,EACAC,EAEAC,EAEAC,EAKArJ,EACAtH,EACA4Q,EApBArf,EAAO,GAGP4N,EAAQ,GACR9O,GAAQ,EAMRwgB,EAAa,GAEbC,EAAkB,GAElBC,GAAsB,EACtBC,EAAU,EACVC,EAAU,EACVC,EAAW,EAKf,SAASC,EAAaf,EAAOC,GACzB,IAAIE,EAAGtrB,EAAGmsB,EACV,IAAKb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGpB,IAFAO,EAAgBP,IAAK,EACrB1R,GAAYza,MAAMmsB,GACbtrB,EAAI,EAAGA,EAAIorB,EAAUloB,QAAU2oB,EAAgBP,GAAItrB,IACpDmsB,EAAYf,EAAUprB,GAClBmsB,EAAUlQ,iBACV4P,EAAgBP,GAAKO,EAAgBP,IAAMa,EAAUlQ,eAAe,KAAMhT,IAG9EkiB,EAAMlP,iBACN4P,EAAgBP,GAAKO,EAAgBP,IAAMH,EAAMlP,eAAe3P,EAAMrD,IAG9E,OAAI4iB,EAAgB,IAAMA,EAAgB,GAClCA,EAAgB,IAAMA,EAAgB,GAC/BA,EAAgB,GACnBG,EAAUC,EAEXF,EAEJD,EAEX,IAzBA1rB,KAAKoa,SAAWpa,KAAKoa,SAAS3Q,KAAKZ,GAyB9B/K,EAAI,EAAGA,EAAIkC,KAAK6O,UAAU/L,OAAQhF,IAGnC,GAFAssB,EAAMpqB,KAAK6O,UAAU/Q,GACrBmtB,EAAWb,EAAIrrB,MAAM0K,KAAKZ,GACtBuhB,EAAI4B,QAAU1jB,MAAMC,QAAQ0iB,EAASlsB,OAErC,IADAksB,EAAWA,EAASlsB,MACfb,EAAI,EAAGA,EAAI+sB,EAASnoB,OAAQ5E,IAC7BgO,EAAKxG,KAAK,CAAE3G,MAAOksB,EAAS/sB,UAIhCgO,EAAKxG,KAAK,CAAErH,KAAM+rB,EAAI/rB,KAAMU,MAAOksB,IAI3C,IADAM,EAAoB,SAAU/Q,GAAQ,OAAOA,EAAKoB,UAAU,KAAM/S,IAC7D/K,EAAI,EAAGA,EAAI+K,EAAQwP,OAAOvV,OAAQhF,IACnC,IAAKgtB,EAASjiB,EAAQwP,OAAOva,GAAGgf,KAAK9c,KAAKoa,SAAU,KAAMmR,IAAoBzoB,OAAS,EAAG,CAMtF,IALAsoB,GAAa,EAKRltB,EAAI,EAAGA,EAAI4sB,EAAOhoB,OAAQ5E,IAAK,CAIhC,IAHA6sB,EAAQD,EAAO5sB,GAAGsc,KAClBwQ,EAAYF,EAAO5sB,GAAGwZ,KACtByT,GAAc,EACTD,EAAI,EAAGA,EAAIriB,EAAQwP,OAAOvV,OAAQooB,IACnC,KAAOH,aAAiBrB,KAAgBqB,KAAWliB,EAAQwP,OAAO6S,GAAGvQ,iBAAmB9R,EAAQwP,OAAO6S,IAAK,CACxGC,GAAc,EACd,MAGJA,GAGAJ,EAAMnP,UAAU1P,EAAMrD,KACtBwiB,EAAY,CAAEN,MAAOA,EAAOpJ,MAAOmK,EAAaf,EAAOC,IACnDK,EAAU1J,QAAU+J,GACpBF,EAAW9lB,KAAK2lB,GAEpBrgB,GAAQ,GAKhB,IAFAwO,GAAYG,QACZsI,EAAQ,CAAC,EAAG,EAAG,GACV/jB,EAAI,EAAGA,EAAIstB,EAAW1oB,OAAQ5E,IAC/B+jB,EAAMuJ,EAAWttB,GAAGyjB,SAExB,GAAIM,EAAM0J,GAAW,EACjBL,EAAgBO,OAIhB,GADAP,EAAgBM,EACX3J,EAAM2J,GAAW3J,EAAM4J,GAAa,EACrC,KAAM,CAAEhmB,KAAM,UAAWoM,QAAS,yDAA2DjS,KAAKisB,OAAO/f,GAAQ,IAAKhD,MAAOlJ,KAAKiI,WAAYxB,SAAUzG,KAAKgI,WAAWvB,UAGhL,IAAKvI,EAAI,EAAGA,EAAIstB,EAAW1oB,OAAQ5E,IAE/B,GADAmtB,EAAYG,EAAWttB,GAAGyjB,MACrB0J,IAAcM,GAAaN,IAAcC,EAC1C,IACIP,EAAQS,EAAWttB,GAAG6sB,MAChBA,aAAiBrB,KACnB/O,EAAkBoQ,EAAMpQ,iBAAmBoQ,EAC3CA,EAAQ,IAAIrB,GAAW,GAAI,GAAIqB,EAAMjR,MAAO,MAAM,EAAO,KAAMa,EAAgBhQ,kBAC/EogB,EAAMpQ,gBAAkBA,GAE5B,IAAIuR,EAAWnB,EAAMP,SAAS3hB,EAASqD,EAAMlM,KAAK0V,WAAWoE,MAC7D9Z,KAAKmsB,4BAA4BD,GACjC5jB,MAAM5I,UAAUgG,KAAK8V,MAAM1B,EAAOoS,GAEtC,MAAOzoB,GACH,KAAM,CAAEwO,QAASxO,EAAEwO,QAAS/I,MAAOlJ,KAAKiI,WAAYxB,SAAUzG,KAAKgI,WAAWvB,SAAUyL,MAAOzO,EAAEyO,OAI7G,GAAIlH,EACA,OAAO8O,EAInB,MAAIsR,EACM,CAAEvlB,KAAM,UAAWoM,QAAS,yCAA2CjS,KAAKisB,OAAO/f,GAAQ,IAAKhD,MAAOlJ,KAAKiI,WAAYxB,SAAUzG,KAAKgI,WAAWvB,UAGlJ,CAAEZ,KAAM,OAAQoM,QAASjS,KAAKoa,SAASxR,QAAQyE,OAAS,gBAAiBnE,MAAOlJ,KAAKiI,WAAYxB,SAAUzG,KAAKgI,WAAWvB,WAGzI0lB,4BAA6B,SAAUC,GACnC,IAAItuB,EAAG0c,EACP,GAAIxa,KAAKqK,mBACL,IAAKvM,EAAI,EAAGA,EAAIsuB,EAAYtpB,OAAQhF,IAChC0c,EAAO4R,EAAYtuB,GACnB0c,EAAKlQ,sBAIjB2hB,OAAQ,SAAU/f,GACd,OAAOlM,KAAKoa,SAASxR,QAAQyE,OAAS,KAAOnB,EAAOA,EAAKjB,KAAI,SAAUrB,GACnE,IAAIqhB,EAAW,GAUf,OATIrhB,EAAEvL,OACF4sB,GAAYrhB,EAAEvL,KAAO,KAErBuL,EAAE7K,MAAM6J,MACRqiB,GAAYrhB,EAAE7K,MAAM6J,QAGpBqiB,GAAY,MAETA,KACR7hB,KAAK,MAAQ,IAAM,OAI9B,IAAIijB,GAAO,CACP5kB,KAAMA,EAAMoD,MAAOA,EAAOuV,OAAQA,GAAQO,gBAAiBA,GAAiBqC,UAAWA,GACvFd,UAAWA,GAAWrB,KAAMA,GAAM9L,QAASA,EAASuP,SAAUA,GAAUI,SAAUA,GAClF9K,QAASA,GAASrM,QAASA,EAAS0X,UAAWA,GAAW9X,WAAYA,EAAYiG,SAAUA,EAC5F8R,OAAQA,GAAQ9B,WAAYA,GAAY3N,YAAaA,EAAawO,KAAMA,GAAMgC,IAAKA,GAAKW,OAAQA,GAChG/P,QAASA,EAAS3B,UAAWA,EAAWJ,MAAOA,EAAOkT,WAAYA,GAAYE,WAAYA,GAC1FC,UAAWA,GAAWlb,MAAOA,EAAOmZ,MAAOA,GAAOmC,kBAAmBA,GAAmBC,SAAUA,GAClGC,OAAQA,GAAQW,aAAcA,GAAcE,eAAgBA,GAC5DyB,MAAO,CACH9G,KAAM4G,GACNnB,WAAYA,KAIhB4C,GAAqC,WACrC,SAASA,KAmHT,OAjHAA,EAAoB5sB,UAAUqnB,QAAU,SAAUtgB,GAC9C,IAAIsI,EAAItI,EAAS8lB,YAAY,KAQ7B,OAPIxd,EAAI,IACJtI,EAAWA,EAASuG,MAAM,EAAG+B,IAEjCA,EAAItI,EAAS8lB,YAAY,KACrBxd,EAAI,IACJA,EAAItI,EAAS8lB,YAAY,OAEzBxd,EAAI,EACG,GAEJtI,EAASuG,MAAM,EAAG+B,EAAI,IAEjCud,EAAoB5sB,UAAU8sB,mBAAqB,SAAU9U,EAAM+U,GAC/D,MAAO,yBAAyBxoB,KAAKyT,GAAQA,EAAOA,EAAO+U,GAE/DH,EAAoB5sB,UAAUgtB,uBAAyB,SAAUhV,GAC7D,OAAO1X,KAAKwsB,mBAAmB9U,EAAM,UAEzC4U,EAAoB5sB,UAAUitB,aAAe,WACzC,OAAO,GAEXL,EAAoB5sB,UAAUktB,wBAA0B,WACpD,OAAO,GAEXN,EAAoB5sB,UAAUmtB,eAAiB,SAAUpmB,GACrD,MAAO,yBAA2BxC,KAAKwC,IAG3C6lB,EAAoB5sB,UAAU0J,KAAO,SAAU0jB,EAAUC,GACrD,OAAKD,EAGEA,EAAWC,EAFPA,GAIfT,EAAoB5sB,UAAUstB,SAAW,SAAUC,EAAKC,GAEpD,IAEIpvB,EACAyN,EACA4hB,EACAC,EALAC,EAAWrtB,KAAKstB,gBAAgBL,GAChCM,EAAevtB,KAAKstB,gBAAgBJ,GAKpCM,EAAO,GACX,GAAIH,EAASI,WAAaF,EAAaE,SACnC,MAAO,GAGX,IADAliB,EAAMjE,KAAKiE,IAAIgiB,EAAaG,YAAY5qB,OAAQuqB,EAASK,YAAY5qB,QAChEhF,EAAI,EAAGA,EAAIyN,EAAKzN,IACjB,GAAIyvB,EAAaG,YAAY5vB,KAAOuvB,EAASK,YAAY5vB,GACrD,MAKR,IAFAsvB,EAAqBG,EAAaG,YAAY1gB,MAAMlP,GACpDqvB,EAAiBE,EAASK,YAAY1gB,MAAMlP,GACvCA,EAAI,EAAGA,EAAIsvB,EAAmBtqB,OAAS,EAAGhF,IAC3C0vB,GAAQ,MAEZ,IAAK1vB,EAAI,EAAGA,EAAIqvB,EAAerqB,OAAS,EAAGhF,IACvC0vB,GAAQL,EAAervB,GAAK,IAEhC,OAAO0vB,GAGXlB,EAAoB5sB,UAAU4tB,gBAAkB,SAAUL,EAAKC,GAM3D,IAKIpvB,EACAyvB,EANAI,EAAgB,kGAChBN,EAAWJ,EAAIjiB,MAAM2iB,GACrBC,EAAW,GACXC,EAAiB,GACjBH,EAAc,GAGlB,IAAKL,EACD,MAAM,IAAI3pB,MAAM,iCAAmCupB,EAAM,KAG7D,GAAIC,KAAaG,EAAS,IAAMA,EAAS,IAAK,CAE1C,GADAE,EAAeL,EAAQliB,MAAM2iB,IACxBJ,EACD,MAAM,IAAI7pB,MAAM,+BAAiCwpB,EAAU,KAE/DG,EAAS,GAAKA,EAAS,IAAME,EAAa,IAAM,GAC3CF,EAAS,KACVA,EAAS,GAAKE,EAAa,GAAKF,EAAS,IAGjD,GAAIA,EAAS,GAGT,IAFAQ,EAAiBR,EAAS,GAAGlsB,QAAQ,MAAO,KAAKiK,MAAM,KAElDtN,EAAI,EAAGA,EAAI+vB,EAAe/qB,OAAQhF,IACT,OAAtB+vB,EAAe/vB,GACf4vB,EAAYvX,MAEe,MAAtB0X,EAAe/vB,IACpB4vB,EAAYhoB,KAAKmoB,EAAe/vB,IAW5C,OAPA8vB,EAASH,SAAWJ,EAAS,GAC7BO,EAASF,YAAcA,EACvBE,EAASE,SAAWT,EAAS,IAAM,IAAMQ,EAAezkB,KAAK,KAC7DwkB,EAASlW,MAAQ2V,EAAS,IAAM,IAAMK,EAAYtkB,KAAK,KACvDwkB,EAASnnB,SAAW4mB,EAAS,GAC7BO,EAASG,QAAUH,EAASlW,MAAQ2V,EAAS,IAAM,IACnDO,EAASX,IAAMW,EAASG,SAAWV,EAAS,IAAM,IAC3CO,GAEJtB,EApH6B,GAuHpC0B,GAAsC,WACtC,SAASA,IAELhuB,KAAKiuB,QAAU,WACX,OAAO,MAqJf,OAlJAD,EAAqBtuB,UAAUwuB,WAAa,SAAU9b,EAAUvJ,EAASqL,EAASia,EAAenmB,GAC7F,IAAIomB,EAAQ9G,EAAU+G,EAAWC,EAAaznB,EAAeJ,EAAU+K,EACvE3K,EAAgBgC,EAAQhC,cACpBmB,IAEIvB,EADoB,kBAAbuB,EACIA,EAGAA,EAASvB,UAG5B,IAAI8nB,GAAY,IAAKvuB,KAAK4kB,KAAK4J,aAAelB,gBAAgB7mB,GAAUA,SACxE,GAAIA,IACA4nB,EAAYxnB,EAAclI,IAAI8H,GAC1B4nB,GAAW,CAEX,GADA7c,EAASxR,KAAKyuB,cAAcJ,EAAW5nB,EAAU8nB,EAAWJ,GACxD3c,EACA,OAAOA,EAEX,IACQ6c,EAAUK,KACVL,EAAUK,IAAIzwB,KAAK+B,KAAK6I,QAASwlB,GAGzC,MAAO5qB,GAEH,OADAA,EAAEwO,QAAUxO,EAAEwO,SAAW,4BAClB,IAAIH,EAAUrO,EAAGyQ,EAASzN,GAErC,OAAO4nB,EAGfC,EAAc,CACV1wB,QAAS,GACTiJ,cAAeA,EACfmB,SAAUA,GAEdsf,EAAW/N,EAAiBna,SAC5B,IAAIuvB,EAAiB,SAAUje,GAC3B2d,EAAY3d,GAEhB,IACI0d,EAAS,IAAIzb,SAAS,SAAU,UAAW,iBAAkB,YAAa,OAAQ,OAAQ,WAAYP,GACtGgc,EAAOE,EAAatuB,KAAKiuB,QAAQxnB,GAAWkoB,EAAgBrH,EAAUtnB,KAAK4kB,KAAKyH,KAAMrsB,KAAK4kB,KAAM5c,GAErG,MAAOvE,GACH,OAAO,IAAIqO,EAAUrO,EAAGyQ,EAASzN,GAMrC,GAJK4nB,IACDA,EAAYC,EAAY1wB,SAE5BywB,EAAYruB,KAAK4uB,eAAeP,EAAW5nB,EAAU8nB,GACjDF,aAAqBvc,EACrB,OAAOuc,EAEX,IAAIA,EA8BA,OAAO,IAAIvc,EAAU,CAAEG,QAAS,sBAAwBiC,EAASzN,GA1BjE,GAHA4nB,EAAUna,QAAUA,EACpBma,EAAU5nB,SAAWA,IAEhB4nB,EAAUQ,YAAc7uB,KAAK8uB,eAAe,QAAST,EAAUQ,YAAc,KAC9Erd,EAASxR,KAAKyuB,cAAcJ,EAAW5nB,EAAU8nB,EAAWJ,GACxD3c,GACA,OAAOA,EAQf,GAJA3K,EAAckoB,UAAUV,EAAWrmB,EAASvB,SAAU6gB,GACtD+G,EAAUjoB,UAAYkhB,EAASpP,oBAE/B1G,EAASxR,KAAKyuB,cAAcJ,EAAW5nB,EAAU8nB,EAAWJ,GACxD3c,EACA,OAAOA,EAGX,IACQ6c,EAAUK,KACVL,EAAUK,IAAIzwB,KAAK+B,KAAK6I,QAASwlB,GAGzC,MAAO5qB,GAEH,OADAA,EAAEwO,QAAUxO,EAAEwO,SAAW,4BAClB,IAAIH,EAAUrO,EAAGyQ,EAASzN,GAMzC,OAAO4nB,GAEXL,EAAqBtuB,UAAU+uB,cAAgB,SAAUO,EAAQvoB,EAAUpI,EAAMgD,GAC7E,GAAIA,IAAY2tB,EAAOC,WACnB,OAAO,IAAInd,EAAU,CACjBG,QAAS,6CAA+C5T,EAAO,mCAGvE,IACI2wB,EAAOC,YAAcD,EAAOC,WAAW5tB,GAE3C,MAAOoC,GACH,OAAO,IAAIqO,EAAUrO,KAG7BuqB,EAAqBtuB,UAAUkvB,eAAiB,SAAUI,EAAQvoB,EAAUpI,GACxE,OAAI2wB,GAGsB,oBAAXA,IACPA,EAAS,IAAIA,GAEbA,EAAOH,YACH7uB,KAAK8uB,eAAeE,EAAOH,WAAY7uB,KAAK4kB,KAAKsK,SAAW,EACrD,IAAIpd,EAAU,CACjBG,QAAS,UAAY5T,EAAO,qBAAuB2B,KAAKmvB,gBAAgBH,EAAOH,cAIpFG,GAEJ,MAEXhB,EAAqBtuB,UAAUovB,eAAiB,SAAUM,EAAUC,GACxC,kBAAbD,IACPA,EAAWA,EAASpkB,MAAM,4BAC1BokB,EAAS3a,SAEb,IAAK,IAAI3W,EAAI,EAAGA,EAAIsxB,EAAStsB,OAAQhF,IACjC,GAAIsxB,EAAStxB,KAAOuxB,EAASvxB,GACzB,OAAOoN,SAASkkB,EAAStxB,IAAMoN,SAASmkB,EAASvxB,KAAO,EAAI,EAGpE,OAAO,GAEXkwB,EAAqBtuB,UAAUyvB,gBAAkB,SAAUD,GAEvD,IADA,IAAII,EAAgB,GACXxxB,EAAI,EAAGA,EAAIoxB,EAAQpsB,OAAQhF,IAChCwxB,IAAkBA,EAAgB,IAAM,IAAMJ,EAAQpxB,GAE1D,OAAOwxB,GAEXtB,EAAqBtuB,UAAU6vB,WAAa,SAAUC,GAClD,IAAK,IAAI1xB,EAAI,EAAGA,EAAI0xB,EAAQ1sB,OAAQhF,IAAK,CACrC,IAAIkxB,EAASQ,EAAQ1xB,GACjBkxB,EAAOO,YACPP,EAAOO,eAIZvB,EAzJ8B,GA4JrCyB,GAAa,CAAEC,aAAa,GAC5BC,IAAc,EAClB,SAASC,GAAMvnB,GACX,OAAOA,EAEX,SAASwnB,GAAenoB,EAAQooB,GAE5B,IAAIzwB,EAAK0wB,EACT,IAAK1wB,KAAOqI,EAGR,OADAqoB,EAAQroB,EAAOrI,UACA0wB,GACX,IAAK,WAGGA,EAAMrwB,WAAaqwB,EAAMrwB,UAAUmG,OACnCkqB,EAAMrwB,UAAUswB,UAAYF,KAEhC,MACJ,IAAK,SACDA,EAASD,GAAeE,EAAOD,GAC/B,MAGZ,OAAOA,EAEX,IAAIG,GAAyB,WACzB,SAASA,EAAQC,GACblwB,KAAKmwB,gBAAkBD,EACvBlwB,KAAKowB,cAAgB,GACrBpwB,KAAKqwB,eAAiB,GACjBV,KACDE,GAAexD,GAAM,GACrBsD,IAAc,GA6GtB,OA1GAM,EAAQvwB,UAAU8J,MAAQ,SAAUnB,GAChC,IAAKA,EACD,OAAOA,EAEX,IAAIioB,EAAgBjoB,EAAK2nB,UACzB,IAAKM,EAKD,OAHIjoB,EAAKtJ,OAASsJ,EAAKtJ,MAAMixB,WACzBhwB,KAAKwJ,MAAMnB,EAAKtJ,OAEbsJ,EAEX,IAIIkoB,EAJAC,EAAOxwB,KAAKmwB,gBACZzd,EAAO1S,KAAKowB,cAAcE,GAC1BG,EAAUzwB,KAAKqwB,eAAeC,GAC9BI,EAAYjB,GAUhB,GARAiB,EAAUhB,aAAc,EACnBhd,IACD6d,EAAS,QAAUloB,EAAKxC,KACxB6M,EAAO8d,EAAKD,IAAWX,GACvBa,EAAUD,EAAKD,EAAS,QAAUX,GAClC5vB,KAAKowB,cAAcE,GAAiB5d,EACpC1S,KAAKqwB,eAAeC,GAAiBG,GAErC/d,IAASkd,GAAO,CAChB,IAAIe,EAAUje,EAAKzU,KAAKuyB,EAAMnoB,EAAMqoB,GAChCroB,GAAQmoB,EAAKI,cACbvoB,EAAOsoB,GAGf,GAAID,EAAUhB,aAAernB,EACzB,GAAIA,EAAKvF,OACL,IAAK,IAAIhF,EAAI,EAAG+yB,EAAMxoB,EAAKvF,OAAQhF,EAAI+yB,EAAK/yB,IACpCuK,EAAKvK,GAAGwL,QACRjB,EAAKvK,GAAGwL,OAAOtJ,WAIlBqI,EAAKiB,QACVjB,EAAKiB,OAAOtJ,MAMpB,OAHIywB,GAAWb,IACXa,EAAQxyB,KAAKuyB,EAAMnoB,GAEhBA,GAEX4nB,EAAQvwB,UAAUiU,WAAa,SAAUxL,EAAO2oB,GAC5C,IAAK3oB,EACD,OAAOA,EAEX,IACIrK,EADA+yB,EAAM1oB,EAAMrF,OAGhB,GAAIguB,IAAiB9wB,KAAKmwB,gBAAgBS,YAAa,CACnD,IAAK9yB,EAAI,EAAGA,EAAI+yB,EAAK/yB,IACjBkC,KAAKwJ,MAAMrB,EAAMrK,IAErB,OAAOqK,EAGX,IAAI4oB,EAAM,GACV,IAAKjzB,EAAI,EAAGA,EAAI+yB,EAAK/yB,IAAK,CACtB,IAAIkzB,EAAQhxB,KAAKwJ,MAAMrB,EAAMrK,SACfiG,IAAVitB,IAGCA,EAAMprB,OAGForB,EAAMluB,QACX9C,KAAKixB,QAAQD,EAAOD,GAHpBA,EAAIrrB,KAAKsrB,IAMjB,OAAOD,GAEXd,EAAQvwB,UAAUuxB,QAAU,SAAUxgB,EAAKsgB,GAIvC,IAAIF,EAAK/yB,EAAGimB,EAAMmN,EAAWniB,EAAGoiB,EAChC,IAJKJ,IACDA,EAAM,IAGLjzB,EAAI,EAAG+yB,EAAMpgB,EAAI3N,OAAQhF,EAAI+yB,EAAK/yB,IAEnC,GADAimB,EAAOtT,EAAI3S,QACEiG,IAATggB,EAGJ,GAAKA,EAAKne,OAIV,IAAKmJ,EAAI,EAAGmiB,EAAYnN,EAAKjhB,OAAQiM,EAAImiB,EAAWniB,IAChDoiB,EAAapN,EAAKhV,QACChL,IAAfotB,IAGCA,EAAWvrB,OAGPurB,EAAWruB,QAChB9C,KAAKixB,QAAQE,EAAYJ,GAHzBA,EAAIrrB,KAAKyrB,SATbJ,EAAIrrB,KAAKqe,GAgBjB,OAAOgN,GAEJd,EApHiB,GAuHxBmB,GAAiC,WACjC,SAASA,EAAgBC,GACrBrxB,KAAKkU,QAAU,GACflU,KAAKsxB,gBAAkB,GACvBtxB,KAAKuxB,kBAAoBF,EACzBrxB,KAAKwxB,cAAgB,EA6CzB,OA3CAJ,EAAgB1xB,UAAU+xB,UAAY,SAAUhQ,GAC5C,IAAIiQ,EAAkB1xB,KAAM2xB,EAAa,CACrClQ,SAAUA,EACVvV,KAAM,KACN0lB,SAAS,GAGb,OADA5xB,KAAKkU,QAAQxO,KAAKisB,GACX,WACHA,EAAWzlB,KAAO5D,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,GACxD8iB,EAAWC,SAAU,EACrBF,EAAgBG,WAGxBT,EAAgB1xB,UAAUoyB,kBAAoB,SAAUrQ,GACpDzhB,KAAKsxB,gBAAgB5rB,KAAK+b,IAE9B2P,EAAgB1xB,UAAUmyB,OAAS,WAC/B7xB,KAAKwxB,gBACL,IACI,MAAO,EAAM,CACT,MAAOxxB,KAAKkU,QAAQpR,OAAS,EAAG,CAC5B,IAAI6uB,EAAa3xB,KAAKkU,QAAQ,GAC9B,IAAKyd,EAAWC,QACZ,OAEJ5xB,KAAKkU,QAAUlU,KAAKkU,QAAQlH,MAAM,GAClC2kB,EAAWlQ,SAASjG,MAAM,KAAMmW,EAAWzlB,MAE/C,GAAoC,IAAhClM,KAAKsxB,gBAAgBxuB,OACrB,MAEJ,IAAIivB,EAAiB/xB,KAAKsxB,gBAAgB,GAC1CtxB,KAAKsxB,gBAAkBtxB,KAAKsxB,gBAAgBtkB,MAAM,GAClD+kB,KAGR,QACI/xB,KAAKwxB,gBAEkB,IAAvBxxB,KAAKwxB,eAAuBxxB,KAAKuxB,mBACjCvxB,KAAKuxB,qBAGNH,EAlDyB,GAqDhCY,GAAgB,SAAUC,EAAUC,GACpClyB,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MAC5BA,KAAKoyB,UAAYH,EACjBjyB,KAAKqyB,QAAUH,EACflyB,KAAK6I,QAAU,IAAIoO,EAASmB,KAC5BpY,KAAKsyB,YAAc,EACnBtyB,KAAKuyB,qBAAuB,GAC5BvyB,KAAKwyB,kBAAoB,GACzBxyB,KAAKyyB,WAAa,IAAIrB,GAAgBpxB,KAAKuxB,kBAAkBjyB,KAAKU,QAEtEgyB,GAActyB,UAAY,CACtBkxB,aAAa,EACb8B,IAAK,SAAU9X,GACX,IAEI5a,KAAKmyB,SAAS3oB,MAAMoR,GAExB,MAAOnX,GACHzD,KAAKiF,MAAQxB,EAEjBzD,KAAK2yB,YAAa,EAClB3yB,KAAKyyB,WAAWZ,UAEpBN,kBAAmB,WACVvxB,KAAK2yB,YAGV3yB,KAAKqyB,QAAQryB,KAAKiF,QAEtB2tB,YAAa,SAAUC,EAAYnC,GAC/B,IAAIoC,EAAYD,EAAWxxB,QAAQsU,OACnC,IAAKkd,EAAWhM,KAAOiM,EAAW,CAC9B,IAAIjqB,EAAU,IAAIoO,EAASmB,KAAKpY,KAAK6I,QAAS2H,EAAUxQ,KAAK6I,QAAQwP,SACjE0a,EAAelqB,EAAQwP,OAAO,GAClCrY,KAAKsyB,cACDO,EAAW3L,mBACXlnB,KAAKyyB,WAAWX,kBAAkB9xB,KAAKgzB,kBAAkB1zB,KAAKU,KAAM6yB,EAAYhqB,EAASkqB,IAGzF/yB,KAAKgzB,kBAAkBH,EAAYhqB,EAASkqB,GAGpDrC,EAAUhB,aAAc,GAE5BsD,kBAAmB,SAAUH,EAAYhqB,EAASkqB,GAC9C,IAAIE,EACAH,EAAYD,EAAWxxB,QAAQsU,OACnC,IACIsd,EAAkBJ,EAAW1L,cAActe,GAE/C,MAAOpF,GACEA,EAAEgD,WACHhD,EAAEyF,MAAQ2pB,EAAW5qB,WACrBxE,EAAEgD,SAAWosB,EAAW7qB,WAAWvB,UAGvCosB,EAAWhM,KAAM,EAEjBgM,EAAW5tB,MAAQxB,EAEvB,IAAIwvB,GAAqBA,EAAgBpM,MAAOiM,EAgB5C9yB,KAAKsyB,cACDtyB,KAAK2yB,YACL3yB,KAAKyyB,WAAWZ,aAlBoC,CACpDoB,EAAgB5xB,QAAQ6xB,WACxBrqB,EAAQsqB,gBAAiB,GAI7B,IADA,IAAIzG,OAAiD3oB,IAAxBkvB,EAAgBpM,IACpC/oB,EAAI,EAAGA,EAAIi1B,EAAajZ,MAAMhX,OAAQhF,IAC3C,GAAIi1B,EAAajZ,MAAMhc,KAAO+0B,EAAY,CACtCE,EAAajZ,MAAMhc,GAAKm1B,EACxB,MAGR,IAAIG,EAAapzB,KAAKozB,WAAW9zB,KAAKU,KAAMizB,EAAiBpqB,GAAUwqB,EAAsBrzB,KAAKyyB,WAAWhB,UAAU2B,GACvHpzB,KAAKoyB,UAAU1sB,KAAKutB,EAAgBlM,UAAW2F,EAAwBuG,EAAgBjrB,WAAYirB,EAAgB5xB,QAASgyB,KASpID,WAAY,SAAUP,EAAYhqB,EAASpF,EAAGmX,EAAM0Y,EAAgBC,GAC5D9vB,IACKA,EAAEgD,WACHhD,EAAEyF,MAAQ2pB,EAAW5qB,WACrBxE,EAAEgD,SAAWosB,EAAW7qB,WAAWvB,UAEvCzG,KAAKiF,MAAQxB,GAEjB,IAAI+vB,EAAgBxzB,KAAM8yB,EAAYD,EAAWxxB,QAAQsU,OAAQqR,EAAW6L,EAAWxxB,QAAQ2lB,SAAUyM,EAAaZ,EAAWxxB,QAAQqyB,SAAUC,EAAkBL,GAAkBC,KAAYC,EAAchB,kBAkBjN,GAjBK3pB,EAAQsqB,iBAELN,EAAWtL,OADXoM,GAIkB,WACd,OAAIJ,KAAYC,EAAcjB,uBAG9BiB,EAAcjB,qBAAqBgB,IAAY,GACxC,MAIdA,GAAYE,IACbZ,EAAWtL,MAAO,GAElB3M,IACAiY,EAAWjY,KAAOA,EAClBiY,EAAWrL,iBAAmB+L,GACzBT,IAAc9L,IAAane,EAAQsqB,iBAAmBQ,IAAkB,CACzEH,EAAchB,kBAAkBe,IAAY,EAC5C,IAAIK,EAAa5zB,KAAK6I,QACtB7I,KAAK6I,QAAUA,EACf,IACI7I,KAAKmyB,SAAS3oB,MAAMoR,GAExB,MAAOnX,GACHzD,KAAKiF,MAAQxB,EAEjBzD,KAAK6I,QAAU+qB,EAGvBJ,EAAclB,cACVkB,EAAcb,YACda,EAAcf,WAAWZ,UAGjCgC,iBAAkB,SAAUC,EAAUpD,GACN,oBAAxBoD,EAAS/0B,MAAM8G,KACf7F,KAAK6I,QAAQwP,OAAO2C,QAAQ8Y,GAG5BpD,EAAUhB,aAAc,GAGhCqE,oBAAqB,SAAUD,GACC,oBAAxBA,EAAS/0B,MAAM8G,MACf7F,KAAK6I,QAAQwP,OAAO5D,SAG5Buf,YAAa,SAAUC,EAAYvD,GAC/B1wB,KAAK6I,QAAQwP,OAAO2C,QAAQiZ,IAEhCC,eAAgB,SAAUD,GACtBj0B,KAAK6I,QAAQwP,OAAO5D,SAExB0f,qBAAsB,SAAUC,EAAqB1D,GACjD1wB,KAAK6I,QAAQwP,OAAO2C,QAAQoZ,IAEhCC,wBAAyB,SAAUD,GAC/Bp0B,KAAK6I,QAAQwP,OAAO5D,SAExB6f,aAAc,SAAUC,EAAa7D,GACjC1wB,KAAK6I,QAAQwP,OAAO2C,QAAQuZ,IAEhCC,gBAAiB,SAAUD,GACvBv0B,KAAK6I,QAAQwP,OAAO5D,SAExBggB,WAAY,SAAUC,EAAWhE,GAC7B1wB,KAAK6I,QAAQwP,OAAO2C,QAAQ0Z,EAAU5a,MAAM,KAEhD6a,cAAe,SAAUD,GACrB10B,KAAK6I,QAAQwP,OAAO5D,UAI5B,IAAImgB,GAA0C,WAC1C,SAASA,EAAyBC,GAC9B70B,KAAK60B,QAAUA,EAmCnB,OAjCAD,EAAyBl1B,UAAUgzB,IAAM,SAAU9X,GAC/C5a,KAAKwJ,MAAMoR,IAEfga,EAAyBl1B,UAAUiU,WAAa,SAAUxL,GACtD,IAAKA,EACD,OAAOA,EAEX,IACIrK,EADA+yB,EAAM1oB,EAAMrF,OAEhB,IAAKhF,EAAI,EAAGA,EAAI+yB,EAAK/yB,IACjBkC,KAAKwJ,MAAMrB,EAAMrK,IAErB,OAAOqK,GAEXysB,EAAyBl1B,UAAU8J,MAAQ,SAAUnB,GACjD,OAAKA,EAGDA,EAAKoG,cAAgBnG,MACdtI,KAAK2T,WAAWtL,KAEtBA,EAAKgC,kBAAoBhC,EAAKgC,qBAG/BrK,KAAK60B,QACLxsB,EAAKmC,mBAGLnC,EAAKoC,qBAETpC,EAAKiB,OAAOtJ,OARDqI,GANAA,GAiBRusB,EArCkC,GAyCzCE,GAAqC,WACrC,SAASA,IACL90B,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MAC5BA,KAAKiX,SAAW,GAChBjX,KAAK+0B,gBAAkB,CAAC,IA0E5B,OAxEAD,EAAoBp1B,UAAUgzB,IAAM,SAAU9X,GAG1C,OAFAA,EAAO5a,KAAKmyB,SAAS3oB,MAAMoR,GAC3BA,EAAKoa,WAAah1B,KAAK+0B,gBAAgB,GAChCna,GAEXka,EAAoBp1B,UAAUm0B,iBAAmB,SAAUC,EAAUpD,GACjEA,EAAUhB,aAAc,GAE5BoF,EAAoBp1B,UAAUy0B,qBAAuB,SAAUC,EAAqB1D,GAChFA,EAAUhB,aAAc,GAE5BoF,EAAoBp1B,UAAU40B,aAAe,SAAUC,EAAa7D,GAChE,IAAI6D,EAAY3Z,KAAhB,CAGA,IAAI9c,EACAiR,EACA4F,EAEArB,EADA2hB,EAAyB,GAGzBnb,EAAQya,EAAYza,MAAO4G,EAAU5G,EAAQA,EAAMhX,OAAS,EAChE,IAAKhF,EAAI,EAAGA,EAAI4iB,EAAS5iB,IACjBy2B,EAAYza,MAAMhc,aAAcuuB,GAAK5D,SACrCwM,EAAuBvvB,KAAKoU,EAAMhc,IAClCy2B,EAAYW,mBAAoB,GAKxC,IAAI50B,EAAQi0B,EAAYj0B,MACxB,IAAKxC,EAAI,EAAGA,EAAIwC,EAAMwC,OAAQhF,IAAK,CAC/B,IAAIq3B,EAAe70B,EAAMxC,GAAIsc,EAAW+a,EAAaA,EAAaryB,OAAS,GAAIsyB,EAAgBhb,EAAS9G,WAQxG,IAPAA,EAAa8hB,EAAgB5kB,EAAU4kB,GAAe/uB,OAAO4uB,GACvDA,EACF3hB,IACAA,EAAaA,EAAWrI,KAAI,SAAUoqB,GAClC,OAAOA,EAAmB1nB,YAG7BoB,EAAI,EAAGA,EAAIuE,EAAWxQ,OAAQiM,IAC/B/O,KAAKs1B,cAAe,EACpB3gB,EAASrB,EAAWvE,GACpB4F,EAAOqU,kBAAkBmM,GACzBxgB,EAAO+F,QAAU6Z,EACP,IAANxlB,IACA4F,EAAO4gB,+BAAgC,GAE3Cv1B,KAAK+0B,gBAAgB/0B,KAAK+0B,gBAAgBjyB,OAAS,GAAG4C,KAAKiP,GAGnE3U,KAAKiX,SAASvR,KAAK6uB,EAAY1a,aAEnCib,EAAoBp1B,UAAU80B,gBAAkB,SAAUD,GACjDA,EAAY3Z,OACb5a,KAAKiX,SAASnU,OAAS9C,KAAKiX,SAASnU,OAAS,IAGtDgyB,EAAoBp1B,UAAU+0B,WAAa,SAAUC,EAAWhE,GAC5DgE,EAAUM,WAAa,GACvBh1B,KAAK+0B,gBAAgBrvB,KAAKgvB,EAAUM,aAExCF,EAAoBp1B,UAAUi1B,cAAgB,SAAUD,GACpD10B,KAAK+0B,gBAAgBjyB,OAAS9C,KAAK+0B,gBAAgBjyB,OAAS,GAEhEgyB,EAAoBp1B,UAAUs0B,YAAc,SAAUC,EAAYvD,GAC9DuD,EAAWe,WAAa,GACxBh1B,KAAK+0B,gBAAgBrvB,KAAKuuB,EAAWe,aAEzCF,EAAoBp1B,UAAUw0B,eAAiB,SAAUD,GACrDj0B,KAAK+0B,gBAAgBjyB,OAAS9C,KAAK+0B,gBAAgBjyB,OAAS,GAEzDgyB,EA9E6B,GAgFpCU,GAAuC,WACvC,SAASA,IACLx1B,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MAqVhC,OAnVAw1B,EAAsB91B,UAAUgzB,IAAM,SAAU9X,GAC5C,IAAI6a,EAAe,IAAIX,GAGvB,GAFA90B,KAAK01B,cAAgB,GACrBD,EAAa/C,IAAI9X,IACZ6a,EAAaH,aACd,OAAO1a,EAEXA,EAAKoa,WAAapa,EAAKoa,WAAW3uB,OAAOrG,KAAK21B,iBAAiB/a,EAAKoa,WAAYpa,EAAKoa,aACrFh1B,KAAK+0B,gBAAkB,CAACna,EAAKoa,YAC7B,IAAIY,EAAU51B,KAAKmyB,SAAS3oB,MAAMoR,GAElC,OADA5a,KAAK61B,0BAA0Bjb,EAAKoa,YAC7BY,GAEXJ,EAAsB91B,UAAUm2B,0BAA4B,SAAUviB,GAClE,IAAIwiB,EAAU91B,KAAK01B,cACnBpiB,EAAWiI,QAAO,SAAU5G,GACxB,OAAQA,EAAOohB,iBAA+C,GAA5BphB,EAAOkU,WAAW/lB,UACrD0F,SAAQ,SAAUmM,GACjB,IAAIyF,EAAW,YACf,IACIA,EAAWzF,EAAOyF,SAASxR,MAAM,IAErC,MAAOjH,IACFm0B,EAAQnhB,EAAOzL,MAAQ,IAAMkR,KAC9B0b,EAAQnhB,EAAOzL,MAAQ,IAAMkR,IAAY,EACzCpV,EAAOI,KAAK,WAAagV,EAAW,yBAIhDob,EAAsB91B,UAAUi2B,iBAAmB,SAAUK,EAAaC,EAAmBC,GASzF,IAAIC,EACAC,EACAC,EAEAxiB,EAEAshB,EACAxgB,EACA2hB,EACAC,EANAC,EAAe,GAEfC,EAAgBz2B,KAYpB,IAPAk2B,EAAiBA,GAAkB,EAO9BC,EAAc,EAAGA,EAAcH,EAAYlzB,OAAQqzB,IACpD,IAAKC,EAAoB,EAAGA,EAAoBH,EAAkBnzB,OAAQszB,IACtEzhB,EAASqhB,EAAYG,GACrBG,EAAeL,EAAkBG,GAE7BzhB,EAAOkU,WAAW1c,QAAQmqB,EAAa3N,YAAc,IAIzDwM,EAAe,CAACmB,EAAanN,cAAc,IAC3CkN,EAAUI,EAAcC,UAAU/hB,EAAQwgB,GACtCkB,EAAQvzB,SACR6R,EAAOohB,iBAAkB,EAEzBphB,EAAOwU,cAAc3gB,SAAQ,SAAUmuB,GACnC,IAAItxB,EAAOixB,EAAa3rB,iBAExBkJ,EAAc4iB,EAAcG,eAAeP,EAASlB,EAAcwB,EAAchiB,EAAOjK,aAEvF6rB,EAAY,IAAKlK,GAAW,OAAEiK,EAAalc,SAAUkc,EAAa5N,OAAQ,EAAG4N,EAAatuB,WAAY3C,GACtGkxB,EAAUpN,cAAgBtV,EAE1BA,EAAYA,EAAY/Q,OAAS,GAAGwQ,WAAa,CAACijB,GAElDC,EAAa9wB,KAAK6wB,GAClBA,EAAU7b,QAAU4b,EAAa5b,QAEjC6b,EAAU1N,WAAa0N,EAAU1N,WAAWxiB,OAAOiwB,EAAazN,WAAYlU,EAAOkU,YAI/EyN,EAAaf,gCACbgB,EAAUhB,+BAAgC,EAC1Ce,EAAa5b,QAAQpa,MAAMoF,KAAKmO,SAMpD,GAAI2iB,EAAa1zB,OAAQ,CAIrB,GADA9C,KAAK62B,mBACDX,EAAiB,IAAK,CACtB,IAAIY,EAAc,wBACdC,EAAc,wBAClB,IACID,EAAcN,EAAa,GAAGrN,cAAc,GAAGvgB,QAC/CmuB,EAAcP,EAAa,GAAGpc,SAASxR,QAE3C,MAAOnF,IACP,KAAM,CAAEwO,QAAS,gFAAkF6kB,EAAc,WAAaC,EAAc,KAIhJ,OAAOP,EAAanwB,OAAOowB,EAAcd,iBAAiBa,EAAcP,EAAmBC,EAAiB,IAG5G,OAAOM,GAGfhB,EAAsB91B,UAAUm0B,iBAAmB,SAAUmD,EAAUtG,GACnEA,EAAUhB,aAAc,GAE5B8F,EAAsB91B,UAAUy0B,qBAAuB,SAAUC,EAAqB1D,GAClFA,EAAUhB,aAAc,GAE5B8F,EAAsB91B,UAAUu3B,cAAgB,SAAUC,EAAcxG,GACpEA,EAAUhB,aAAc,GAE5B8F,EAAsB91B,UAAU40B,aAAe,SAAUC,EAAa7D,GAClE,IAAI6D,EAAY3Z,KAAhB,CAGA,IAAIyb,EACAc,EACAhB,EAIAhB,EAHAH,EAAah1B,KAAK+0B,gBAAgB/0B,KAAK+0B,gBAAgBjyB,OAAS,GAChEs0B,EAAiB,GACjBX,EAAgBz2B,KAGpB,IAAKm2B,EAAc,EAAGA,EAAcnB,EAAWlyB,OAAQqzB,IACnD,IAAKgB,EAAY,EAAGA,EAAY5C,EAAYj0B,MAAMwC,OAAQq0B,IAGtD,GAFAhC,EAAeZ,EAAYj0B,MAAM62B,IAE7B5C,EAAYW,kBAAhB,CAGA,IAAI5hB,EAAa6hB,EAAaA,EAAaryB,OAAS,GAAGwQ,WACnDA,GAAcA,EAAWxQ,SAG7BuzB,EAAUr2B,KAAK02B,UAAU1B,EAAWmB,GAAchB,GAC9CkB,EAAQvzB,SACRkyB,EAAWmB,GAAaJ,iBAAkB,EAC1Cf,EAAWmB,GAAahN,cAAc3gB,SAAQ,SAAUmuB,GACpD,IAAIU,EACJA,EAAoBZ,EAAcG,eAAeP,EAASlB,EAAcwB,EAAc3B,EAAWmB,GAAazrB,aAC9G0sB,EAAe1xB,KAAK2xB,QAKpC9C,EAAYj0B,MAAQi0B,EAAYj0B,MAAM+F,OAAO+wB,KAEjD5B,EAAsB91B,UAAUg3B,UAAY,SAAU/hB,EAAQ2iB,GAK1D,IAAIC,EACAC,EACAC,EACAC,EACAC,EACA75B,EAIA85B,EAHAnB,EAAgBz2B,KAChB63B,EAAiBljB,EAAOyF,SAAS/G,SACjCykB,EAAmB,GAEnBzB,EAAU,GAEd,IAAKkB,EAAwB,EAAGA,EAAwBD,EAAqBx0B,OAAQy0B,IAEjF,IADAC,EAAoBF,EAAqBC,GACpCE,EAAwB,EAAGA,EAAwBD,EAAkBnkB,SAASvQ,OAAQ20B,IAOvF,IANAC,EAAkBF,EAAkBnkB,SAASokB,IAEzC9iB,EAAOmU,aAA0C,IAA1ByO,GAAyD,IAA1BE,IACtDK,EAAiBpyB,KAAK,CAAEyxB,UAAWI,EAAuBruB,MAAOuuB,EAAuBM,QAAS,EAC7FC,kBAAmBN,EAAgBlqB,aAEtC1P,EAAI,EAAGA,EAAIg6B,EAAiBh1B,OAAQhF,IACrC85B,EAAiBE,EAAiBh6B,GAIlC65B,EAAmBD,EAAgBlqB,WAAWzO,MACrB,KAArB44B,GAAqD,IAA1BF,IAC3BE,EAAmB,MAGlBlB,EAAcwB,qBAAqBJ,EAAeD,EAAeG,SAASh5B,MAAO24B,EAAgB34B,QACjG64B,EAAeG,QAAU,GAAKF,EAAeD,EAAeG,SAASvqB,WAAWzO,QAAU44B,EAC3FC,EAAiB,KAGjBA,EAAeG,UAGfH,IACAA,EAAeM,SAAWN,EAAeG,UAAYF,EAAe/0B,OAChE80B,EAAeM,WACbvjB,EAAOoU,aACJ0O,EAAwB,EAAID,EAAkBnkB,SAASvQ,QAAUy0B,EAAwB,EAAID,EAAqBx0B,UACvH80B,EAAiB,OAIrBA,EACIA,EAAeM,WACfN,EAAe90B,OAAS+0B,EAAe/0B,OACvC80B,EAAeO,aAAeZ,EAC9BK,EAAeQ,oBAAsBX,EAAwB,EAC7DK,EAAiBh1B,OAAS,EAC1BuzB,EAAQ3wB,KAAKkyB,KAIjBE,EAAiBlyB,OAAO9H,EAAG,GAC3BA,KAKhB,OAAOu4B,GAEXb,EAAsB91B,UAAUu4B,qBAAuB,SAAUI,EAAeC,GAC5E,GAA6B,kBAAlBD,GAAuD,kBAAlBC,EAC5C,OAAOD,IAAkBC,EAE7B,GAAID,aAAyBhM,GAAKpH,UAC9B,OAAIoT,EAAc1uB,KAAO2uB,EAAc3uB,IAAM0uB,EAAch5B,MAAQi5B,EAAcj5B,MAG5Eg5B,EAAct5B,OAAUu5B,EAAcv5B,OAM3Cs5B,EAAgBA,EAAct5B,MAAMA,OAASs5B,EAAct5B,MAC3Du5B,EAAgBA,EAAcv5B,MAAMA,OAASu5B,EAAcv5B,MACpDs5B,IAAkBC,IAPjBD,EAAct5B,QAASu5B,EAAcv5B,OAWjD,GAFAs5B,EAAgBA,EAAct5B,MAC9Bu5B,EAAgBA,EAAcv5B,MAC1Bs5B,aAAyBhM,GAAKjZ,SAAU,CACxC,KAAMklB,aAAyBjM,GAAKjZ,WAAailB,EAAchlB,SAASvQ,SAAWw1B,EAAcjlB,SAASvQ,OACtG,OAAO,EAEX,IAAK,IAAIhF,EAAI,EAAGA,EAAIu6B,EAAchlB,SAASvQ,OAAQhF,IAAK,CACpD,GAAIu6B,EAAchlB,SAASvV,GAAG0P,WAAWzO,QAAUu5B,EAAcjlB,SAASvV,GAAG0P,WAAWzO,QAC1E,IAANjB,IAAYu6B,EAAchlB,SAASvV,GAAG0P,WAAWzO,OAAS,QAAUu5B,EAAcjlB,SAASvV,GAAG0P,WAAWzO,OAAS,MAClH,OAAO,EAGf,IAAKiB,KAAKi4B,qBAAqBI,EAAchlB,SAASvV,GAAGiB,MAAOu5B,EAAcjlB,SAASvV,GAAGiB,OACtF,OAAO,EAGf,OAAO,EAEX,OAAO,GAEXy2B,EAAsB91B,UAAUk3B,eAAiB,SAAUP,EAASlB,EAAcpV,EAAqBrV,GAEnG,IAAkF6tB,EAAYne,EAAUoe,EAAcxtB,EAAOytB,EAAzHC,EAA2B,EAAGC,EAAkC,EAAGjhB,EAAO,GAC9E,IAAK6gB,EAAa,EAAGA,EAAalC,EAAQvzB,OAAQy1B,IAC9CvtB,EAAQqrB,EAAQkC,GAChBne,EAAW+a,EAAanqB,EAAMmsB,WAC9BqB,EAAe,IAAInM,GAAK9e,QAAQvC,EAAMgtB,kBAAmBjY,EAAoB1M,SAAS,GAAGtU,MAAOghB,EAAoB1M,SAAS,GAAG5F,WAAYsS,EAAoB1M,SAAS,GAAGpL,WAAY8X,EAAoB1M,SAAS,GAAGrL,YACpNgD,EAAMmsB,UAAYuB,GAA4BC,EAAkC,IAChFjhB,EAAKA,EAAK5U,OAAS,GAAGuQ,SAAWqE,EAAKA,EAAK5U,OAAS,GAC/CuQ,SAAShN,OAAO8uB,EAAauD,GAA0BrlB,SAASrG,MAAM2rB,IAC3EA,EAAkC,EAClCD,KAEJD,EAAcre,EAAS/G,SAClBrG,MAAM2rB,EAAiC3tB,EAAM9B,OAC7C7C,OAAO,CAACmyB,IACRnyB,OAAO0Z,EAAoB1M,SAASrG,MAAM,IAC3C0rB,IAA6B1tB,EAAMmsB,WAAaoB,EAAa,EAC7D7gB,EAAKA,EAAK5U,OAAS,GAAGuQ,SAClBqE,EAAKA,EAAK5U,OAAS,GAAGuQ,SAAShN,OAAOoyB,IAG1C/gB,EAAOA,EAAKrR,OAAO8uB,EAAanoB,MAAM0rB,EAA0B1tB,EAAMmsB,YACtEzf,EAAKhS,KAAK,IAAI2mB,GAAKjZ,SAASqlB,KAEhCC,EAA2B1tB,EAAMmtB,aACjCQ,EAAkC3tB,EAAMotB,oBACpCO,GAAmCxD,EAAauD,GAA0BrlB,SAASvQ,SACnF61B,EAAkC,EAClCD,KAoBR,OAjBIA,EAA2BvD,EAAaryB,QAAU61B,EAAkC,IACpFjhB,EAAKA,EAAK5U,OAAS,GAAGuQ,SAAWqE,EAAKA,EAAK5U,OAAS,GAC/CuQ,SAAShN,OAAO8uB,EAAauD,GAA0BrlB,SAASrG,MAAM2rB,IAC3ED,KAEJhhB,EAAOA,EAAKrR,OAAO8uB,EAAanoB,MAAM0rB,EAA0BvD,EAAaryB,SAC7E4U,EAAOA,EAAKzM,KAAI,SAAU2tB,GAEtB,IAAIC,EAAUD,EAAahlB,cAAcglB,EAAavlB,UAOtD,OANI3I,EACAmuB,EAAQruB,mBAGRquB,EAAQpuB,qBAELouB,KAEJnhB,GAEX8d,EAAsB91B,UAAU+0B,WAAa,SAAUC,EAAWhE,GAC9D,IAAIoI,EAAgBpE,EAAUM,WAAW3uB,OAAOrG,KAAK+0B,gBAAgB/0B,KAAK+0B,gBAAgBjyB,OAAS,IACnGg2B,EAAgBA,EAAczyB,OAAOrG,KAAK21B,iBAAiBmD,EAAepE,EAAUM,aACpFh1B,KAAK+0B,gBAAgBrvB,KAAKozB,IAE9BtD,EAAsB91B,UAAUi1B,cAAgB,SAAUD,GACtD,IAAIqE,EAAY/4B,KAAK+0B,gBAAgBjyB,OAAS,EAC9C9C,KAAK+0B,gBAAgBjyB,OAASi2B,GAElCvD,EAAsB91B,UAAUs0B,YAAc,SAAUC,EAAYvD,GAChE,IAAIoI,EAAgB7E,EAAWe,WAAW3uB,OAAOrG,KAAK+0B,gBAAgB/0B,KAAK+0B,gBAAgBjyB,OAAS,IACpGg2B,EAAgBA,EAAczyB,OAAOrG,KAAK21B,iBAAiBmD,EAAe7E,EAAWe,aACrFh1B,KAAK+0B,gBAAgBrvB,KAAKozB,IAE9BtD,EAAsB91B,UAAUw0B,eAAiB,SAAUD,GACvD,IAAI8E,EAAY/4B,KAAK+0B,gBAAgBjyB,OAAS,EAC9C9C,KAAK+0B,gBAAgBjyB,OAASi2B,GAE3BvD,EAvV+B,GA0VtCwD,GAAqC,WACrC,SAASA,IACLh5B,KAAKiX,SAAW,CAAC,IACjBjX,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MA4ChC,OA1CAg5B,EAAoBt5B,UAAUgzB,IAAM,SAAU9X,GAC1C,OAAO5a,KAAKmyB,SAAS3oB,MAAMoR,IAE/Boe,EAAoBt5B,UAAUm0B,iBAAmB,SAAUC,EAAUpD,GACjEA,EAAUhB,aAAc,GAE5BsJ,EAAoBt5B,UAAUy0B,qBAAuB,SAAUC,EAAqB1D,GAChFA,EAAUhB,aAAc,GAE5BsJ,EAAoBt5B,UAAU40B,aAAe,SAAUC,EAAa7D,GAChE,IAEI7W,EAFAhR,EAAU7I,KAAKiX,SAASjX,KAAKiX,SAASnU,OAAS,GAC/CxC,EAAQ,GAEZN,KAAKiX,SAASvR,KAAKpF,GACdi0B,EAAY3Z,OACbf,EAAY0a,EAAY1a,UACpBA,IACAA,EAAYA,EAAU0B,QAAO,SAAUnB,GAAY,OAAOA,EAASvF,iBACnE0f,EAAY1a,UAAYA,EAAU/W,OAAS+W,EAAaA,EAAY,KAChEA,GACA0a,EAAY1W,cAAcvd,EAAOuI,EAASgR,IAG7CA,IACD0a,EAAYza,MAAQ,MAExBya,EAAYj0B,MAAQA,IAG5B04B,EAAoBt5B,UAAU80B,gBAAkB,SAAUD,GACtDv0B,KAAKiX,SAASnU,OAAS9C,KAAKiX,SAASnU,OAAS,GAElDk2B,EAAoBt5B,UAAU+0B,WAAa,SAAUC,EAAWhE,GAC5D,IAAI7nB,EAAU7I,KAAKiX,SAASjX,KAAKiX,SAASnU,OAAS,GACnD4xB,EAAU5a,MAAM,GAAGc,KAA2B,IAAnB/R,EAAQ/F,QAAgB+F,EAAQ,GAAG2d,YAElEwS,EAAoBt5B,UAAUs0B,YAAc,SAAUC,EAAYvD,GAC9D,IAAI7nB,EAAU7I,KAAKiX,SAASjX,KAAKiX,SAASnU,OAAS,GAC/CmxB,EAAWna,OAASma,EAAWna,MAAMhX,SACrCmxB,EAAWna,MAAM,GAAGc,KAAQqZ,EAAW5T,UAA+B,IAAnBxX,EAAQ/F,QAAgB,OAG5Ek2B,EA/C6B,GAkDpCC,GAAiC,WACjC,SAASA,EAAgBpwB,GACrB7I,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MAC5BA,KAAKk5B,SAAWrwB,EA0DpB,OAxDAowB,EAAgBv5B,UAAUy5B,8BAAgC,SAAUC,GAChE,IAAI5e,EACJ,IAAK4e,EACD,OAAO,EAEX,IAAK,IAAIx6B,EAAI,EAAGA,EAAIw6B,EAAUt2B,OAAQlE,IAElC,GADA4b,EAAO4e,EAAUx6B,GACb4b,EAAKzD,UAAYyD,EAAKzD,SAAS/W,KAAKk5B,YAAc1e,EAAKnQ,mBAGvD,OAAO,EAGf,OAAO,GAEX4uB,EAAgBv5B,UAAU25B,sBAAwB,SAAUC,GACpDA,GAASA,EAAMxf,QACfwf,EAAMxf,MAAQwf,EAAMxf,MAAMyB,QAAO,SAAUge,GAAS,OAAOA,EAAM7uB,iBAGzEuuB,EAAgBv5B,UAAUyJ,QAAU,SAAUmwB,GAC1C,OAAQA,IAASA,EAAMxf,OACO,IAAvBwf,EAAMxf,MAAMhX,QAEvBm2B,EAAgBv5B,UAAU85B,mBAAqB,SAAUjF,GACrD,SAAQA,IAAeA,EAAYj0B,QAC5Bi0B,EAAYj0B,MAAMwC,OAAS,GAEtCm2B,EAAgBv5B,UAAU+5B,kBAAoB,SAAUpxB,EAAMqxB,GAC1D,IAAKrxB,EAAKgC,mBAAoB,CAC1B,GAAIrK,KAAKmJ,QAAQd,KAAUrI,KAAKm5B,8BAA8BO,GAC1D,OAEJ,OAAOrxB,EAEX,IAAIsxB,EAAoBtxB,EAAKyR,MAAM,GAEnC,GADA9Z,KAAKq5B,sBAAsBM,IACvB35B,KAAKmJ,QAAQwwB,GAKjB,OAFAtxB,EAAKmC,mBACLnC,EAAKkC,wBACElC,GAEX4wB,EAAgBv5B,UAAUk6B,iBAAmB,SAAUrF,GACnD,QAAIA,EAAY1Z,YAGZ7a,KAAKmJ,QAAQorB,OAGZA,EAAY3Z,OAAS5a,KAAKw5B,mBAAmBjF,KAK/C0E,EA7DyB,GA+DhCnU,GAAe,SAAUjc,GACzB7I,KAAKmyB,SAAW,IAAIlC,GAAQjwB,MAC5BA,KAAKk5B,SAAWrwB,EAChB7I,KAAK0R,MAAQ,IAAIunB,GAAgBpwB,IAErCic,GAAaplB,UAAY,CACrBkxB,aAAa,EACb8B,IAAK,SAAU9X,GACX,OAAO5a,KAAKmyB,SAAS3oB,MAAMoR,IAE/BiZ,iBAAkB,SAAUC,EAAUpD,GAClC,IAAIoD,EAASzpB,qBAAsBypB,EAASle,SAG5C,OAAOke,GAEXK,qBAAsB,SAAU0F,EAAWnJ,GAGvCmJ,EAAUxhB,OAAS,IAEvByhB,YAAa,SAAUC,EAAYrJ,KAEnCsJ,aAAc,SAAUC,EAAavJ,GACjC,IAAIuJ,EAAY5vB,qBAAsB4vB,EAAYljB,SAAS/W,KAAKk5B,UAGhE,OAAOe,GAEXxF,WAAY,SAAUC,EAAWhE,GAC7B,IAAIgJ,EAAgBhF,EAAU5a,MAAM,GAAGA,MAGvC,OAFA4a,EAAUprB,OAAOtJ,KAAKmyB,UACtBzB,EAAUhB,aAAc,EACjB1vB,KAAK0R,MAAM+nB,kBAAkB/E,EAAWgF,IAEnD9G,YAAa,SAAUC,EAAYnC,GAC/B,IAAImC,EAAWxoB,mBAGf,OAAOwoB,GAEXmB,YAAa,SAAUC,EAAYvD,GAC/B,OAAIuD,EAAWna,OAASma,EAAWna,MAAMhX,OAC9B9C,KAAKk6B,oBAAoBjG,EAAYvD,GAGrC1wB,KAAKm6B,uBAAuBlG,EAAYvD,IAGvD0J,eAAgB,SAAUC,EAAe3J,GACrC,IAAK2J,EAAchwB,mBAEf,OADAgwB,EAAc/wB,OAAOtJ,KAAKmyB,UACnBkI,GAGfH,oBAAqB,SAAUjG,EAAYvD,GAGvC,SAAS4J,EAAerG,GACpB,IAAImF,EAAYnF,EAAWna,MAC3B,OAA4B,IAArBsf,EAAUt2B,UAAkBs2B,EAAU,GAAG94B,OAAuC,IAA9B84B,EAAU,GAAG94B,MAAMwC,QAEhF,SAASy3B,EAAatG,GAClB,IAAIuG,EAAYvG,EAAWna,MAC3B,OAAIwgB,EAAerG,GACRuG,EAAU,GAAG1gB,MAEjB0gB,EAKX,IAAId,EAAgBa,EAAatG,GAMjC,OALAA,EAAW3qB,OAAOtJ,KAAKmyB,UACvBzB,EAAUhB,aAAc,EACnB1vB,KAAK0R,MAAMvI,QAAQ8qB,IACpBj0B,KAAK+kB,YAAYkP,EAAWna,MAAM,GAAGA,OAElC9Z,KAAK0R,MAAM+nB,kBAAkBxF,EAAYyF,IAEpDS,uBAAwB,SAAUlG,EAAYvD,GAC1C,IAAIuD,EAAW5pB,mBAAf,CAGA,GAAwB,aAApB4pB,EAAW51B,KAAqB,CAIhC,GAAI2B,KAAKy6B,QAAS,CACd,GAAIxG,EAAW5d,UAAW,CACtB,IAAIqkB,EAAU,IAAIrO,GAAKxV,QAAQ,MAAQod,EAAWrrB,MAAM5I,KAAKk5B,UAAU/3B,QAAQ,MAAO,IAAM,SAE5F,OADAu5B,EAAQrkB,UAAY4d,EAAW5d,UACxBrW,KAAKmyB,SAAS3oB,MAAMkxB,GAE/B,OAEJ16B,KAAKy6B,SAAU,EAEnB,OAAOxG,IAEX0G,gBAAiB,SAAU7gB,EAAO8gB,GAC9B,GAAK9gB,EAGL,IAAK,IAAIhc,EAAI,EAAGA,EAAIgc,EAAMhX,OAAQhF,IAAK,CACnC,IAAIk5B,EAAWld,EAAMhc,GACrB,GAAI88B,GAAU5D,aAAoB3K,GAAK5W,cAAgBuhB,EAASphB,SAC5D,KAAM,CAAE3D,QAAS,wEACb/I,MAAO8tB,EAAS/uB,WAAYxB,SAAUuwB,EAAShvB,YAAcgvB,EAAShvB,WAAWvB,UAEzF,GAAIuwB,aAAoB3K,GAAKpI,KACzB,KAAM,CAAEhS,QAAS,aAAe+kB,EAAS34B,KAAO,+BAAgC6K,MAAO8tB,EAAS/uB,WAAYxB,SAAUuwB,EAAShvB,YAAcgvB,EAAShvB,WAAWvB,UAErK,GAAIuwB,EAASnxB,OAASmxB,EAAS3hB,UAC3B,KAAM,CAAEpD,QAAS+kB,EAASnxB,KAAO,iDAAkDqD,MAAO8tB,EAAS/uB,WAAYxB,SAAUuwB,EAAShvB,YAAcgvB,EAAShvB,WAAWvB,YAIhL6tB,aAAc,SAAUC,EAAa7D,GAEjC,IAAIlW,EACAmC,EAAW,GAEf,GADA3c,KAAK26B,gBAAgBpG,EAAYza,MAAOya,EAAY1Z,WAC/C0Z,EAAY3Z,KA6Bb2Z,EAAYjrB,OAAOtJ,KAAKmyB,UACxBzB,EAAUhB,aAAc,MA9BL,CAEnB1vB,KAAK66B,qBAAqBtG,GAI1B,IAFA,IAAIiG,EAAYjG,EAAYza,MACxBghB,EAAcN,EAAYA,EAAU13B,OAAS,EACxChF,EAAI,EAAGA,EAAIg9B,GAChBtgB,EAAOggB,EAAU18B,GACb0c,GAAQA,EAAKV,OAEb6C,EAASjX,KAAK1F,KAAKmyB,SAAS3oB,MAAMgR,IAClCggB,EAAU50B,OAAO9H,EAAG,GACpBg9B,KAGJh9B,IAKAg9B,EAAc,EACdvG,EAAYjrB,OAAOtJ,KAAKmyB,UAGxBoC,EAAYza,MAAQ,KAExB4W,EAAUhB,aAAc,EAe5B,OATI6E,EAAYza,QACZ9Z,KAAK+kB,YAAYwP,EAAYza,OAC7B9Z,KAAK+6B,sBAAsBxG,EAAYza,QAGvC9Z,KAAK0R,MAAMkoB,iBAAiBrF,KAC5BA,EAAY/pB,mBACZmS,EAAS/W,OAAO,EAAG,EAAG2uB,IAEF,IAApB5X,EAAS7Z,OACF6Z,EAAS,GAEbA,GAEXke,qBAAsB,SAAUtG,GACxBA,EAAYj0B,QACZi0B,EAAYj0B,MAAQi0B,EAAYj0B,MAC3Bib,QAAO,SAAU3b,GAClB,IAAI9B,EAIJ,IAH0C,MAAtC8B,EAAE,GAAGyT,SAAS,GAAG7F,WAAWzO,QAC5Ba,EAAE,GAAGyT,SAAS,GAAG7F,WAAa,IAAK6e,GAAe,WAAE,KAEnDvuB,EAAI,EAAGA,EAAI8B,EAAEkD,OAAQhF,IACtB,GAAI8B,EAAE9B,GAAG4M,aAAe9K,EAAE9B,GAAG+W,cACzB,OAAO,EAGf,OAAO,OAInBkmB,sBAAuB,SAAUjhB,GAC7B,GAAKA,EAAL,CAIA,IACIkhB,EACAxgB,EACA1c,EAHAm9B,EAAY,GAIhB,IAAKn9B,EAAIgc,EAAMhX,OAAS,EAAGhF,GAAK,EAAGA,IAE/B,GADA0c,EAAOV,EAAMhc,GACT0c,aAAgB6R,GAAK5W,YACrB,GAAKwlB,EAAUzgB,EAAKnc,MAGf,CACD28B,EAAWC,EAAUzgB,EAAKnc,MACtB28B,aAAoB3O,GAAK5W,cACzBulB,EAAWC,EAAUzgB,EAAKnc,MAAQ,CAAC48B,EAAUzgB,EAAKnc,MAAMuK,MAAM5I,KAAKk5B,YAEvE,IAAIgC,EAAU1gB,EAAK5R,MAAM5I,KAAKk5B,WACK,IAA/B8B,EAAS7uB,QAAQ+uB,GACjBphB,EAAMlU,OAAO9H,EAAG,GAGhBk9B,EAASt1B,KAAKw1B,QAZlBD,EAAUzgB,EAAKnc,MAAQmc,IAkBvCuK,YAAa,SAAUjL,GACnB,GAAKA,EAAL,CAKA,IAFA,IAAIqhB,EAAS,GACTC,EAAY,GACPt9B,EAAI,EAAGA,EAAIgc,EAAMhX,OAAQhF,IAAK,CACnC,IAAI0c,EAAOV,EAAMhc,GACjB,GAAI0c,EAAKlJ,MAAO,CACZ,IAAIjS,EAAMmb,EAAKnc,KACf88B,EAAO97B,GAAOya,EAAMlU,OAAO9H,IAAK,GAC5Bs9B,EAAU11B,KAAKy1B,EAAO97B,GAAO,IACjC87B,EAAO97B,GAAKqG,KAAK8U,IAGzB4gB,EAAU5yB,SAAQ,SAAUmZ,GACxB,GAAIA,EAAM7e,OAAS,EAAG,CAClB,IAAIu4B,EAAW1Z,EAAM,GACjB2Z,EAAU,GACVC,EAAU,CAAC,IAAIlP,GAAKjJ,WAAWkY,IACnC3Z,EAAMnZ,SAAQ,SAAUgS,GACA,MAAfA,EAAKlJ,OAAmBgqB,EAAQx4B,OAAS,GAC1Cy4B,EAAQ71B,KAAK,IAAI2mB,GAAKjJ,WAAWkY,EAAU,KAE/CA,EAAQ51B,KAAK8U,EAAKzb,OAClBs8B,EAAS3lB,UAAY2lB,EAAS3lB,WAAa8E,EAAK9E,aAEpD2lB,EAASt8B,MAAQ,IAAIstB,GAAKvX,MAAMymB,UAMhD,IAAI1W,GAAW,CACXoL,QAASA,GACT+B,cAAeA,GACfwJ,4BAA6B5G,GAC7B6G,cAAejG,GACfwD,oBAAqBA,GACrBlU,aAAcA,IAIlB,SAAS4W,GAASvpB,EAAOwpB,GACrB,IAGIC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACApE,EAbAxjB,EAAMpC,EAAMrP,OACZs5B,EAAQ,EACRC,EAAa,EAKbC,EAAS,GACTC,EAAW,EAMf,SAASC,EAAUC,GACf,IAAIloB,EAAMynB,EAAsBO,EAC1BhoB,EAAM,MAASkoB,IAAWloB,IAGhC+nB,EAAO52B,KAAKyM,EAAMnF,MAAMuvB,EAAUP,EAAsB,IACxDO,EAAWP,EAAsB,GAErC,IAAKA,EAAsB,EAAGA,EAAsBznB,EAAKynB,IAErD,GADAE,EAAK/pB,EAAMuqB,WAAWV,KAChBE,GAAM,IAAQA,GAAM,KAAUA,EAAK,IAIzC,OAAQA,GACJ,KAAK,GACDG,IACAR,EAAmBG,EACnB,SACJ,KAAK,GACD,KAAMK,EAAa,EACf,OAAOV,EAAK,sBAAuBK,GAEvC,SACJ,KAAK,GACIK,GACDG,IAEJ,SACJ,KAAK,IACDJ,IACAR,EAAcI,EACd,SACJ,KAAK,IACD,KAAMI,EAAQ,EACV,OAAOT,EAAK,sBAAuBK,GAElCI,GAAUC,GACXG,IAEJ,SACJ,KAAK,GACD,GAAIR,EAAsBznB,EAAM,EAAG,CAC/BynB,IACA,SAEJ,OAAOL,EAAK,iBAAkBK,GAClC,KAAK,GACL,KAAK,GACL,KAAK,GAGD,IAFAjE,EAAU,EACVkE,EAAyBD,EACpBA,GAA4C,EAAGA,EAAsBznB,EAAKynB,IAE3E,GADAG,EAAMhqB,EAAMuqB,WAAWV,KACnBG,EAAM,IAAV,CAGA,GAAIA,GAAOD,EAAI,CACXnE,EAAU,EACV,MAEJ,GAAW,IAAPoE,EAAW,CACX,GAAIH,GAAuBznB,EAAM,EAC7B,OAAOonB,EAAK,iBAAkBK,GAElCA,KAGR,GAAIjE,EACA,SAEJ,OAAO4D,EAAK,cAAgBnZ,OAAOma,aAAaT,GAAM,IAAKD,GAC/D,KAAK,GACD,GAAII,GAAeL,GAAuBznB,EAAM,EAC5C,SAGJ,GADA4nB,EAAMhqB,EAAMuqB,WAAWV,EAAsB,GAClC,IAAPG,GAEA,IAAKH,GAA4C,EAAGA,EAAsBznB,EAAKynB,IAE3E,GADAG,EAAMhqB,EAAMuqB,WAAWV,GAClBG,GAAO,KAAgB,IAAPA,GAAsB,IAAPA,GAChC,WAIP,GAAW,IAAPA,EAAW,CAGhB,IADAL,EAAmBG,EAAyBD,EACvCA,GAA4C,EAAGA,EAAsBznB,EAAM,EAAGynB,IAK/E,GAJAG,EAAMhqB,EAAMuqB,WAAWV,GACZ,KAAPG,IACAJ,EAA2BC,GAEpB,IAAPG,GAG6C,IAA7ChqB,EAAMuqB,WAAWV,EAAsB,GACvC,MAGR,GAAIA,GAAuBznB,EAAM,EAC7B,OAAOonB,EAAK,uBAAwBM,GAExCD,IAEJ,SACJ,KAAK,GACD,GAAKA,EAAsBznB,EAAM,GAAoD,IAA7CpC,EAAMuqB,WAAWV,EAAsB,GAC3E,OAAOL,EAAK,iBAAkBK,GAElC,SAGZ,OAAc,IAAVI,EAEWT,EADNG,EAAmBF,GAAiBG,EAA2BD,EACpD,8BAGA,sBAH+BF,GAM3B,IAAfS,EACEV,EAAK,sBAAuBE,IAEvCW,GAAU,GACHF,GAGX,IAAIM,GAAiB,WACjB,IACAzqB,EAEApD,EAIA8tB,EAEAC,EAEAR,EAEAS,EAEAC,EAVAC,EAAY,GAWRC,EAAc,GACdC,EAAiB,GACjBC,EAAe,EACfC,EAAc,GACdC,EAAc,GACdC,EAAgB,GAChBC,EAAiB,GACjBC,EAAyB,GACzBC,EAAa,GACjB,SAASC,EAAe76B,GAUpB,IATA,IAMI3E,EACAy/B,EACAlD,EARAmD,EAAOX,EAAYp/B,EACnBggC,EAAO/uB,EACPgvB,EAAOb,EAAYp/B,EAAIk/B,EACvBgB,EAAWd,EAAYp/B,EAAIi/B,EAAQj6B,OAASi7B,EAC5CE,EAAOf,EAAYp/B,GAAKgF,EACxBo7B,EAAM/rB,EAIH+qB,EAAYp/B,EAAIkgC,EAAUd,EAAYp/B,IAAK,CAE9C,GADAK,EAAI+/B,EAAIxB,WAAWQ,EAAYp/B,GAC3Bo/B,EAAYiB,mBAAqBhgC,IAAMs/B,EAAwB,CAE/D,GADAG,EAAWM,EAAIrwB,OAAOqvB,EAAYp/B,EAAI,GACrB,MAAb8/B,EAAkB,CAClBlD,EAAU,CAAExxB,MAAOg0B,EAAYp/B,EAAGgZ,eAAe,GACjD,IAAIsnB,EAAcF,EAAI/xB,QAAQ,KAAM+wB,EAAYp/B,EAAI,GAChDsgC,EAAc,IACdA,EAAcJ,GAElBd,EAAYp/B,EAAIsgC,EAChB1D,EAAQ2D,KAAOH,EAAI/qB,OAAOunB,EAAQxxB,MAAOg0B,EAAYp/B,EAAI48B,EAAQxxB,OACjEg0B,EAAYoB,aAAa54B,KAAKg1B,GAC9B,SAEC,GAAiB,MAAbkD,EAAkB,CACvB,IAAIW,EAAgBL,EAAI/xB,QAAQ,KAAM+wB,EAAYp/B,EAAI,GACtD,GAAIygC,GAAiB,EAAG,CACpB7D,EAAU,CACNxxB,MAAOg0B,EAAYp/B,EACnBugC,KAAMH,EAAI/qB,OAAO+pB,EAAYp/B,EAAGygC,EAAgB,EAAIrB,EAAYp/B,GAChEgZ,eAAe,GAEnBomB,EAAYp/B,GAAK48B,EAAQ2D,KAAKv7B,OAAS,EACvCo6B,EAAYoB,aAAa54B,KAAKg1B,GAC9B,UAGR,MAEJ,GAAKv8B,IAAMg/B,GAAoBh/B,IAAMk/B,GAAiBl/B,IAAMi/B,GAAkBj/B,IAAMm/B,EAChF,MAKR,GAFAP,EAAUA,EAAQ/vB,MAAMlK,EAASo6B,EAAYp/B,EAAImgC,EAAMF,GACvDf,EAAaE,EAAYp/B,GACpBi/B,EAAQj6B,OAAQ,CACjB,GAAIiM,EAAIutB,EAAOx5B,OAAS,EAGpB,OAFAi6B,EAAUT,IAASvtB,GACnB4uB,EAAe,IACR,EAEXT,EAAYhF,UAAW,EAE3B,OAAO2F,IAASX,EAAYp/B,GAAKggC,IAAS/uB,EAuQ9C,OArQAmuB,EAAYsB,KAAO,WACfxB,EAAaE,EAAYp/B,EACzBm/B,EAAUv3B,KAAK,CAAEq3B,QAASA,EAASj/B,EAAGo/B,EAAYp/B,EAAGiR,EAAGA,KAE5DmuB,EAAYuB,QAAU,SAAUC,IACxBxB,EAAYp/B,EAAI++B,GAAaK,EAAYp/B,IAAM++B,GAAY6B,IAAyB5B,KACpFD,EAAWK,EAAYp/B,EACvBg/B,EAA+B4B,GAEnC,IAAIC,EAAQ1B,EAAU9mB,MACtB4mB,EAAU4B,EAAM5B,QAChBC,EAAaE,EAAYp/B,EAAI6gC,EAAM7gC,EACnCiR,EAAI4vB,EAAM5vB,GAEdmuB,EAAY0B,OAAS,WACjB3B,EAAU9mB,OAEd+mB,EAAY2B,aAAe,SAAUC,GACjC,IAAIC,EAAM7B,EAAYp/B,GAAKghC,GAAU,GACjCE,EAAO7sB,EAAMuqB,WAAWqC,GAC5B,OAAQC,IAAS7B,GAAkB6B,IAAS1B,GAAe0B,IAAS5B,GAAgB4B,IAAS3B,GAGjGH,EAAY+B,IAAM,SAAUC,GACpBhC,EAAYp/B,EAAIk/B,IAChBD,EAAUA,EAAQ/vB,MAAMkwB,EAAYp/B,EAAIk/B,GACxCA,EAAaE,EAAYp/B,GAE7B,IAAII,EAAIghC,EAAIv6B,KAAKo4B,GACjB,OAAK7+B,GAGLy/B,EAAez/B,EAAE,GAAG4E,QACH,kBAAN5E,EACAA,EAES,IAAbA,EAAE4E,OAAe5E,EAAE,GAAKA,GANpB,MAQfg/B,EAAYiC,MAAQ,SAAUD,GAC1B,OAAI/sB,EAAMtE,OAAOqvB,EAAYp/B,KAAOohC,EACzB,MAEXvB,EAAe,GACRuB,IAEXhC,EAAYkC,KAAO,SAAUF,GAGzB,IAFA,IAAIG,EAAYH,EAAIp8B,OAEXhF,EAAI,EAAGA,EAAIuhC,EAAWvhC,IAC3B,GAAIqU,EAAMtE,OAAOqvB,EAAYp/B,EAAIA,KAAOohC,EAAIrxB,OAAO/P,GAC/C,OAAO,KAIf,OADA6/B,EAAe0B,GACRH,GAEXhC,EAAYoC,QAAU,SAAUjtB,GAC5B,IAAI0sB,EAAM1sB,GAAO6qB,EAAYp/B,EACzByhC,EAAYptB,EAAMtE,OAAOkxB,GAC7B,GAAkB,MAAdQ,GAAoC,MAAdA,EAA1B,CAKA,IAFA,IAAIz8B,EAASqP,EAAMrP,OACf08B,EAAkBT,EACbjhC,EAAI,EAAGA,EAAI0hC,EAAkB18B,EAAQhF,IAAK,CAC/C,IAAI8/B,EAAWzrB,EAAMtE,OAAO/P,EAAI0hC,GAChC,OAAQ5B,GACJ,IAAK,KACD9/B,IACA,SACJ,IAAK,KACL,IAAK,KACD,MACJ,KAAKyhC,EACD,IAAItsB,EAAMd,EAAMgB,OAAOqsB,EAAiB1hC,EAAI,GAC5C,OAAKuU,GAAe,IAARA,EAIL,CAACktB,EAAWtsB,IAHf0qB,EAAe7/B,EAAI,GACZmV,IAKvB,OAAO,OAMXiqB,EAAYuC,YAAc,SAAUP,GAChC,IAWIQ,EAXAra,EAAQ,GACRsa,EAAY,KACZC,GAAY,EACZC,EAAa,EACbC,EAAa,GACbC,EAAc,GACdj9B,EAASqP,EAAMrP,OACfk9B,EAAW9C,EAAYp/B,EACvBmiC,EAAU/C,EAAYp/B,EACtBA,EAAIo/B,EAAYp/B,EAChBoiC,GAAO,EAGPR,EADe,kBAARR,EACI,SAAUiB,GAAQ,OAAOA,IAASjB,GAGlC,SAAUiB,GAAQ,OAAOjB,EAAIj7B,KAAKk8B,IAEjD,EAAG,CACC,IAAIvC,EAAWzrB,EAAMtE,OAAO/P,GAC5B,GAAmB,IAAf+hC,GAAoBH,EAAS9B,GAC7B+B,EAAYxtB,EAAMgB,OAAO8sB,EAASniC,EAAImiC,GAClCN,EACAI,EAAYr6B,KAAKi6B,GAGjBI,EAAYr6B,KAAK,KAErBi6B,EAAYI,EACZpC,EAAe7/B,EAAIkiC,GACnBE,GAAO,MAEN,CACD,GAAIN,EAAW,CACM,MAAbhC,GACwB,MAAxBzrB,EAAMtE,OAAO/P,EAAI,KACjBA,IACA+hC,IACAD,GAAY,GAEhB9hC,IACA,SAEJ,OAAQ8/B,GACJ,IAAK,KACD9/B,IACA8/B,EAAWzrB,EAAMtE,OAAO/P,GACxBiiC,EAAYr6B,KAAKyM,EAAMgB,OAAO8sB,EAASniC,EAAImiC,EAAU,IACrDA,EAAUniC,EAAI,EACd,MACJ,IAAK,IAC2B,MAAxBqU,EAAMtE,OAAO/P,EAAI,KACjBA,IACA8hC,GAAY,EACZC,KAEJ,MACJ,IAAK,IACL,IAAK,IACDxa,EAAQ6X,EAAYoC,QAAQxhC,GACxBunB,GACA0a,EAAYr6B,KAAKyM,EAAMgB,OAAO8sB,EAASniC,EAAImiC,GAAU5a,GACrDvnB,GAAKunB,EAAM,GAAGviB,OAAS,EACvBm9B,EAAUniC,EAAI,IAGd6/B,EAAe7/B,EAAIkiC,GACnBL,EAAY/B,EACZsC,GAAO,GAEX,MACJ,IAAK,IACDJ,EAAWp6B,KAAK,KAChBm6B,IACA,MACJ,IAAK,IACDC,EAAWp6B,KAAK,KAChBm6B,IACA,MACJ,IAAK,IACDC,EAAWp6B,KAAK,KAChBm6B,IACA,MACJ,IAAK,IACL,IAAK,IACL,IAAK,IACD,IAAIO,EAAWN,EAAW3pB,MACtBynB,IAAawC,EACbP,KAIAlC,EAAe7/B,EAAIkiC,GACnBL,EAAYS,EACZF,GAAO,GAGnBpiC,IACIA,EAAIgF,IACJo9B,GAAO,UAGVA,GACT,OAAOP,GAAwB,MAEnCzC,EAAYiB,mBAAoB,EAChCjB,EAAYoB,aAAe,GAC3BpB,EAAYhF,UAAW,EAGvBgF,EAAYmD,KAAO,SAAUnB,GACzB,GAAmB,kBAARA,EAAkB,CAEzB,IAAK,IAAIphC,EAAI,EAAGA,EAAIohC,EAAIp8B,OAAQhF,IAC5B,GAAIqU,EAAMtE,OAAOqvB,EAAYp/B,EAAIA,KAAOohC,EAAIrxB,OAAO/P,GAC/C,OAAO,EAGf,OAAO,EAGP,OAAOohC,EAAIj7B,KAAK84B,IAKxBG,EAAYoD,SAAW,SAAUpB,GAAO,OAAO/sB,EAAMtE,OAAOqvB,EAAYp/B,KAAOohC,GAC/EhC,EAAYqD,YAAc,WAAc,OAAOpuB,EAAMtE,OAAOqvB,EAAYp/B,IACxEo/B,EAAYsD,SAAW,WAAc,OAAOruB,EAAMtE,OAAOqvB,EAAYp/B,EAAI,IACzEo/B,EAAYuD,SAAW,WAAc,OAAOtuB,GAC5C+qB,EAAYwD,eAAiB,WACzB,IAAIviC,EAAIgU,EAAMuqB,WAAWQ,EAAYp/B,GAErC,OAAQK,EAAIu/B,GAAcv/B,EAAIo/B,GAAkBp/B,IAAMs/B,GAA0Bt/B,IAAMq/B,GAE1FN,EAAYyD,MAAQ,SAAU1tB,EAAK2tB,EAAYC,GAC3C1uB,EAAQc,EACRiqB,EAAYp/B,EAAIiR,EAAIiuB,EAAaH,EAAW,EAYxCP,EADAsE,EACSlF,GAAQzoB,EAAK4tB,GAGb,CAAC5tB,GAEd8pB,EAAUT,EAAO,GACjBqB,EAAe,IAEnBT,EAAY4D,IAAM,WACd,IAAI7uB,EACA0gB,EAAauK,EAAYp/B,GAAKqU,EAAMrP,OAKxC,OAJIo6B,EAAYp/B,EAAI++B,IAChB5qB,EAAU6qB,EACVI,EAAYp/B,EAAI++B,GAEb,CACHlK,WAAYA,EACZkK,SAAUK,EAAYp/B,EACtBg/B,6BAA8B7qB,EAC9B8uB,mBAAoB7D,EAAYp/B,GAAKqU,EAAMrP,OAAS,EACpDk+B,aAAc7uB,EAAM+qB,EAAYp/B,KAGjCo/B,GAmCP+D,GAAS,SAASA,EAAOp4B,EAASqL,EAASlM,GAC3C,IAAIk5B,EACAhE,EAAcN,KAClB,SAAS33B,EAAMC,EAAKW,GAChB,MAAM,IAAIiM,EAAU,CAChB5I,MAAOg0B,EAAYp/B,EACnB2I,SAAUuB,EAASvB,SACnBZ,KAAMA,GAAQ,SACdoM,QAAS/M,GACVgP,GAEP,SAASitB,EAAO/W,EAAKllB,GAEjB,IAAIsM,EAAU4Y,aAAezX,SAAYyX,EAAInsB,KAAKijC,GAAWhE,EAAY+B,IAAI7U,GAC7E,GAAI5Y,EACA,OAAOA,EAEXvM,EAAMC,IAAuB,kBAARklB,EACf,aAAeA,EAAM,UAAY8S,EAAYqD,cAAgB,IAC7D,qBAGV,SAASa,EAAWhX,EAAKllB,GACrB,GAAIg4B,EAAYiC,MAAM/U,GAClB,OAAOA,EAEXnlB,EAAMC,GAAO,aAAeklB,EAAM,UAAY8S,EAAYqD,cAAgB,KAE9E,SAASc,EAAan4B,GAClB,IAAIzC,EAAWuB,EAASvB,SACxB,MAAO,CACHiQ,WAAYtG,EAAYlH,EAAOg0B,EAAYuD,YAAYnwB,KAAO,EAC9DqG,SAAUlQ,GAWlB,SAASuN,EAAUf,EAAKquB,EAAWC,EAAcv5B,EAAUyZ,GACvD,IAAIjQ,EACAgwB,EAAc,GACdC,EAASvE,EACb,IACIuE,EAAOd,MAAM1tB,GAAK,GAAO,SAAc/N,EAAKgE,GACxCuY,EAAS,CACLxP,QAAS/M,EACTgE,MAAOA,EAAQq4B,OAGvB,IAAK,IAAI30B,EAAI,EAAGhN,OAAI,EAAQ9B,OAAI,EAAS8B,EAAI0hC,EAAU10B,GAAKA,IAGxD,GAFA9O,EAAI2jC,EAAO3jC,EACX0T,EAAS0vB,EAAQthC,KACb4R,EAAQ,CACR,IACIA,EAAO/I,OAAS3K,EAAIyjC,EACpB/vB,EAAO9I,UAAYV,EAEvB,MAAOvE,IACP+9B,EAAY97B,KAAK8L,QAGjBgwB,EAAY97B,KAAK,MAGzB,IAAIg8B,EAAUD,EAAOX,MACjBY,EAAQ/O,WACRlR,EAAS,KAAM+f,GAGf/f,GAAS,EAAM,MAGvB,MAAOhe,GACH,MAAM,IAAIqO,EAAU,CAChB5I,MAAOzF,EAAEyF,MAAQq4B,EACjBtvB,QAASxO,EAAEwO,SACZiC,EAASlM,EAASvB,WAM7B,MAAO,CACHy2B,YAAaA,EACbhpB,QAASA,EACTlM,SAAUA,EACVgM,UAAWA,EAOXtS,MAAO,SAAUuR,EAAKwO,EAAUkgB,GAC5B,IAAI/mB,EAEA9Z,EACAC,EACA6gC,EAHA38B,EAAQ,KAIR48B,EAAU,GAGd,GAFA/gC,EAAc6gC,GAAkBA,EAAe7gC,WAAcmgC,EAAOa,cAAcH,EAAe7gC,YAAc,KAAO,GACtHC,EAAc4gC,GAAkBA,EAAe5gC,WAAc,KAAOkgC,EAAOa,cAAcH,EAAe5gC,YAAc,GAClH8H,EAAQhC,cAER,IADA,IAAIk7B,EAAgBl5B,EAAQhC,cAAcm7B,mBACjClkC,EAAI,EAAGA,EAAIikC,EAAcj/B,OAAQhF,IACtCmV,EAAM8uB,EAAcjkC,GAAGmkC,QAAQhvB,EAAK,CAAEpK,QAASA,EAASqL,QAASA,EAASlM,SAAUA,KAGxFlH,GAAe6gC,GAAkBA,EAAeO,UAChDL,GAAYF,GAAkBA,EAAeO,OAAUP,EAAeO,OAAS,IAAMphC,EACrF8gC,EAAU1tB,EAAQiuB,qBAClBP,EAAQ55B,EAASvB,UAAYm7B,EAAQ55B,EAASvB,WAAa,EAC3Dm7B,EAAQ55B,EAASvB,WAAao7B,EAAQ/+B,QAE1CmQ,EAAMA,EAAI9R,QAAQ,SAAU,MAE5B8R,EAAM4uB,EAAU5uB,EAAI9R,QAAQ,UAAW,IAAMJ,EAC7CmT,EAAQ9B,SAASpK,EAASvB,UAAYwM,EAKtC,IACIiqB,EAAYyD,MAAM1tB,EAAKpK,EAAQ+3B,YAAY,SAAc17B,EAAKgE,GAC1D,MAAM,IAAI4I,EAAU,CAChB5I,MAAOA,EACPrD,KAAM,QACNoM,QAAS/M,EACTuB,SAAUuB,EAASvB,UACpByN,MAEPmY,GAAK5kB,KAAK/H,UAAUgC,MAAQ1B,KAC5B4a,EAAO,IAAIyR,GAAKzS,QAAQ,KAAM5Z,KAAKkhC,QAAQkB,WAC3C/V,GAAK5kB,KAAK/H,UAAUmI,SAAW+S,EAC/BA,EAAKA,MAAO,EACZA,EAAKC,WAAY,EACjBD,EAAKrB,iBAAmBA,EAAiBpB,UAE7C,MAAO1U,GACH,OAAOge,EAAS,IAAI3P,EAAUrO,EAAGyQ,EAASlM,EAASvB,WAUvD,IAAIi7B,EAAUxE,EAAY4D,MAC1B,IAAKY,EAAQ/O,WAAY,CACrB,IAAI1gB,EAAUyvB,EAAQ5E,6BACjB7qB,IACDA,EAAU,qBACmB,MAAzByvB,EAAQV,aACR/uB,GAAW,iCAEmB,MAAzByvB,EAAQV,aACb/uB,GAAW,iCAENyvB,EAAQX,qBACb9uB,GAAW,iCAGnBhN,EAAQ,IAAI6M,EAAU,CAClBjM,KAAM,QACNoM,QAASA,EACT/I,MAAOw4B,EAAQ7E,SACfp2B,SAAUuB,EAASvB,UACpByN,GAEP,IAAIge,EAAS,SAAUzuB,GAEnB,OADAA,EAAIwB,GAASxB,GAAKyQ,EAAQjP,MACtBxB,GACMA,aAAaqO,IACfrO,EAAI,IAAIqO,EAAUrO,EAAGyQ,EAASlM,EAASvB,WAEpCgb,EAAShe,IAGTge,EAAS,KAAM7G,IAG9B,IAA+B,IAA3B/R,EAAQw5B,eAKR,OAAOnQ,IAJP,IAAIrN,GAASmN,cAAc9d,EAASge,GAC/BQ,IAAI9X,IAmCjBsmB,QAASA,EAAU,CAgBfkB,QAAS,WACL,IAEI/5B,EAFA0iB,EAAQ/qB,KAAK+qB,MACbnQ,EAAO,GAEX,MAAO,EAAM,CACT,MAAO,EAAM,CAET,GADAvS,EAAOrI,KAAK06B,WACPryB,EACD,MAEJuS,EAAKlV,KAAK2C,GAGd,GAAI60B,EAAYhF,SACZ,MAEJ,GAAIgF,EAAYmD,KAAK,KACjB,MAGJ,GADAh4B,EAAOrI,KAAKsiC,aACRj6B,EACAuS,EAAOA,EAAKvU,OAAOgC,QAKvB,GAFAA,EAAO0iB,EAAMwX,cAAgBviC,KAAKwiC,eAAiBzX,EAAM9sB,MAAK,GAAO,IACjE+B,KAAK0a,WAAa1a,KAAKyiC,gBAAkBziC,KAAK0iC,SAASzkC,QAAU+B,KAAK2iC,SACtEt6B,EACAuS,EAAKlV,KAAK2C,OAET,CACD,IAAIu6B,GAAiB,EACrB,MAAO1F,EAAYiC,MAAM,KACrByD,GAAiB,EAErB,IAAKA,EACD,OAIZ,OAAOhoB,GAIX8f,QAAS,WACL,GAAIwC,EAAYoB,aAAax7B,OAAQ,CACjC,IAAI43B,EAAUwC,EAAYoB,aAAa7pB,QACvC,OAAO,IAAK4X,GAAY,QAAEqO,EAAQ2D,KAAM3D,EAAQ5jB,cAAe4jB,EAAQxxB,MAAOlB,KAMtF06B,SAAU,CACNG,YAAa,WACT,OAAO3B,EAAQnW,MAAM9sB,MAAK,GAAM,IAOpC6kC,OAAQ,SAAUC,GACd,IAAI9vB,EACA/J,EAAQg0B,EAAYp/B,EACpBklC,GAAY,EAEhB,GADA9F,EAAYsB,OACRtB,EAAYiC,MAAM,KAClB6D,GAAY,OAEX,GAAID,EAEL,YADA7F,EAAYuB,UAIhB,GADAxrB,EAAMiqB,EAAYoC,UACbrsB,EAKL,OADAiqB,EAAY0B,SACL,IAAKvS,GAAW,OAAEpZ,EAAIpF,OAAO,GAAIoF,EAAIE,OAAO,EAAGF,EAAInQ,OAAS,GAAIkgC,EAAW95B,EAAOlB,GAJrFk1B,EAAYuB,WAWpB3xB,QAAS,WACL,IAAIgC,EAAIouB,EAAYiC,MAAM,MAAQjC,EAAY+B,IAAI,2DAClD,GAAInwB,EACA,OAAOud,GAAKxhB,MAAMgC,YAAYiC,IAAM,IAAKud,GAAY,QAAEvd,IAU/D7Q,KAAM,WACF,IAAII,EACA6N,EACAwG,EACAxJ,EAAQg0B,EAAYp/B,EAExB,IAAIo/B,EAAYmD,KAAK,WAKrB,GAFAnD,EAAYsB,OACZngC,EAAO6+B,EAAY+B,IAAI,kCAClB5gC,EAAL,CAMA,GAFAA,EAAOA,EAAK,GACZqU,EAAO1S,KAAKijC,eAAe5kC,GACvBqU,IACAxG,EAAOwG,EAAKhR,QACRwK,GAAQwG,EAAKwwB,MAEb,OADAhG,EAAY0B,SACL1yB,EAIf,GADAA,EAAOlM,KAAK6O,UAAU3C,GACjBgxB,EAAYiC,MAAM,KAKvB,OADAjC,EAAY0B,SACL,IAAKvS,GAAS,KAAEhuB,EAAM6N,EAAMhD,EAAOlB,GAJtCk1B,EAAYuB,QAAQ,sDAdpBvB,EAAY0B,UA4BpBqE,eAAgB,SAAU5kC,GAItB,MAAO,CACH8M,MAAO+f,EAAEgW,EAAQiC,SAAS,GAC1BC,QAASlY,EAAE3X,GACX,GAAM2X,EAAE3X,IACVlV,EAAK0O,eACP,SAASme,EAAExpB,EAAOwhC,GACd,MAAO,CACHxhC,MAAOA,EACPwhC,KAAMA,GAId,SAAS3vB,IACL,MAAO,CAAC4tB,EAAOD,EAAQ3tB,UAAW,yBAG1C1E,UAAW,SAAUw0B,GACjB,IAEIC,EACAvkC,EAHAwkC,EAAYF,GAAY,GACxBG,EAAgB,GAGpBtG,EAAYsB,OACZ,MAAO,EAAM,CACT,GAAI6E,EACAA,GAAW,MAEV,CAED,GADAtkC,EAAQmiC,EAAQ7X,mBAAqBrpB,KAAKyjC,cAAgBvC,EAAQtZ,cAC7D7oB,EACD,MAEAA,EAAMA,OAA+B,GAAtBA,EAAMA,MAAM+D,SAC3B/D,EAAQA,EAAMA,MAAM,IAExBwkC,EAAU79B,KAAK3G,GAEfm+B,EAAYiC,MAAM,OAGlBjC,EAAYiC,MAAM,MAAQmE,KAC1BA,GAAuB,EACvBvkC,EAASwkC,EAAUzgC,OAAS,EAAKygC,EAAU,GACrC,IAAIlX,GAAKvX,MAAMyuB,GACrBC,EAAc99B,KAAK3G,GACnBwkC,EAAY,IAIpB,OADArG,EAAY0B,SACL0E,EAAuBE,EAAgBD,GAElDG,QAAS,WACL,OAAO1jC,KAAK2jC,aACR3jC,KAAKO,SACLP,KAAK8iC,UACL9iC,KAAK4jC,qBAObH,WAAY,WACR,IAAIpkC,EACAN,EAGJ,GAFAm+B,EAAYsB,OACZn/B,EAAM69B,EAAY+B,IAAI,iBACjB5/B,EAIL,GAAK69B,EAAYiC,MAAM,KAAvB,CAKA,GADApgC,EAAQmiC,EAAQ2C,SACZ9kC,EAEA,OADAm+B,EAAY0B,SACL,IAAKvS,GAAe,WAAEhtB,EAAKN,GAGlCm+B,EAAYuB,eATZvB,EAAYuB,eAJZvB,EAAYuB,WAuBpBxR,IAAK,WACD,IAAIluB,EACAmK,EAAQg0B,EAAYp/B,EAExB,GADAo/B,EAAYiB,mBAAoB,EAC3BjB,EAAYkC,KAAK,QAQtB,OAJArgC,EAAQiB,KAAK8iC,UAAY9iC,KAAK4V,YAAc5V,KAAKP,YAC7Cy9B,EAAY+B,IAAI,mCAAqC,GACzD/B,EAAYiB,mBAAoB,EAChCiD,EAAW,KACJ,IAAK/U,GAAQ,IAAkB,MAAfttB,EAAMA,OACzBA,aAAiBstB,GAAK/H,UACtBvlB,aAAiBstB,GAAK3H,SACtB3lB,EAAQ,IAAKstB,GAAc,UAAEttB,EAAOmK,GAAQA,EAAOlB,GAVnDk1B,EAAYiB,mBAAoB,GAoBxCvoB,SAAU,WACN,IAAIkuB,EACAzlC,EACA6K,EAAQg0B,EAAYp/B,EAExB,GADAo/B,EAAYsB,OACsB,MAA9BtB,EAAYqD,gBAA0BliC,EAAO6+B,EAAY+B,IAAI,eAAgB,CAE7E,GADA6E,EAAK5G,EAAYqD,cACN,MAAPuD,GAAqB,MAAPA,IAAe5G,EAAYsD,WAAWx1B,MAAM,OAAQ,CAElE,IAAIwG,EAAS0vB,EAAQuB,aAAapkC,GAClC,GAAImT,EAEA,OADA0rB,EAAY0B,SACLptB,EAIf,OADA0rB,EAAY0B,SACL,IAAKvS,GAAa,SAAEhuB,EAAM6K,EAAOlB,GAE5Ck1B,EAAYuB,WAGhBsF,cAAe,WACX,IAAIC,EACA96B,EAAQg0B,EAAYp/B,EACxB,GAAkC,MAA9Bo/B,EAAYqD,gBAA0ByD,EAAQ9G,EAAY+B,IAAI,mBAC9D,OAAO,IAAK5S,GAAa,SAAE,IAAM2X,EAAM,GAAI96B,EAAOlB,IAQ1DvI,SAAU,WACN,IAAIpB,EACA6K,EAAQg0B,EAAYp/B,EACxB,GAAkC,MAA9Bo/B,EAAYqD,gBAA0BliC,EAAO6+B,EAAY+B,IAAI,cAC7D,OAAO,IAAK5S,GAAa,SAAEhuB,EAAM6K,EAAOlB,IAIhDi8B,cAAe,WACX,IAAID,EACA96B,EAAQg0B,EAAYp/B,EACxB,GAAkC,MAA9Bo/B,EAAYqD,gBAA0ByD,EAAQ9G,EAAY+B,IAAI,oBAC9D,OAAO,IAAK5S,GAAa,SAAE,IAAM2X,EAAM,GAAI96B,EAAOlB,IAU1DzH,MAAO,WACH,IAAIuK,EAEJ,GADAoyB,EAAYsB,OACsB,MAA9BtB,EAAYqD,gBAA0Bz1B,EAAMoyB,EAAY+B,IAAI,oEACvDn0B,EAAI,GAEL,OADAoyB,EAAY0B,SACL,IAAKvS,GAAU,MAAEvhB,EAAI,QAAI/G,EAAW+G,EAAI,IAGvDoyB,EAAYuB,WAEhByF,aAAc,WACVhH,EAAYsB,OACZ,IAAIL,EAAoBjB,EAAYiB,kBACpCjB,EAAYiB,mBAAoB,EAChC,IAAIrvB,EAAIouB,EAAY+B,IAAI,6BAExB,GADA/B,EAAYiB,kBAAoBA,EAC3BrvB,EAAL,CAIAouB,EAAYuB,UACZ,IAAIl+B,EAAQ8rB,GAAKxhB,MAAMgC,YAAYiC,GACnC,OAAIvO,GACA28B,EAAYkC,KAAKtwB,GACVvO,QAFX,EALI28B,EAAY0B,UAepB+E,UAAW,WACP,IAAIzG,EAAYwD,iBAAhB,CAGA,IAAI3hC,EAAQm+B,EAAY+B,IAAI,kCAC5B,OAAIlgC,EACO,IAAKstB,GAAc,UAAEttB,EAAM,GAAIA,EAAM,SADhD,IASJ6kC,kBAAmB,WACf,IAAIO,EAEJ,GADAA,EAAKjH,EAAY+B,IAAI,uCACjBkF,EACA,OAAO,IAAK9X,GAAsB,kBAAE8X,EAAG,KAQ/CC,WAAY,WACR,IAAIC,EACAn7B,EAAQg0B,EAAYp/B,EACxBo/B,EAAYsB,OACZ,IAAI8F,EAASpH,EAAYiC,MAAM,KAC3BoF,EAAUrH,EAAYiC,MAAM,KAChC,GAAKoF,EAAL,CAKA,GADAF,EAAKnH,EAAY+B,IAAI,WACjBoF,EAEA,OADAnH,EAAY0B,SACL,IAAKvS,GAAe,WAAEgY,EAAGlxB,OAAO,EAAGkxB,EAAGvhC,OAAS,GAAIwS,QAAQgvB,GAASp7B,EAAOlB,GAEtFk1B,EAAYuB,QAAQ,sCARhBvB,EAAYuB,YAgBxB7oB,SAAU,WACN,IAAIvX,EACJ,GAAkC,MAA9B6+B,EAAYqD,gBAA0BliC,EAAO6+B,EAAY+B,IAAI,mBAC7D,OAAO5gC,EAAK,IAWpBokC,aAAc,SAAU+B,GACpB,IAAIhb,EACA1rB,EAAIo/B,EAAYp/B,EAChB2mC,IAAYD,EACZnmC,EAAOmmC,EAEX,GADAtH,EAAYsB,OACRngC,GAAuC,MAA9B6+B,EAAYqD,gBACjBliC,EAAO6+B,EAAY+B,IAAI,yBAA2B,CAEtD,GADAzV,EAAUxpB,KAAK+qB,MAAM2Z,eAChBlb,IAAaib,GAAsC,OAA3BvH,EAAYkC,KAAK,OAAgC,OAAZ/gC,EAAK,IAEnE,YADA6+B,EAAYuB,QAAQ,2CAGnBgG,IACDpmC,EAAOA,EAAK,IAEhB,IAAIJ,EAAO,IAAIouB,GAAKjD,aAAa/qB,EAAMP,EAAGkK,GAC1C,OAAKy8B,GAAWvD,EAAQJ,OACpB5D,EAAY0B,SACL3gC,IAGPi/B,EAAY0B,SACL,IAAIvS,GAAK/C,eAAerrB,EAAMurB,EAAS1rB,EAAGkK,IAGzDk1B,EAAYuB,WAKhB9pB,OAAQ,SAAUgwB,GACd,IAAItxB,EACA5P,EAEAilB,EACApV,EACAqB,EAHAzL,EAAQg0B,EAAYp/B,EAIxB,GAAKo/B,EAAYkC,KAAKuF,EAAS,YAAc,YAA7C,CAGA,EAAG,CACCjc,EAAS,KACTrV,EAAW,KACX,QAASqV,EAASwU,EAAY+B,IAAI,wBAAyB,CAEvD,GADAx7B,EAAIzD,KAAK4U,WACJnR,EACD,MAEA4P,EACAA,EAAS3N,KAAKjC,GAGd4P,EAAW,CAAC5P,GAGpBilB,EAASA,GAAUA,EAAO,GACrBrV,GACDpO,EAAM,0CAEV0P,EAAS,IAAK0X,GAAW,OAAE,IAAKA,GAAa,SAAEhZ,GAAWqV,EAAQxf,EAAOlB,GACrEsL,EACAA,EAAW5N,KAAKiP,GAGhBrB,EAAa,CAACqB,SAEbuoB,EAAYiC,MAAM,MAK3B,OAJAgC,EAAO,OACHwD,GACAxD,EAAO,MAEJ7tB,IAKXgvB,WAAY,WACR,OAAOtiC,KAAK2U,QAAO,IAKvBoW,MAAO,CAiBH9sB,KAAM,SAAUwmC,EAASG,GACrB,IAEIpb,EAEAnW,EACAnH,EACA24B,EANAhlC,EAAIq9B,EAAYqD,cAChB7qB,GAAY,EAEZxM,EAAQg0B,EAAYp/B,EAIxB,GAAU,MAAN+B,GAAmB,MAANA,EAAjB,CAKA,GAFAq9B,EAAYsB,OACZnrB,EAAWrT,KAAKqT,WACZA,EAAU,CASV,GARI6pB,EAAYiC,MAAM,OAClBjzB,EAAOlM,KAAKkM,MAAK,GAAMA,KACvBk1B,EAAW,KACXyD,GAAY,IAEE,IAAdD,IACApb,EAAUxpB,KAAK0kC,gBAED,IAAdE,IAAuBpb,EAEvB,YADA0T,EAAYuB,UAGhB,GAAIgG,IAAYjb,IAAYqb,EAGxB,YADA3H,EAAYuB,UAMhB,IAHKgG,GAAWvD,EAAQxrB,cACpBA,GAAY,GAEZ+uB,GAAWvD,EAAQJ,MAAO,CAC1B5D,EAAY0B,SACZ,IAAI7T,EAAQ,IAAKsB,GAAKtB,MAAU,KAAE1X,EAAUnH,EAAMhD,EAAOlB,GAAWwhB,GAAW9T,GAC/E,OAAI8T,EACO,IAAI6C,GAAK/C,eAAeyB,EAAOvB,GAG/BuB,GAInBmS,EAAYuB,YAMhBprB,SAAU,WACN,IAAIA,EACA5P,EACAtF,EACA2mC,EACAC,EACAC,EAAK,wDACT,MAAO,EAAM,CAGT,GAFAD,EAAY7H,EAAYp/B,EACxB2F,EAAIy5B,EAAY+B,IAAI+F,IACfvhC,EACD,MAEJqhC,EAAO,IAAKzY,GAAY,QAAEluB,EAAGsF,GAAG,EAAOshC,EAAW/8B,GAC9CqL,EACAA,EAAS3N,KAAKo/B,GAGdzxB,EAAW,CAACyxB,GAEhB3mC,EAAI++B,EAAYiC,MAAM,KAE1B,OAAO9rB,GAEXnH,KAAM,SAAU+4B,GACZ,IAKI3B,EACA4B,EACA7mC,EACA8mC,EACApmC,EACAqrB,EACA4B,EAXA0W,EAAWxB,EAAQwB,SACnB9U,EAAW,CAAE1hB,KAAM,KAAM0d,UAAU,GACnCwb,EAAc,GACd5B,EAAgB,GAChBD,EAAY,GAQZ8B,GAAS,EACbnI,EAAYsB,OACZ,MAAO,EAAM,CACT,GAAIyG,EACA7a,EAAM8W,EAAQ7X,mBAAqB6X,EAAQtZ,iBAE1C,CAED,GADAsV,EAAYoB,aAAax7B,OAAS,EAC9Bo6B,EAAYkC,KAAK,OAAQ,CACzBxR,EAAShE,UAAW,EAChBsT,EAAYiC,MAAM,OAASmE,IAC3BA,GAAuB,IAE1BA,EAAuBE,EAAgBD,GACnC79B,KAAK,CAAEkkB,UAAU,IACtB,MAEJQ,EAAMsY,EAAS9sB,YAAc8sB,EAASjjC,YAAcijC,EAASgB,WAAahB,EAAS51B,WAAa9M,KAAK/B,MAAK,GAE9G,IAAKmsB,IAAQib,EACT,MAEJF,EAAW,KACP/a,EAAI1G,mBACJ0G,EAAI1G,oBAER3kB,EAAQqrB,EACR,IAAIla,EAAM,KAUV,GATI+0B,EAEI7a,EAAIrrB,OAA6B,GAApBqrB,EAAIrrB,MAAM+D,SACvBoN,EAAMka,EAAIrrB,MAAM,IAIpBmR,EAAMka,EAENla,IAAQA,aAAemc,GAAK/H,UAAYpU,aAAemc,GAAK3H,UAC5D,GAAIwY,EAAYiC,MAAM,KAAM,CAQxB,GAPIiG,EAAYtiC,OAAS,IACjBwgC,GACAr+B,EAAM,yCAEVigC,GAA0B,GAE9BnmC,EAAQmiC,EAAQ7X,mBAAqB6X,EAAQtZ,cACxC7oB,EAAO,CACR,IAAIkmC,EAMA,OAFA/H,EAAYuB,UACZ7Q,EAAS1hB,KAAO,GACT0hB,EALP3oB,EAAM,iDAQdkgC,EAAY9mC,EAAO6R,EAAI7R,UAEtB,GAAI6+B,EAAYkC,KAAK,OAAQ,CAC9B,IAAK6F,EAAQ,CACTrX,EAAShE,UAAW,EAChBsT,EAAYiC,MAAM,OAASmE,IAC3BA,GAAuB,IAE1BA,EAAuBE,EAAgBD,GACnC79B,KAAK,CAAErH,KAAM+rB,EAAI/rB,KAAMurB,UAAU,IACtC,MAGAoC,GAAS,OAGPiZ,IACN5mC,EAAO8mC,EAAWj1B,EAAI7R,KACtBU,EAAQ,MAGZA,GACAqmC,EAAY1/B,KAAK3G,GAErBwkC,EAAU79B,KAAK,CAAErH,KAAM8mC,EAAUpmC,MAAOA,EAAOitB,OAAQA,IACnDkR,EAAYiC,MAAM,KAClBkG,GAAS,GAGbA,EAAoC,MAA3BnI,EAAYiC,MAAM,MACvBkG,GAAU/B,KACN4B,GACAjgC,EAAM,yCAEVq+B,GAAuB,EACnB8B,EAAYtiC,OAAS,IACrB/D,EAAQ,IAAKstB,GAAU,MAAE+Y,IAE7B5B,EAAc99B,KAAK,CAAErH,KAAMA,EAAMU,MAAOA,EAAOitB,OAAQA,IACvD3tB,EAAO,KACP+mC,EAAc,GACdF,GAA0B,IAKlC,OAFAhI,EAAY0B,SACZhR,EAAS1hB,KAAOo3B,EAAuBE,EAAgBD,EAChD3V,GAqBX2U,WAAY,WACR,IAAIlkC,EAEA2M,EACA0P,EACA4qB,EAHA3b,EAAS,GAITC,GAAW,EACf,KAAmC,MAA9BsT,EAAYqD,eAAuD,MAA9BrD,EAAYqD,eAClDrD,EAAYmD,KAAK,aAKrB,GAFAnD,EAAYsB,OACZxzB,EAAQkyB,EAAY+B,IAAI,gEACpBj0B,EAAO,CACP3M,EAAO2M,EAAM,GACb,IAAIu6B,EAAUvlC,KAAKkM,MAAK,GAQxB,GAPAyd,EAAS4b,EAAQr5B,KACjB0d,EAAW2b,EAAQ3b,UAMdsT,EAAYiC,MAAM,KAEnB,YADAjC,EAAYuB,QAAQ,uBAQxB,GALAvB,EAAYoB,aAAax7B,OAAS,EAC9Bo6B,EAAYkC,KAAK,UACjBkG,EAAOnE,EAAOD,EAAQsE,WAAY,uBAEtC9qB,EAAUwmB,EAAQuE,QACd/qB,EAEA,OADAwiB,EAAY0B,SACL,IAAKvS,GAAKtB,MAAgB,WAAE1sB,EAAMsrB,EAAQjP,EAAS4qB,EAAM1b,GAGhEsT,EAAYuB,eAIhBvB,EAAYuB,WAGpBiG,YAAa,WACT,IAAIlqB,EACAgP,EAAU,GACd,GAAkC,MAA9B0T,EAAYqD,cAAhB,CAGA,MAAO,EAAM,CAGT,GAFArD,EAAYsB,OACZhkB,EAAOxa,KAAK0lC,eACPlrB,GAAiB,KAATA,EAAa,CACtB0iB,EAAYuB,UACZ,MAEJjV,EAAQ9jB,KAAK8U,GACb0iB,EAAY0B,SAEhB,OAAIpV,EAAQ1mB,OAAS,EACV0mB,OADX,IAIJkc,YAAa,WAET,GADAxI,EAAYsB,OACPtB,EAAYiC,MAAM,KAAvB,CAIA,IAAI9gC,EAAO6+B,EAAY+B,IAAI,gCAC3B,GAAK/B,EAAYiC,MAAM,KAIvB,OAAI9gC,GAAiB,KAATA,GACR6+B,EAAY0B,SACLvgC,QAEX6+B,EAAYuB,UAPRvB,EAAYuB,eALZvB,EAAYuB,YAmBxBoF,OAAQ,WACJ,IAAInB,EAAW1iC,KAAK0iC,SACpB,OAAO1iC,KAAK06B,WAAagI,EAASgB,WAAahB,EAAS9sB,YAAc8sB,EAASzV,OAC3EyV,EAASjjC,YAAcijC,EAASzkC,QAAUykC,EAAS51B,WAAa9M,KAAK+qB,MAAM9sB,MAAK,IAChFykC,EAAS0B,cAOjBtD,IAAK,WACD,OAAO5D,EAAYiC,MAAM,MAAQjC,EAAYmD,KAAK,MAOtD8C,QAAS,WACL,IAAIpkC,EAEJ,GAAKm+B,EAAY+B,IAAI,cASrB,OANAlgC,EAAQm+B,EAAY+B,IAAI,QACnBlgC,IACDA,EAAQoiC,EAAOD,EAAQwB,SAAS9sB,SAAU,yBAC1C7W,EAAQ,KAAOA,EAAMV,KAAK2O,MAAM,GAAK,KAEzCo0B,EAAW,KACJ,IAAI/U,GAAKnH,OAAO,GAAI,iBAAmBnmB,EAAQ,MAc1D6V,QAAS,WACL,IAAInR,EACAtF,EACAmN,EACApC,EAAQg0B,EAAYp/B,EAsBxB,GArBAK,EAAI6B,KAAKwN,aACT/J,EAAIy5B,EAAY+B,IAAI,uBAChB/B,EAAY+B,IAAI,+EAChB/B,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,MAAQn/B,KAAK2lC,aACzDzI,EAAY+B,IAAI,kBAAoB/B,EAAY+B,IAAI,iBACpDj/B,KAAK0iC,SAASqB,gBACbtgC,IACDy5B,EAAYsB,OACRtB,EAAYiC,MAAM,MACb7zB,EAAItL,KAAKoa,UAAS,KAAW8iB,EAAYiC,MAAM,MAChD17B,EAAI,IAAK4oB,GAAU,MAAE/gB,GACrB4xB,EAAY0B,UAGZ1B,EAAYuB,QAAQ,uBAIxBvB,EAAY0B,UAGhBn7B,EACA,OAAO,IAAK4oB,GAAY,QAAEluB,EAAGsF,EAAGA,aAAa4oB,GAAK/H,SAAUpb,EAAOlB,IAY3EwF,WAAY,WACR,IAAIrP,EAAI++B,EAAYqD,cACpB,GAAU,MAANpiC,EAAW,CACX++B,EAAYsB,OACZ,IAAIoH,EAAoB1I,EAAY+B,IAAI,gBACxC,GAAI2G,EAEA,OADA1I,EAAY0B,SACL,IAAKvS,GAAe,WAAEuZ,GAEjC1I,EAAYuB,UAEhB,GAAU,MAANtgC,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,EAAW,CAC/D++B,EAAYp/B,IACF,MAANK,GAA2C,MAA9B++B,EAAYqD,gBACzBpiC,EAAI,KACJ++B,EAAYp/B,KAEhB,MAAOo/B,EAAY2B,eACf3B,EAAYp/B,IAEhB,OAAO,IAAKuuB,GAAe,WAAEluB,GAE5B,OAAI++B,EAAY2B,cAAc,GACxB,IAAKxS,GAAe,WAAE,KAGtB,IAAKA,GAAe,WAAE,OAYrCjS,SAAU,SAAUyrB,GAChB,IACIxyB,EACAC,EACAnV,EACAsF,EACAuxB,EACA8Q,EACAvyB,EAPArK,EAAQg0B,EAAYp/B,EAQxB+nC,GAAoB,IAAXA,EACT,MAAQA,IAAWvyB,EAAatT,KAAK2U,WAAekxB,IAAWC,EAAO5I,EAAYkC,KAAK,WAAc37B,EAAIzD,KAAK4U,WA4B1G,GA3BIkxB,EACAvyB,EAAY4tB,EAAOnhC,KAAKwlC,WAAY,sBAE/BjyB,EACLtO,EAAM,qDAEDqO,EAED0hB,EADAA,EACaA,EAAW3uB,OAAOiN,GAGlBA,GAIb0hB,GACA/vB,EAAM,kDAEV9G,EAAI++B,EAAYqD,cACZltB,EACAA,EAAS3N,KAAKjC,GAGd4P,EAAW,CAAC5P,GAEhBA,EAAI,MAEE,MAANtF,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,EACpD,MAGR,GAAIkV,EACA,OAAO,IAAKgZ,GAAa,SAAEhZ,EAAU2hB,EAAYzhB,EAAWrK,EAAOlB,GAEnEgtB,GACA/vB,EAAM,2EAGd4U,UAAW,WACP,IAAIha,EACAga,EACJ,MAAO,EAAM,CAET,GADAha,EAAIG,KAAKoa,YACJva,EACD,MAYJ,GAVIga,EACAA,EAAUnU,KAAK7F,GAGfga,EAAY,CAACha,GAEjBq9B,EAAYoB,aAAax7B,OAAS,EAC9BjD,EAAE0T,WAAasG,EAAU/W,OAAS,GAClCmC,EAAM,4DAELi4B,EAAYiC,MAAM,KACnB,MAEAt/B,EAAE0T,WACFtO,EAAM,2DAEVi4B,EAAYoB,aAAax7B,OAAS,EAEtC,OAAO+W,GAEX8rB,UAAW,WACP,GAAKzI,EAAYiC,MAAM,KAAvB,CAGA,IACI9/B,EACA6Q,EACAvG,EAHA+4B,EAAW1iC,KAAK0iC,SAYpB,OARMrjC,EAAMqjC,EAASqB,mBACjB1kC,EAAM8hC,EAAO,mDAEjBx3B,EAAKuzB,EAAY+B,IAAI,cACjBt1B,IACAuG,EAAMwyB,EAASI,UAAY5F,EAAY+B,IAAI,aAAe/B,EAAY+B,IAAI,YAAcyD,EAASqB,iBAErG3C,EAAW,KACJ,IAAK/U,GAAc,UAAEhtB,EAAKsK,EAAIuG,KAMzCu1B,MAAO,WACH,IAAItgB,EACJ,GAAI+X,EAAYiC,MAAM,OAASha,EAAUnlB,KAAKoiC,YAAclF,EAAYiC,MAAM,KAC1E,OAAOha,GAGf4gB,aAAc,WACV,IAAIN,EAAQzlC,KAAKylC,QAIjB,OAHIA,IACAA,EAAQ,IAAIpZ,GAAKzS,QAAQ,KAAM6rB,IAE5BA,GAEXpc,gBAAiB,WACb,IAAIkc,EACA5b,EACAC,EAEJ,GADAsT,EAAYsB,QACRtB,EAAY+B,IAAI,aAOhBsG,EAAUvlC,KAAK+qB,MAAM7e,MAAK,GAC1Byd,EAAS4b,EAAQr5B,KACjB0d,EAAW2b,EAAQ3b,SACdsT,EAAYiC,MAAM,MAV3B,CAeA,IAAI4G,EAAe/lC,KAAK+lC,eACxB,GAAIA,EAEA,OADA7I,EAAY0B,SACRjV,EACO,IAAI0C,GAAKtB,MAAMrB,WAAW,KAAMC,EAAQoc,EAAc,KAAMnc,GAEhE,IAAIyC,GAAK1L,gBAAgBolB,GAEpC7I,EAAYuB,eAZJvB,EAAYuB,WAiBxB/jB,QAAS,WACL,IAAIb,EACAC,EACAzD,EAMJ,GALA6mB,EAAYsB,OACR31B,EAAQnE,kBACR2R,EAAYgrB,EAAanE,EAAYp/B,IAEzC+b,EAAY7Z,KAAK6Z,YACbA,IAAcC,EAAQ9Z,KAAKylC,SAAU,CACrCvI,EAAY0B,SACZ,IAAIlkB,EAAU,IAAK2R,GAAY,QAAExS,EAAWC,EAAOjR,EAAQrI,eAI3D,OAHIqI,EAAQnE,kBACRgW,EAAQrE,UAAYA,GAEjBqE,EAGPwiB,EAAYuB,WAGpB+D,YAAa,WACT,IAAInkC,EACAU,EAEAinC,EAEAtwB,EACApE,EACA7D,EALAvE,EAAQg0B,EAAYp/B,EAEpBK,EAAI++B,EAAYqD,cAIpB,GAAU,MAANpiC,GAAmB,MAANA,GAAmB,MAANA,GAAmB,MAANA,EAK3C,GAFA++B,EAAYsB,OACZngC,EAAO2B,KAAK4V,YAAc5V,KAAKimC,eAC3B5nC,EAAM,CASN,GARAoP,EAA6B,kBAATpP,EAChBoP,IACA1O,EAAQiB,KAAKqpB,kBACTtqB,IACAinC,GAAQ,IAGhB9I,EAAYoB,aAAax7B,OAAS,GAC7B/D,EAAO,CAcR,GAVAuS,GAAS7D,GAAcpP,EAAKyE,OAAS,GAAKzE,EAAK8X,MAAMpX,MAGjDA,EADAV,EAAK,GAAGU,OAAuC,OAA9BV,EAAK,GAAGU,MAAMiO,MAAM,EAAG,GAChChN,KAAKkmC,kBAKLlmC,KAAKmmC,iBAEbpnC,EAGA,OAFAm+B,EAAY0B,SAEL,IAAKvS,GAAgB,YAAEhuB,EAAMU,GAAO,EAAOuS,EAAOpI,EAAOlB,GAE/DjJ,IACDA,EAAQiB,KAAKjB,SAEbA,EACA2W,EAAY1V,KAAK0V,YAEZjI,IAEL1O,EAAQiB,KAAKkmC,mBAGrB,GAAInnC,IAAUiB,KAAK8gC,OAASkF,GAExB,OADA9I,EAAY0B,SACL,IAAKvS,GAAgB,YAAEhuB,EAAMU,EAAO2W,EAAWpE,EAAOpI,EAAOlB,GAGpEk1B,EAAYuB,eAIhBvB,EAAYuB,WAGpB0H,eAAgB,WACZ,IAAIj9B,EAAQg0B,EAAYp/B,EACpBkN,EAAQkyB,EAAY+B,IAAI,6BAC5B,GAAIj0B,EACA,OAAO,IAAKqhB,GAAc,UAAErhB,EAAM,GAAI9B,IAY9Cg9B,gBAAiB,SAAUE,GACvB,IAAItoC,EACA2F,EACA4iC,EACAtnC,EACAmgC,EAAMkH,GAAe,IACrBl9B,EAAQg0B,EAAYp/B,EACpB0T,EAAS,GACb,SAAS80B,IACL,IAAInG,EAAOjD,EAAYqD,cACvB,MAAmB,kBAARrB,EACAiB,IAASjB,EAGTA,EAAIj7B,KAAKk8B,GAGxB,IAAImG,IAAJ,CAGAvnC,EAAQ,GACR,GACI0E,EAAIzD,KAAK06B,UACLj3B,EACA1E,EAAM2G,KAAKjC,IAGfA,EAAIzD,KAAK6jC,SACLpgC,GACA1E,EAAM2G,KAAKjC,UAEVA,GAET,GADA4iC,EAAOC,IACHvnC,EAAM+D,OAAS,EAAG,CAElB,GADA/D,EAAQ,IAAKstB,GAAe,WAAEttB,GAC1BsnC,EACA,OAAOtnC,EAGPyS,EAAO9L,KAAK3G,GAGe,MAA3Bm+B,EAAYsD,YACZhvB,EAAO9L,KAAK,IAAI2mB,GAAKnX,UAAU,IAAKhM,IAK5C,GAFAg0B,EAAYsB,OACZz/B,EAAQm+B,EAAYuC,YAAYP,GAC5BngC,EAAO,CAIP,GAHqB,kBAAVA,GACPkG,EAAM,aAAelG,EAAQ,IAAK,SAEjB,IAAjBA,EAAM+D,QAA6B,MAAb/D,EAAM,GAE5B,OADAm+B,EAAY0B,SACL,IAAIvS,GAAKnX,UAAU,GAAIhM,GAElC,IAAI6a,OAAO,EACX,IAAKjmB,EAAI,EAAGA,EAAIiB,EAAM+D,OAAQhF,IAE1B,GADAimB,EAAOhlB,EAAMjB,GACTwK,MAAMC,QAAQwb,GAEdvS,EAAO9L,KAAK,IAAI2mB,GAAKnH,OAAOnB,EAAK,GAAIA,EAAK,IAAI,EAAM7a,EAAOlB,QAE1D,CACGlK,IAAMiB,EAAM+D,OAAS,IACrBihB,EAAOA,EAAK1W,QAGhB,IAAIgY,EAAQ,IAAIgH,GAAKnH,OAAO,IAAMnB,GAAM,EAAM7a,EAAOlB,GACrDqd,EAAMC,cAAgB,aACtBD,EAAME,UAAY,cAClB/T,EAAO9L,KAAK2f,GAIpB,OADA6X,EAAY0B,SACL,IAAIvS,GAAKjJ,WAAW5R,GAAQ,GAEvC0rB,EAAYuB,YAYhB,OAAU,WACN,IAAI/mB,EACA2O,EACAnd,EAAQg0B,EAAYp/B,EACpByoC,EAAMrJ,EAAY+B,IAAI,gBAC1B,GAAIsH,EAAK,CACL,IAAIllC,GAAWklC,EAAMvmC,KAAKwmC,gBAAkB,OAAS,GACrD,GAAK9uB,EAAO1X,KAAK0iC,SAASI,UAAY9iC,KAAK0iC,SAASzV,MAOhD,OANA5G,EAAWrmB,KAAKymC,gBACXvJ,EAAYiC,MAAM,OACnBjC,EAAYp/B,EAAIoL,EAChBjE,EAAM,gEAEVohB,EAAWA,GAAY,IAAKgG,GAAU,MAAEhG,GACjC,IAAKgG,GAAW,OAAE3U,EAAM2O,EAAUhlB,EAAS6H,EAAOlB,GAGzDk1B,EAAYp/B,EAAIoL,EAChBjE,EAAM,gCAIlBuhC,cAAe,WACX,IAAIjoC,EAEAmoC,EACA3nC,EAFAsC,EAAU,GAId,IAAK67B,EAAYiC,MAAM,KACnB,OAAO,KAEX,GAEI,GADA5gC,EAAIyB,KAAK2mC,eACLpoC,EAAG,CAGH,OAFAmoC,EAAanoC,EACbQ,GAAQ,EACA2nC,GACJ,IAAK,MACDA,EAAa,OACb3nC,GAAQ,EACR,MACJ,IAAK,OACD2nC,EAAa,WACb3nC,GAAQ,EACR,MAGR,GADAsC,EAAQqlC,GAAc3nC,GACjBm+B,EAAYiC,MAAM,KACnB,aAGH5gC,GAET,OADA6iC,EAAW,KACJ//B,GAEXslC,aAAc,WACV,IAAIplC,EAAM27B,EAAY+B,IAAI,uDAC1B,GAAI19B,EACA,OAAOA,EAAI,IAGnBqlC,aAAc,WACV,IAEInjC,EACA7D,EAHA8iC,EAAW1iC,KAAK0iC,SAChBv6B,EAAQ,GAGZ+0B,EAAYsB,OACZ,GACI/6B,EAAIi/B,EAAS51B,WAAa41B,EAAS9sB,YAAc8sB,EAASG,cACtDp/B,EACA0E,EAAMzC,KAAKjC,GAENy5B,EAAYiC,MAAM,OACvBv/B,EAAII,KAAKP,WACTgE,EAAIzD,KAAKjB,QACLm+B,EAAYiC,MAAM,KACdv/B,GAAK6D,EACL0E,EAAMzC,KAAK,IAAK2mB,GAAU,MAAE,IAAKA,GAAgB,YAAEzsB,EAAG6D,EAAG,KAAM,KAAMy5B,EAAYp/B,EAAGkK,GAAU,KAEzFvE,EACL0E,EAAMzC,KAAK,IAAK2mB,GAAU,MAAE5oB,IAG5BwB,EAAM,yCAIVA,EAAM,sBAAyB,gBAGlCxB,GAET,GADAy5B,EAAY0B,SACRz2B,EAAMrF,OAAS,EACf,OAAO,IAAKupB,GAAe,WAAElkB,IAGrCs+B,cAAe,WACX,IAEIhjC,EAFAi/B,EAAW1iC,KAAK0iC,SAChBrc,EAAW,GAEf,GAEI,GADA5iB,EAAIzD,KAAK4mC,eACLnjC,GAEA,GADA4iB,EAAS3gB,KAAKjC,IACTy5B,EAAYiC,MAAM,KACnB,WAKJ,GADA17B,EAAIi/B,EAAS9sB,YAAc8sB,EAASG,cAChCp/B,IACA4iB,EAAS3gB,KAAKjC,IACTy5B,EAAYiC,MAAM,MACnB,YAIP17B,GACT,OAAO4iB,EAASvjB,OAAS,EAAIujB,EAAW,MAE5C5jB,MAAO,WACH,IAAI4jB,EACAvM,EACArX,EACA4T,EACAnN,EAAQg0B,EAAYp/B,EAKxB,GAJI+K,EAAQnE,kBACR2R,EAAYgrB,EAAan4B,IAE7Bg0B,EAAYsB,OACRtB,EAAYkC,KAAK,UAWjB,OAVA/Y,EAAWrmB,KAAKymC,gBAChB3sB,EAAQ9Z,KAAKylC,QACR3rB,GACD7U,EAAM,iEAEVi4B,EAAY0B,SACZn8B,EAAQ,IAAK4pB,GAAU,MAAEvS,EAAOuM,EAAUnd,EAAOlB,GAC7Ca,EAAQnE,kBACRjC,EAAM4T,UAAYA,GAEf5T,EAEXy6B,EAAYuB,WAOhBzP,OAAQ,WACJ,IAAItX,EACAxL,EACA7K,EACA6H,EAAQg0B,EAAYp/B,EACpByoC,EAAMrJ,EAAY+B,IAAI,gBAC1B,GAAIsH,EAAK,CAWL,GAVAr6B,EAAOlM,KAAK6mC,aAERxlC,EADA6K,EACU,CACN26B,WAAY36B,EACZ8a,UAAU,GAIJ,CAAEA,UAAU,GAErBtP,EAAO1X,KAAK0iC,SAASI,UAAY9iC,KAAK0iC,SAASzV,MAKhD,OAJKiQ,EAAYiC,MAAM,OACnBjC,EAAYp/B,EAAIoL,EAChBjE,EAAM,kCAEH,IAAKonB,GAAW,OAAE3U,EAAM,KAAMrW,EAAS6H,EAAOlB,GAGrDk1B,EAAYp/B,EAAIoL,EAChBjE,EAAM,iCAIlB4hC,WAAY,WAGR,GADA3J,EAAYsB,QACPtB,EAAYiC,MAAM,KAEnB,OADAjC,EAAYuB,UACL,KAEX,IAAIvyB,EAAOgxB,EAAY+B,IAAI,sBAC3B,OAAI/yB,EAAK,IACLgxB,EAAY0B,SACL1yB,EAAK,GAAGmB,SAGf6vB,EAAYuB,UACL,OAQfkE,OAAQ,WACJ,IACItkC,EACAU,EACA+a,EACAgtB,EACAC,EACAC,EACAC,EAPA/9B,EAAQg0B,EAAYp/B,EAQpBopC,GAAW,EACX7mB,GAAW,EACf,GAAkC,MAA9B6c,EAAYqD,cAAhB,CAIA,GADAxhC,EAAQiB,KAAK,aAAeA,KAAKgvB,UAAYhvB,KAAKyC,QAC9C1D,EACA,OAAOA,EAIX,GAFAm+B,EAAYsB,OACZngC,EAAO6+B,EAAY+B,IAAI,aAClB5gC,EAAL,CAOA,OAJAyoC,EAAwBzoC,EACF,KAAlBA,EAAKwP,OAAO,IAAaxP,EAAK8N,QAAQ,IAAK,GAAK,IAChD26B,EAAwB,IAAMzoC,EAAK2O,MAAM3O,EAAK8N,QAAQ,IAAK,GAAK,IAE5D26B,GACJ,IAAK,WACDC,GAAgB,EAChBG,GAAW,EACX,MACJ,IAAK,aACDF,GAAgB,EAChBE,GAAW,EACX,MACJ,IAAK,aACL,IAAK,iBACDH,GAAgB,EAChB,MACJ,IAAK,YACL,IAAK,YACDE,GAAa,EACb5mB,GAAW,EACX,MACJ,QACI4mB,GAAa,EACb,MA8BR,GA5BA/J,EAAYoB,aAAax7B,OAAS,EAC9BikC,GACAhoC,EAAQiB,KAAK6jC,SACR9kC,GACDkG,EAAM,YAAc5G,EAAO,gBAG1B2oC,GACLjoC,EAAQiB,KAAK4nB,aACR7oB,GACDkG,EAAM,YAAc5G,EAAO,gBAG1B4oC,IACLloC,EAAQiB,KAAKkmC,gBAAgB,SAC7BgB,EAA0C,MAA9BhK,EAAYqD,cACnBxhC,EAKKA,EAAMA,QACZA,EAAQ,MALHmoC,GAA0C,MAA9BhK,EAAYqD,eACzBt7B,EAAM5G,EAAO,gDAOrB6oC,IACAptB,EAAQ9Z,KAAK+lC,gBAEbjsB,IAAWotB,GAAYnoC,GAASm+B,EAAYiC,MAAM,KAElD,OADAjC,EAAY0B,SACL,IAAKvS,GAAW,OAAEhuB,EAAMU,EAAO+a,EAAO5Q,EAAOlB,EAAUa,EAAQnE,gBAAkB28B,EAAan4B,GAAS,KAAMmX,GAExH6c,EAAYuB,QAAQ,qCAUxB1/B,MAAO,WACH,IAAI0E,EACA2hC,EAAc,GACdl8B,EAAQg0B,EAAYp/B,EACxB,GAEI,GADA2F,EAAIzD,KAAK4nB,aACLnkB,IACA2hC,EAAY1/B,KAAKjC,IACZy5B,EAAYiC,MAAM,MACnB,YAGH17B,GACT,GAAI2hC,EAAYtiC,OAAS,EACrB,OAAO,IAAKupB,GAAU,MAAE+Y,EAAal8B,IAG7CwM,UAAW,WACP,GAAkC,MAA9BwnB,EAAYqD,cACZ,OAAOrD,EAAY+B,IAAI,kBAG/BkI,IAAK,WACD,IAAIv9B,EACAnG,EAEJ,GADAy5B,EAAYsB,OACRtB,EAAYiC,MAAM,KAElB,OADAv1B,EAAI5J,KAAKonC,WACLx9B,GAAKszB,EAAYiC,MAAM,MACvBjC,EAAY0B,SACZn7B,EAAI,IAAK4oB,GAAe,WAAE,CAACziB,IAC3BnG,EAAE8f,QAAS,EACJ9f,QAEXy5B,EAAYuB,QAAQ,gBAGxBvB,EAAYuB,WAEhB4I,eAAgB,WACZ,IAAInpC,EACA0L,EACAD,EACA29B,EACApkB,EAEJ,GADAhlB,EAAI8B,KAAKunC,UACLrpC,EAAG,CACHglB,EAAWga,EAAY2B,cAAc,GACrC,MAAO,EAAM,CACT,GAAI3B,EAAYmD,KAAK,YACjB,MAIJ,GAFAnD,EAAYsB,OACZ70B,EAAKuzB,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,MAAQjC,EAAYkC,KAAK,OACrEz1B,EAAI,CACLuzB,EAAY0B,SACZ,MAGJ,GADAh1B,EAAI5J,KAAKunC,WACJ39B,EAAG,CACJszB,EAAYuB,UACZ,MAEJvB,EAAY0B,SACZ1gC,EAAEulB,YAAa,EACf7Z,EAAE6Z,YAAa,EACf6jB,EAAY,IAAKjb,GAAc,UAAE1iB,EAAI,CAAC29B,GAAappC,EAAG0L,GAAIsZ,GAC1DA,EAAWga,EAAY2B,cAAc,GAEzC,OAAOyI,GAAappC,IAG5BkpC,SAAU,WACN,IAAIlpC,EACA0L,EACAD,EACA29B,EACApkB,EAEJ,GADAhlB,EAAI8B,KAAKqnC,iBACLnpC,EAAG,CACHglB,EAAWga,EAAY2B,cAAc,GACrC,MAAO,EAAM,CAET,GADAl1B,EAAKuzB,EAAY+B,IAAI,cAAiB/b,IAAaga,EAAYiC,MAAM,MAAQjC,EAAYiC,MAAM,OAC1Fx1B,EACD,MAGJ,GADAC,EAAI5J,KAAKqnC,kBACJz9B,EACD,MAEJ1L,EAAEulB,YAAa,EACf7Z,EAAE6Z,YAAa,EACf6jB,EAAY,IAAKjb,GAAc,UAAE1iB,EAAI,CAAC29B,GAAappC,EAAG0L,GAAIsZ,GAC1DA,EAAWga,EAAY2B,cAAc,GAEzC,OAAOyI,GAAappC,IAG5BsnC,WAAY,WACR,IAAI57B,EACAC,EAEA0J,EADArK,EAAQg0B,EAAYp/B,EAGxB,GADA8L,EAAI5J,KAAKuT,WAAU,GACf3J,EAAG,CACH,MAAO,EAAM,CACT,IAAKszB,EAAYmD,KAAK,sBAAwBnD,EAAYiC,MAAM,KAC5D,MAGJ,GADAt1B,EAAI7J,KAAKuT,WAAU,IACd1J,EACD,MAEJ0J,EAAY,IAAK8Y,GAAc,UAAE,KAAM9Y,GAAa3J,EAAGC,EAAGX,GAE9D,OAAOqK,GAAa3J,IAG5B2J,UAAW,SAAUi0B,GACjB,IAAIh2B,EACAi2B,EACAC,EACJ,SAASC,IACL,OAAOzK,EAAYkC,KAAK,MAG5B,GADA5tB,EAASxR,KAAK4nC,aAAaJ,GACtBh2B,EAAL,CAIA,GADAi2B,EAAUE,IACNF,EAAS,CAET,GADAC,EAAO1nC,KAAKuT,UAAUi0B,IAClBE,EAIA,OAHAl2B,EAAS,IAAK6a,GAAc,UAAEob,EAASj2B,EAAQk2B,GAMvD,OAAOl2B,IAEXo2B,aAAc,SAAUJ,GACpB,IAAIh2B,EACAi2B,EACAC,EACA3/B,EAAO/H,KACX,SAAS6nC,IACL,IAAIvC,EAAOv9B,EAAK+/B,iBAAiBN,IAAgBz/B,EAAKggC,qBAAqBP,GAC3E,OAAKlC,GAASkC,EAGPlC,EAFIv9B,EAAKigC,gBAAgBR,GAIpC,SAASS,IACL,OAAO/K,EAAYkC,KAAK,OAG5B,GADA5tB,EAASq2B,IACJr2B,EAAL,CAIA,GADAi2B,EAAUQ,IACNR,EAAS,CAET,GADAC,EAAO1nC,KAAK4nC,aAAaJ,IACrBE,EAIA,OAHAl2B,EAAS,IAAK6a,GAAc,UAAEob,EAASj2B,EAAQk2B,GAMvD,OAAOl2B,IAEXs2B,iBAAkB,SAAUN,GACxB,GAAItK,EAAYkC,KAAK,OAAQ,CACzB,IAAI5tB,EAASxR,KAAK+nC,qBAAqBP,GAIvC,OAHIh2B,IACAA,EAAO4W,QAAU5W,EAAO4W,QAErB5W,IAGfu2B,qBAAsB,SAAUP,GAC5B,SAASU,EAAkCC,GACvC,IAAIC,EAGJ,GAFAlL,EAAYsB,OACZ4J,EAAOD,EAAG50B,UAAUi0B,GACfY,EAAL,CAIA,GAAKlL,EAAYiC,MAAM,KAKvB,OADAjC,EAAY0B,SACLwJ,EAJHlL,EAAYuB,eAJZvB,EAAYuB,UAUpB,IAAI2J,EAEJ,GADAlL,EAAYsB,OACPtB,EAAYkC,KAAK,KAAtB,CAKA,GADAgJ,EAAOF,EAAkCloC,MACrCooC,EAEA,OADAlL,EAAY0B,SACLwJ,EAGX,GADAA,EAAOpoC,KAAKgoC,gBAAgBR,GACvBY,EAAL,CAIA,GAAKlL,EAAYiC,MAAM,KAKvB,OADAjC,EAAY0B,SACLwJ,EAJHlL,EAAYuB,QAAQ,qBAAuBvB,EAAYqD,cAAgB,UAJvErD,EAAYuB,eAVZvB,EAAYuB,WAoBpBuJ,gBAAiB,SAAUR,GACvB,IAEI59B,EACAC,EACA1L,EACAwL,EALA+4B,EAAW1iC,KAAK0iC,SAChBx5B,EAAQg0B,EAAYp/B,EAKxB,SAASwnC,IACL,OAAOtlC,KAAKonC,YAAc1E,EAAS51B,WAAa41B,EAASI,UAAYJ,EAASG,cAIlF,GAFAyC,EAAOA,EAAKhmC,KAAKU,MACjB4J,EAAI07B,IACA17B,EAwCA,OAvCIszB,EAAYiC,MAAM,KAEdx1B,EADAuzB,EAAYiC,MAAM,KACb,KAGA,IAGJjC,EAAYiC,MAAM,KAEnBx1B,EADAuzB,EAAYiC,MAAM,KACb,KAGA,IAGJjC,EAAYiC,MAAM,OAEnBx1B,EADAuzB,EAAYiC,MAAM,KACb,KAEAjC,EAAYiC,MAAM,KAClB,KAGA,KAGTx1B,GACAE,EAAIy7B,IACAz7B,EACA1L,EAAI,IAAKkuB,GAAc,UAAE1iB,EAAIC,EAAGC,EAAGX,GAAO,GAG1CjE,EAAM,wBAIV9G,EAAI,IAAKkuB,GAAc,UAAE,IAAKziB,EAAG,IAAKyiB,GAAY,QAAE,QAASnjB,GAAO,GAEjE/K,GAOfopC,QAAS,WACL,IACInf,EADAsa,EAAW1iC,KAAK0iC,SAEhBxF,EAAYmD,KAAK,eACjBjY,EAAS8U,EAAYiC,MAAM,MAE/B,IAAI5gC,EAAIyB,KAAKmnC,OAASzE,EAASiB,aAC3BjB,EAASniC,SAAWmiC,EAAS9sB,YAC7B8sB,EAASjjC,YAAcijC,EAASzkC,QAChCykC,EAASI,QAAO,IAASJ,EAASwB,gBAClCxB,EAASG,cAKb,OAJIza,IACA7pB,EAAEklB,YAAa,EACfllB,EAAI,IAAK8tB,GAAa,SAAE9tB,IAErBA,GASXqpB,WAAY,WACR,IACInkB,EACA4kC,EAFA3F,EAAW,GAGXx5B,EAAQg0B,EAAYp/B,EACxB,GACI2F,EAAIzD,KAAK06B,UACLj3B,EACAi/B,EAASh9B,KAAKjC,IAGlBA,EAAIzD,KAAKonC,YAAcpnC,KAAK6jC,SACxBpgC,aAAa4oB,GAAKxV,UAClBpT,EAAI,MAEJA,IACAi/B,EAASh9B,KAAKjC,GAETy5B,EAAYmD,KAAK,cAClBgI,EAAQnL,EAAYiC,MAAM,KACtBkJ,GACA3F,EAASh9B,KAAK,IAAK2mB,GAAc,UAAEgc,EAAOn/B,aAIjDzF,GACT,GAAIi/B,EAAS5/B,OAAS,EAClB,OAAO,IAAKupB,GAAe,WAAEqW,IAGrCjjC,SAAU,WACN,IAAIpB,EAAO6+B,EAAY+B,IAAI,8BAC3B,GAAI5gC,EACA,OAAOA,EAAK,IAGpB4nC,aAAc,WACV,IAEIpmC,EACAiP,EAHAzQ,EAAO,GACP6K,EAAQ,GAGZg0B,EAAYsB,OACZ,IAAI8J,EAAiBpL,EAAY+B,IAAI,yBACrC,GAAIqJ,EAGA,OAFAjqC,EAAO,CAAC,IAAKguB,GAAY,QAAEic,EAAe,KAC1CpL,EAAY0B,SACLvgC,EAEX,SAAS2M,EAAMg6B,GACX,IAAIlnC,EAAIo/B,EAAYp/B,EAChBmL,EAAQi0B,EAAY+B,IAAI+F,GAC5B,GAAI/7B,EAEA,OADAC,EAAMxD,KAAK5H,GACJO,EAAKqH,KAAKuD,EAAM,IAG/B+B,EAAM,UACN,MAAO,EACH,IAAKA,EAAM,qCACP,MAGR,GAAK3M,EAAKyE,OAAS,GAAMkI,EAAM,sBAAuB,CAQlD,IAPAkyB,EAAY0B,SAGI,KAAZvgC,EAAK,KACLA,EAAKoW,QACLvL,EAAMuL,SAEL3F,EAAI,EAAGA,EAAIzQ,EAAKyE,OAAQgM,IACzBjP,EAAIxB,EAAKyQ,GACTzQ,EAAKyQ,GAAsB,MAAhBjP,EAAEgO,OAAO,IAA8B,MAAhBhO,EAAEgO,OAAO,GACvC,IAAKwe,GAAY,QAAExsB,GACF,MAAhBA,EAAEgO,OAAO,GACN,IAAKwe,GAAa,SAAE,IAAMxsB,EAAEmN,MAAM,GAAI,GAAI9D,EAAM4F,GAAI9G,GACpD,IAAKqkB,GAAa,SAAE,IAAMxsB,EAAEmN,MAAM,GAAI,GAAI9D,EAAM4F,GAAI9G,GAEhE,OAAO3J,EAEX6+B,EAAYuB,cAgB5B,SAAS2E,GAAQ7vB,GACb,OAAOA,EAAYwB,EAAQC,KAAOD,EAAQE,MAM9C,SAASszB,GAAG1/B,EAAS0K,EAAWi1B,EAAWC,GACvC,OAAOl1B,EAAU9J,KAAKZ,GAAW2/B,EAAU/+B,KAAKZ,GACzC4/B,EAAaA,EAAWh/B,KAAKZ,GAAW,IAAIqM,EAGvD,SAASwzB,GAAU7/B,EAAS+M,GACxB,IAEI,OADAA,EAASnM,KAAKZ,GACPkM,EAAQC,KAEnB,MAAOvR,GACH,OAAOsR,EAAQE,OA7BvBgsB,GAAOa,cAAgB,SAAU7lB,GAC7B,IAAIpc,EAAI,GACR,IAAK,IAAIqc,KAAUD,EACf,GAAIzd,OAAOmB,eAAe1B,KAAKge,EAAMC,GAAS,CAC1C,IAAInd,EAAQkd,EAAKC,GACjBrc,IAAqB,MAAdqc,EAAO,GAAc,GAAK,KAAOA,EAAS,KAAOnd,GAAsC,MAA5ByjB,OAAOzjB,GAAOiO,OAAO,GAAc,GAAK,KAGlH,OAAOnN,GAcX0oC,GAAG1kB,UAAW,EAUd6kB,GAAU7kB,UAAW,EACrB,IAEI8kB,GAFAC,GAAY,CAAEF,UAAWA,GAAWtF,QAASA,GAAS,GAAMmF,IAGhE,SAASM,GAAQ34B,GACb,OAAO5I,KAAKkE,IAAI,EAAGlE,KAAKiE,IAAI,EAAG2E,IAEnC,SAAS44B,GAAKC,EAAWC,GACrB,IAAIzoC,EAAQooC,GAAeG,KAAKE,EAAI38B,EAAG28B,EAAInpC,EAAGmpC,EAAIjrC,EAAGirC,EAAIp/B,GACzD,GAAIrJ,EAQA,OAPIwoC,EAAUhqC,OACV,aAAakF,KAAK8kC,EAAUhqC,OAC5BwB,EAAMxB,MAAQgqC,EAAUhqC,MAGxBwB,EAAMxB,MAAQ,MAEXwB,EAGf,SAAS6L,GAAM7L,GACX,GAAIA,EAAM6L,MACN,OAAO7L,EAAM6L,QAGb,MAAM,IAAI1I,MAAM,2CAGxB,SAASgJ,GAAMnM,GACX,GAAIA,EAAMmM,MACN,OAAOnM,EAAMmM,QAGb,MAAM,IAAIhJ,MAAM,2CAGxB,SAASulC,GAAO1pC,GACZ,GAAIA,aAAa2iB,GACb,OAAOE,WAAW7iB,EAAE4iB,KAAKhB,GAAG,KAAO5hB,EAAER,MAAQ,IAAMQ,EAAER,OAEpD,GAAiB,kBAANQ,EACZ,OAAOA,EAGP,KAAM,CACFsG,KAAM,WACNoM,QAAS,8CAIrB,SAASi3B,GAAO3pC,EAAG4pC,GACf,OAAI5pC,aAAa2iB,IAAa3iB,EAAE4iB,KAAKhB,GAAG,KAC7BiB,WAAW7iB,EAAER,MAAQoqC,EAAO,KAG5BF,GAAO1pC,GAGtBopC,GAAiB,CACb79B,IAAK,SAAUlM,EAAGkN,EAAGjC,GACjB,IAAID,EAAI,EAKR,GAAIhL,aAAawkB,GAAY,CACzB,IAAIlT,EAAMtR,EAAEG,MAQZ,GAPAH,EAAIsR,EAAI,GACRpE,EAAIoE,EAAI,GACRrG,EAAIqG,EAAI,GAKJrG,aAAamZ,GAAW,CACxB,IAAIrZ,EAAKE,EACTA,EAAIF,EAAGsZ,SAAS,GAChBrZ,EAAID,EAAGsZ,SAAS,IAGxB,IAAI1iB,EAAQooC,GAAeS,KAAKxqC,EAAGkN,EAAGjC,EAAGD,GACzC,GAAIrJ,EAEA,OADAA,EAAMxB,MAAQ,MACPwB,GAGf6oC,KAAM,SAAUxqC,EAAGkN,EAAGjC,EAAGD,GACrB,IACI,GAAIhL,aAAaiM,EAOb,OALIjB,EADAkC,EACIm9B,GAAOn9B,GAGPlN,EAAEuM,MAEH,IAAIN,EAAMjM,EAAEkM,IAAKlB,EAAG,QAE/B,IAAIkB,EAAM,CAAClM,EAAGkN,EAAGjC,GAAGoB,KAAI,SAAU9M,GAAK,OAAO+qC,GAAO/qC,EAAG,QAExD,OADAyL,EAAIq/B,GAAOr/B,GACJ,IAAIiB,EAAMC,EAAKlB,EAAG,QAE7B,MAAOnG,MAEXulC,IAAK,SAAU38B,EAAGxM,EAAG9B,GACjB,IAAI6L,EAAI,EACR,GAAIyC,aAAa+W,GAAY,CACzB,IAAIlT,EAAM7D,EAAEtN,MAIZ,GAHAsN,EAAI6D,EAAI,GACRrQ,EAAIqQ,EAAI,GACRnS,EAAImS,EAAI,GACJnS,aAAailB,GAAW,CACxB,IAAIrZ,EAAK5L,EACTA,EAAI4L,EAAGsZ,SAAS,GAChBrZ,EAAID,EAAGsZ,SAAS,IAGxB,IAAI1iB,EAAQooC,GAAeG,KAAKz8B,EAAGxM,EAAG9B,EAAG6L,GACzC,GAAIrJ,EAEA,OADAA,EAAMxB,MAAQ,MACPwB,GAGfuoC,KAAM,SAAUz8B,EAAGxM,EAAG9B,EAAG6L,GACrB,IACI,GAAIyC,aAAaxB,EAOb,OALIjB,EADA/J,EACIopC,GAAOppC,GAGPwM,EAAElB,MAEH,IAAIN,EAAMwB,EAAEvB,IAAKlB,EAAG,QAE/B,IAAIy/B,EACAC,EACJ,SAASC,EAAIl9B,GAET,OADAA,EAAIA,EAAI,EAAIA,EAAI,EAAKA,EAAI,EAAIA,EAAI,EAAIA,EAC7B,EAAJA,EAAQ,EACDg9B,GAAQC,EAAOD,GAAQh9B,EAAI,EAEzB,EAAJA,EAAQ,EACNi9B,EAEE,EAAJj9B,EAAQ,EACNg9B,GAAQC,EAAOD,IAAS,EAAI,EAAIh9B,GAAK,EAGrCg9B,EAGfh9B,EAAK48B,GAAO58B,GAAK,IAAO,IACxBxM,EAAIgpC,GAAQI,GAAOppC,IACnB9B,EAAI8qC,GAAQI,GAAOlrC,IACnB6L,EAAIi/B,GAAQI,GAAOr/B,IACnB0/B,EAAOvrC,GAAK,GAAMA,GAAK8B,EAAI,GAAK9B,EAAI8B,EAAI9B,EAAI8B,EAC5CwpC,EAAW,EAAJtrC,EAAQurC,EACf,IAAIx+B,EAAM,CACW,IAAjBy+B,EAAIl9B,EAAI,EAAI,GACH,IAATk9B,EAAIl9B,GACa,IAAjBk9B,EAAIl9B,EAAI,EAAI,IAGhB,OADAzC,EAAIq/B,GAAOr/B,GACJ,IAAIiB,EAAMC,EAAKlB,EAAG,QAE7B,MAAOnG,MAEX+lC,IAAK,SAAUn9B,EAAGxM,EAAGyL,GACjB,OAAOq9B,GAAec,KAAKp9B,EAAGxM,EAAGyL,EAAG,IAExCm+B,KAAM,SAAUp9B,EAAGxM,EAAGyL,EAAG1B,GAKrB,IAAI9L,EACAotB,EALJ7e,EAAM48B,GAAO58B,GAAK,IAAO,IAAO,IAChCxM,EAAIopC,GAAOppC,GACXyL,EAAI29B,GAAO39B,GACX1B,EAAIq/B,GAAOr/B,GAGX9L,EAAIwJ,KAAKoiC,MAAOr9B,EAAI,GAAM,GAC1B6e,EAAK7e,EAAI,GAAMvO,EACf,IAAI6rC,EAAK,CAACr+B,EACNA,GAAK,EAAIzL,GACTyL,GAAK,EAAI4f,EAAIrrB,GACbyL,GAAK,GAAK,EAAI4f,GAAKrrB,IACnB+pC,EAAO,CAAC,CAAC,EAAG,EAAG,GACf,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IACX,OAAOjB,GAAeS,KAAsB,IAAjBO,EAAGC,EAAK9rC,GAAG,IAA4B,IAAjB6rC,EAAGC,EAAK9rC,GAAG,IAA4B,IAAjB6rC,EAAGC,EAAK9rC,GAAG,IAAW8L,IAEjG2/B,IAAK,SAAUhpC,GACX,OAAO,IAAI2hB,GAAU9V,GAAM7L,GAAO8L,IAEtCw9B,WAAY,SAAUtpC,GAClB,OAAO,IAAI2hB,GAA2B,IAAjB9V,GAAM7L,GAAOV,EAAS,MAE/CiqC,UAAW,SAAUvpC,GACjB,OAAO,IAAI2hB,GAA2B,IAAjB9V,GAAM7L,GAAOxC,EAAS,MAE/CgsC,OAAQ,SAAUxpC,GACd,OAAO,IAAI2hB,GAAUxV,GAAMnM,GAAO8L,IAEtC29B,cAAe,SAAUzpC,GACrB,OAAO,IAAI2hB,GAA2B,IAAjBxV,GAAMnM,GAAOV,EAAS,MAE/CoqC,SAAU,SAAU1pC,GAChB,OAAO,IAAI2hB,GAA2B,IAAjBxV,GAAMnM,GAAO+K,EAAS,MAE/C4+B,IAAK,SAAU3pC,GACX,OAAO,IAAI2hB,GAAU3hB,EAAMuK,IAAI,KAEnCq/B,MAAO,SAAU5pC,GACb,OAAO,IAAI2hB,GAAU3hB,EAAMuK,IAAI,KAEnCs/B,KAAM,SAAU7pC,GACZ,OAAO,IAAI2hB,GAAU3hB,EAAMuK,IAAI,KAEnCK,MAAO,SAAU5K,GACb,OAAO,IAAI2hB,GAAU9V,GAAM7L,GAAOqJ,IAEtCiC,KAAM,SAAUtL,GACZ,OAAO,IAAI2hB,GAAU3hB,EAAMsL,OAAStL,EAAM4K,MAAQ,IAAK,MAE3Dk/B,UAAW,SAAU9pC,GACjB,IAAI8pC,EAAa,MAAS9pC,EAAMuK,IAAI,GAAK,IACpC,MAASvK,EAAMuK,IAAI,GAAK,IACxB,MAASvK,EAAMuK,IAAI,GAAK,IAC7B,OAAO,IAAIoX,GAAUmoB,EAAY9pC,EAAM4K,MAAQ,IAAK,MAExDm/B,SAAU,SAAU/pC,EAAOgqC,EAAQC,GAG/B,IAAKjqC,EAAMuK,IACP,OAAO,KAEX,IAAIk+B,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAInpC,GAAKmpC,EAAInpC,EAAI0qC,EAAOxrC,MAAQ,IAGhCiqC,EAAInpC,GAAK0qC,EAAOxrC,MAAQ,IAE5BiqC,EAAInpC,EAAIgpC,GAAQG,EAAInpC,GACbipC,GAAKvoC,EAAOyoC,IAEvByB,WAAY,SAAUlqC,EAAOgqC,EAAQC,GACjC,IAAIxB,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAInpC,GAAKmpC,EAAInpC,EAAI0qC,EAAOxrC,MAAQ,IAGhCiqC,EAAInpC,GAAK0qC,EAAOxrC,MAAQ,IAE5BiqC,EAAInpC,EAAIgpC,GAAQG,EAAInpC,GACbipC,GAAKvoC,EAAOyoC,IAEvB0B,QAAS,SAAUnqC,EAAOgqC,EAAQC,GAC9B,IAAIxB,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAIjrC,GAAKirC,EAAIjrC,EAAIwsC,EAAOxrC,MAAQ,IAGhCiqC,EAAIjrC,GAAKwsC,EAAOxrC,MAAQ,IAE5BiqC,EAAIjrC,EAAI8qC,GAAQG,EAAIjrC,GACb+qC,GAAKvoC,EAAOyoC,IAEvB2B,OAAQ,SAAUpqC,EAAOgqC,EAAQC,GAC7B,IAAIxB,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAIjrC,GAAKirC,EAAIjrC,EAAIwsC,EAAOxrC,MAAQ,IAGhCiqC,EAAIjrC,GAAKwsC,EAAOxrC,MAAQ,IAE5BiqC,EAAIjrC,EAAI8qC,GAAQG,EAAIjrC,GACb+qC,GAAKvoC,EAAOyoC,IAEvB4B,OAAQ,SAAUrqC,EAAOgqC,EAAQC,GAC7B,IAAIxB,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAIp/B,GAAKo/B,EAAIp/B,EAAI2gC,EAAOxrC,MAAQ,IAGhCiqC,EAAIp/B,GAAK2gC,EAAOxrC,MAAQ,IAE5BiqC,EAAIp/B,EAAIi/B,GAAQG,EAAIp/B,GACbk/B,GAAKvoC,EAAOyoC,IAEvB6B,QAAS,SAAUtqC,EAAOgqC,EAAQC,GAC9B,IAAIxB,EAAM58B,GAAM7L,GAQhB,MAPsB,qBAAXiqC,GAA2C,aAAjBA,EAAOzrC,MACxCiqC,EAAIp/B,GAAKo/B,EAAIp/B,EAAI2gC,EAAOxrC,MAAQ,IAGhCiqC,EAAIp/B,GAAK2gC,EAAOxrC,MAAQ,IAE5BiqC,EAAIp/B,EAAIi/B,GAAQG,EAAIp/B,GACbk/B,GAAKvoC,EAAOyoC,IAEvB8B,KAAM,SAAUvqC,EAAOgqC,GACnB,IAAIvB,EAAM58B,GAAM7L,GAGhB,OAFAyoC,EAAIp/B,EAAI2gC,EAAOxrC,MAAQ,IACvBiqC,EAAIp/B,EAAIi/B,GAAQG,EAAIp/B,GACbk/B,GAAKvoC,EAAOyoC,IAEvB+B,KAAM,SAAUxqC,EAAOgqC,GACnB,IAAIvB,EAAM58B,GAAM7L,GACZgpC,GAAOP,EAAI38B,EAAIk+B,EAAOxrC,OAAS,IAEnC,OADAiqC,EAAI38B,EAAIk9B,EAAM,EAAI,IAAMA,EAAMA,EACvBT,GAAKvoC,EAAOyoC,IAMvBgC,IAAK,SAAUC,EAAQC,EAAQC,GACtBA,IACDA,EAAS,IAAIjpB,GAAU,KAE3B,IAAItiB,EAAIurC,EAAOpsC,MAAQ,IACnBqsC,EAAQ,EAAJxrC,EAAQ,EACZgK,EAAIwC,GAAM6+B,GAAQrhC,EAAIwC,GAAM8+B,GAAQthC,EACpCyhC,IAAQD,EAAIxhC,IAAM,EAAKwhC,GAAKA,EAAIxhC,IAAM,EAAIwhC,EAAIxhC,IAAM,GAAK,EACzD0hC,EAAK,EAAID,EACTvgC,EAAM,CAACmgC,EAAOngC,IAAI,GAAKugC,EAAKH,EAAOpgC,IAAI,GAAKwgC,EAC5CL,EAAOngC,IAAI,GAAKugC,EAAKH,EAAOpgC,IAAI,GAAKwgC,EACrCL,EAAOngC,IAAI,GAAKugC,EAAKH,EAAOpgC,IAAI,GAAKwgC,GACrCngC,EAAQ8/B,EAAO9/B,MAAQvL,EAAIsrC,EAAO//B,OAAS,EAAIvL,GACnD,OAAO,IAAIiL,EAAMC,EAAKK,IAE1BogC,UAAW,SAAUhrC,GACjB,OAAOooC,GAAe8B,WAAWlqC,EAAO,IAAI2hB,GAAU,OAE1DspB,SAAU,SAAUjrC,EAAOkrC,EAAMC,EAAOC,GAGpC,IAAKprC,EAAMuK,IACP,OAAO,KASX,GAPqB,qBAAV4gC,IACPA,EAAQ/C,GAAeS,KAAK,IAAK,IAAK,IAAK,IAE3B,qBAATqC,IACPA,EAAO9C,GAAeS,KAAK,EAAG,EAAG,EAAG,IAGpCqC,EAAK5/B,OAAS6/B,EAAM7/B,OAAQ,CAC5B,IAAI7M,EAAI0sC,EACRA,EAAQD,EACRA,EAAOzsC,EAQX,OALI2sC,EADqB,qBAAdA,EACK,IAGA1C,GAAO0C,GAEnBprC,EAAMsL,OAAS8/B,EACRD,EAGAD,GAyCfG,KAAM,SAAUrrC,GACZ,OAAO,IAAI2U,EAAU3U,EAAMoM,WAE/BpM,MAAO,SAAUpC,GACb,GAAKA,aAAa+mB,IACb,uDAAuDjhB,KAAK9F,EAAEY,OAAS,CACxE,IAAImR,EAAM/R,EAAEY,MAAMiO,MAAM,GACxB,OAAO,IAAInC,EAAMqF,OAAKnM,EAAW,IAAMmM,GAE3C,GAAK/R,aAAa0M,IAAW1M,EAAI0M,EAAMgC,YAAY1O,EAAEY,QAEjD,OADAZ,EAAEY,WAAQgF,EACH5F,EAEX,KAAM,CACF0H,KAAM,WACNoM,QAAS,oEAGjB45B,KAAM,SAAUtrC,EAAOgqC,GACnB,OAAO5B,GAAeqC,IAAIrC,GAAe79B,IAAI,IAAK,IAAK,KAAMvK,EAAOgqC,IAExEuB,MAAO,SAAUvrC,EAAOgqC,GACpB,OAAO5B,GAAeqC,IAAIrC,GAAe79B,IAAI,EAAG,EAAG,GAAIvK,EAAOgqC,KAGtE,IAAIhqC,GAAQooC,GAIZ,SAASoD,GAAW9sC,EAAMgsC,EAAQC,GAC9B,IAEAc,EAGAC,EACIC,EACAC,EAPAC,EAAKnB,EAAO9/B,MAGZkhC,EAAKnB,EAAO//B,MAKZvM,EAAI,GACRstC,EAAKG,EAAKD,GAAM,EAAIC,GACpB,IAAK,IAAIvuC,EAAI,EAAGA,EAAI,EAAGA,IACnBkuC,EAAKf,EAAOngC,IAAIhN,GAAK,IACrBmuC,EAAKf,EAAOpgC,IAAIhN,GAAK,IACrBquC,EAAKltC,EAAK+sC,EAAIC,GACVC,IACAC,GAAME,EAAKJ,EAAKG,GAAMJ,EAClBK,GAAML,EAAKC,EAAKE,KAAQD,GAEhCttC,EAAEd,GAAU,IAALquC,EAEX,OAAO,IAAIthC,EAAMjM,EAAGstC,GAExB,IAAII,GAA0B,CAC1BC,SAAU,SAAUP,EAAIC,GACpB,OAAOD,EAAKC,GAEhBO,OAAQ,SAAUR,EAAIC,GAClB,OAAOD,EAAKC,EAAKD,EAAKC,GAE1BQ,QAAS,SAAUT,EAAIC,GAEnB,OADAD,GAAM,EACEA,GAAM,EACVM,GAAwBC,SAASP,EAAIC,GACrCK,GAAwBE,OAAOR,EAAK,EAAGC,IAE/CS,UAAW,SAAUV,EAAIC,GACrB,IAAI7tC,EAAI,EACJqF,EAAIuoC,EAMR,OALIC,EAAK,KACLxoC,EAAI,EACJrF,EAAK4tC,EAAK,IAAQ1kC,KAAKqlC,KAAKX,KACpB,GAAKA,EAAK,IAAMA,EAAK,GAAKA,GAE/BA,GAAM,EAAI,EAAIC,GAAMxoC,GAAKrF,EAAI4tC,IAExCY,UAAW,SAAUZ,EAAIC,GACrB,OAAOK,GAAwBG,QAAQR,EAAID,IAE/Ca,WAAY,SAAUb,EAAIC,GACtB,OAAO3kC,KAAKwlC,IAAId,EAAKC,IAEzBc,UAAW,SAAUf,EAAIC,GACrB,OAAOD,EAAKC,EAAK,EAAID,EAAKC,GAG9Be,QAAS,SAAUhB,EAAIC,GACnB,OAAQD,EAAKC,GAAM,GAEvBgB,SAAU,SAAUjB,EAAIC,GACpB,OAAO,EAAI3kC,KAAKwlC,IAAId,EAAKC,EAAK,KAGtC,IAAK,IAAI/gB,MAAKohB,GACNA,GAAwB3sC,eAAeurB,MACvC6gB,GAAW7gB,IAAK6gB,GAAWzsC,KAAK,KAAMgtC,GAAwBphB,MAItE,IAAIgiB,GAAU,SAAWvmC,GACrB,IAAIwmC,EAAW,SAAUC,EAAc/kC,GAAQ,OAAO,IAAI4d,GAAI5d,EAAM+kC,EAAalkC,MAAOkkC,EAAa1/B,iBAAiBjE,KAAK2jC,EAAavkC,UACxI,MAAO,CAAE,WAAY,SAAUwkC,EAAcC,GAChCA,IACDA,EAAeD,EACfA,EAAe,MAEnB,IAAIE,EAAWF,GAAgBA,EAAatuC,MACxCyuC,EAAWF,EAAavuC,MACxB2O,EAAkB1N,KAAK0N,gBACvBhH,EAAmBgH,EAAgB/M,YACnC+M,EAAgBhH,iBAAmBgH,EAAgB+/B,UACnDC,EAAgBF,EAASrhC,QAAQ,KACjCua,EAAW,IACQ,IAAnBgnB,IACAhnB,EAAW8mB,EAASxgC,MAAM0gC,GAC1BF,EAAWA,EAASxgC,MAAM,EAAG0gC,IAEjC,IAAI7kC,EAAU8E,EAAM3N,KAAK6I,SACzBA,EAAQ8kC,WAAY,EACpB,IAAI5mC,EAAcJ,EAAYH,eAAegnC,EAAU9mC,EAAkBmC,EAASlC,GAAa,GAC/F,IAAKI,EACD,OAAOomC,EAASntC,KAAMstC,GAE1B,IAAIM,GAAY,EAEhB,GAAKP,EAeDO,EAAY,WAAW3pC,KAAKspC,OAfb,CAEf,GADAA,EAAW5mC,EAAYknC,WAAWL,GACjB,kBAAbD,EACAK,GAAY,MAEX,CAED,IAAInT,EAAU9zB,EAAYmnC,cAAcP,GACxCK,EAAY,CAAC,WAAY,SAASzhC,QAAQsuB,GAAW,EAErDmT,IACAL,GAAY,WAMpB,IAAIQ,EAAWhnC,EAAYinC,aAAaR,EAAU9mC,EAAkBmC,EAASlC,GAC7E,IAAKonC,EAAS37B,SAEV,OADApN,EAAOI,KAAK,iCAAmCooC,EAAW,2BACnDL,EAASntC,KAAMstC,GAAgBD,GAE1C,IAAIY,EAAMF,EAAS37B,SACnB,GAAIw7B,IAAcjnC,EAAYunC,aAC1B,OAAOf,EAASntC,KAAMstC,GAE1BW,EAAML,EAAYjnC,EAAYunC,aAAaD,GAAOE,mBAAmBF,GACrE,IAAIG,EAAM,QAAUb,EAAW,IAAMU,EAAMvnB,EAC3C,OAAO,IAAIT,GAAI,IAAIf,GAAO,IAAOkpB,EAAM,IAAMA,GAAK,EAAOpuC,KAAKkJ,MAAOlJ,KAAK0N,iBAAkB1N,KAAKkJ,MAAOlJ,KAAK0N,oBAIrH2gC,GAAmB,SAAUhmC,GAG7B,IAAIimC,EAAQhmC,MAAMC,QAAQF,EAAKtJ,OAC3BsJ,EAAKtJ,MAAQuJ,MAAMD,GACvB,OAAOimC,GAEPC,GAAO,CACPC,MAAO,SAAUjvC,GACb,OAAOA,GAEX,IAAK,WAED,IADA,IAAIkvC,EAAO,GACFC,EAAK,EAAGA,EAAK7/B,UAAU/L,OAAQ4rC,IACpCD,EAAKC,GAAM7/B,UAAU6/B,GAEzB,OAAoB,IAAhBD,EAAK3rC,OACE2rC,EAAK,GAET,IAAI35B,EAAM25B,IAErB37B,QAAS,SAAU67B,EAAQzlC,GAGvB,OADAA,EAAQA,EAAMnK,MAAQ,EACfsvC,GAAiBM,GAAQzlC,IAEpCpG,OAAQ,SAAU6rC,GACd,OAAO,IAAIzsB,GAAUmsB,GAAiBM,GAAQ7rC,SAUlD8rC,MAAO,SAAUjO,EAAOG,EAAK+N,GACzB,IAAIC,EACAC,EACAC,EAAY,EACZT,EAAO,GACPzN,GACAiO,EAAKjO,EACLgO,EAAOnO,EAAM5hC,MACT8vC,IACAG,EAAYH,EAAK9vC,SAIrB+vC,EAAO,EACPC,EAAKpO,GAET,IAAK,IAAI7iC,EAAIgxC,EAAMhxC,GAAKixC,EAAGhwC,MAAOjB,GAAKkxC,EACnCT,EAAK7oC,KAAK,IAAIwc,GAAUpkB,EAAGixC,EAAG5sB,OAElC,OAAO,IAAIiB,GAAWmrB,IAE1BU,KAAM,SAAUV,EAAMW,GAClB,IAEIhjB,EACAijB,EAHAn3B,EAAQhY,KACR8Z,EAAQ,GAGRs1B,EAAU,SAAUl/B,GACpB,OAAIA,aAAezI,EACRyI,EAAIzG,KAAKuO,EAAMnP,SAEnBqH,GAWPi/B,GATAZ,EAAKxvC,OAAWwvC,aAAgBrpB,GAQ3BqpB,EAAK7zB,QACC00B,EAAQb,EAAK7zB,SAASZ,MAE5By0B,EAAKz0B,MACCy0B,EAAKz0B,MAAM7O,IAAImkC,GAErB9mC,MAAMC,QAAQgmC,GACRA,EAAKtjC,IAAImkC,GAGT,CAACA,EAAQb,IAjBhBjmC,MAAMC,QAAQgmC,EAAKxvC,OACRwvC,EAAKxvC,MAAMkM,IAAImkC,GAGf,CAACA,EAAQb,EAAKxvC,QAejC,IAAIswC,EAAY,SACZC,EAAU,OACVC,EAAY,SACZL,EAAGvlB,QACH0lB,EAAYH,EAAGvlB,OAAO,IAAMulB,EAAGvlB,OAAO,GAAGtrB,KACzCixC,EAAUJ,EAAGvlB,OAAO,IAAMulB,EAAGvlB,OAAO,GAAGtrB,KACvCkxC,EAAYL,EAAGvlB,OAAO,IAAMulB,EAAGvlB,OAAO,GAAGtrB,KACzC6wC,EAAKA,EAAGp1B,OAGRo1B,EAAKA,EAAGx0B,QAEZ,IAAK,IAAI5c,EAAI,EAAGA,EAAIqxC,EAASrsC,OAAQhF,IAAK,CACtC,IAAIuB,OAAM,EACNN,OAAQ,EACRglB,EAAOorB,EAASrxC,GAChBimB,aAAgBtO,GAChBpW,EAA2B,kBAAd0kB,EAAK1lB,KAAoB0lB,EAAK1lB,KAAO0lB,EAAK1lB,KAAK,GAAGU,MAC/DA,EAAQglB,EAAKhlB,QAGbM,EAAM,IAAI6iB,GAAUpkB,EAAI,GACxBiB,EAAQglB,GAERA,aAAgBlN,IAGpBqV,EAAWgjB,EAAGp1B,MAAM9M,MAAM,GACtBqiC,GACAnjB,EAASxmB,KAAK,IAAI+P,EAAY45B,EAAWtwC,GAAO,GAAO,EAAOiB,KAAKkJ,MAAOlJ,KAAK0N,kBAE/E6hC,GACArjB,EAASxmB,KAAK,IAAI+P,EAAY85B,EAAW,IAAIrtB,GAAUpkB,EAAI,IAAI,GAAO,EAAOkC,KAAKkJ,MAAOlJ,KAAK0N,kBAE9F4hC,GACApjB,EAASxmB,KAAK,IAAI+P,EAAY65B,EAASjwC,GAAK,GAAO,EAAOW,KAAKkJ,MAAOlJ,KAAK0N,kBAE/EoM,EAAMpU,KAAK,IAAIkU,GAAQ,CAAC,IAAI,EAAW,CAAC,IAAIrM,EAAQ,GAAI,QAAS2e,EAAUgjB,EAAG1uC,cAAe0uC,EAAGvkC,oBAEpG,OAAO,IAAIiP,GAAQ,CAAC,IAAI,EAAW,CAAC,IAAIrM,EAAQ,GAAI,QAASuM,EAAOo1B,EAAG1uC,cAAe0uC,EAAGvkC,kBAAkBlB,KAAKzJ,KAAK6I,WAIzH2mC,GAAa,SAAUC,EAAIttB,EAAM5iB,GACjC,KAAMA,aAAa2iB,IACf,KAAM,CAAErc,KAAM,WAAYoM,QAAS,6BAQvC,OANY,MAARkQ,EACAA,EAAO5iB,EAAE4iB,KAGT5iB,EAAIA,EAAEmjB,QAEH,IAAIR,GAAUutB,EAAGrtB,WAAW7iB,EAAER,QAASojB,IAG9CutB,GAAgB,CAEhBC,KAAM,KACNjG,MAAO,KACPiD,KAAM,KACNG,IAAK,KACL8C,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,KAAM,MACNC,KAAM,MACNC,KAAM,OAEV,IAAK,IAAIC,MAAOR,GACRA,GAAc/vC,eAAeuwC,MAC7BR,GAAcQ,IAAOV,GAAWlwC,KAAK,KAAMgI,KAAK4oC,IAAMR,GAAcQ,MAG5ER,GAAchkC,MAAQ,SAAUnM,EAAG2rB,GAC/B,IAAIilB,EAAwB,qBAANjlB,EAAoB,EAAIA,EAAEnsB,MAChD,OAAOywC,IAAW,SAAUY,GAAO,OAAOA,EAAIlmC,QAAQimC,KAAc,KAAM5wC,IAG9E,IAAI8wC,GAAS,SAAUC,EAAOpkC,GAE1B,OADAA,EAAO5D,MAAM5I,UAAUsN,MAAM/O,KAAKiO,GAC1BA,EAAKpJ,QACT,KAAK,EAAG,KAAM,CAAE+C,KAAM,WAAYoM,QAAS,kCAE/C,IAAInU,EACAiR,EACAguB,EACAwT,EACAC,EACAruB,EACAsuB,EACAC,EAEJC,EAAQ,GACJhC,EAAS,GAEb,IAAK7wC,EAAI,EAAGA,EAAIoO,EAAKpJ,OAAQhF,IAEzB,GADAi/B,EAAU7wB,EAAKpO,GACTi/B,aAAmB7a,GAWzB,GALAquB,EAA6C,KAA5BxT,EAAQ5a,KAAKxW,iBAAmC5H,IAAd2sC,EAA0B,IAAIxuB,GAAU6a,EAAQh+B,MAAO2xC,GAAWhuB,QAAUqa,EAAQra,QACvIP,EAA0C,KAAnCouB,EAAepuB,KAAKxW,iBAAoC5H,IAAf0sC,EAA2BA,EAAaF,EAAepuB,KAAKxW,WAC5G8kC,EAAsB,KAATtuB,QAA8Bpe,IAAf0sC,GAAqC,KAATtuB,GAAoD,KAArCwuB,EAAM,GAAGjuB,QAAQP,KAAKxW,WAAoBwW,EAAOsuB,EACxHC,EAAqB,KAATvuB,QAA6Bpe,IAAd2sC,EAA0B3T,EAAQ5a,KAAKxW,WAAa+kC,EAC/E3hC,OAAmBhL,IAAf4qC,EAAO,KAA8B,KAATxsB,GAAeA,IAASsuB,EAAa9B,EAAO,IAAMA,EAAOxsB,QAC/Epe,IAANgL,EAQJyhC,EAAgD,KAA7BG,EAAM5hC,GAAGoT,KAAKxW,iBAAmC5H,IAAd2sC,EAA0B,IAAIxuB,GAAUyuB,EAAM5hC,GAAGhQ,MAAO2xC,GAAWhuB,QAAUiuB,EAAM5hC,GAAG2T,SACxI4tB,GAASC,EAAexxC,MAAQyxC,EAAiBzxC,QAChDuxC,GAASC,EAAexxC,MAAQyxC,EAAiBzxC,SAClD4xC,EAAM5hC,GAAKguB,OAXf,CACI,QAAmBh5B,IAAf0sC,GAA4BtuB,IAASsuB,EACrC,KAAM,CAAE5qC,KAAM,WAAYoM,QAAS,sBAEvC08B,EAAOxsB,GAAQwuB,EAAM7tC,OACrB6tC,EAAMjrC,KAAKq3B,QAfPz0B,MAAMC,QAAQ2D,EAAKpO,GAAGiB,QACtBuJ,MAAM5I,UAAUgG,KAAK8V,MAAMtP,EAAM5D,MAAM5I,UAAUsN,MAAM/O,KAAKiO,EAAKpO,GAAGiB,QAuBhF,OAAoB,GAAhB4xC,EAAM7tC,OACC6tC,EAAM,IAEjBzkC,EAAOykC,EAAM1lC,KAAI,SAAUrB,GAAK,OAAOA,EAAEhB,MAAM5I,KAAK6I,YAAaO,KAAKpJ,KAAK6I,QAAQzI,SAAW,IAAM,MAC7F,IAAI8U,GAAWo7B,EAAQ,MAAQ,OAAS,IAAMpkC,EAAO,OAE5D0kC,GAAW,CACXplC,IAAK,WAED,IADA,IAAIU,EAAO,GACFwiC,EAAK,EAAGA,EAAK7/B,UAAU/L,OAAQ4rC,IACpCxiC,EAAKwiC,GAAM7/B,UAAU6/B,GAEzB,IACI,OAAO2B,IAAO,EAAMnkC,GAExB,MAAOzI,MAEX8H,IAAK,WAED,IADA,IAAIW,EAAO,GACFwiC,EAAK,EAAGA,EAAK7/B,UAAU/L,OAAQ4rC,IACpCxiC,EAAKwiC,GAAM7/B,UAAU6/B,GAEzB,IACI,OAAO2B,IAAO,EAAOnkC,GAEzB,MAAOzI,MAEXotC,QAAS,SAAU3gC,EAAKiS,GACpB,OAAOjS,EAAIuS,UAAUN,EAAKpjB,QAE9B+xC,GAAI,WACA,OAAO,IAAI5uB,GAAU5a,KAAKC,KAE9BwpC,IAAK,SAAUnnC,EAAGC,GACd,OAAO,IAAIqY,GAAUtY,EAAE7K,MAAQ8K,EAAE9K,MAAO6K,EAAEuY,OAE9CpW,IAAK,SAAUa,EAAGokC,GACd,GAAiB,kBAANpkC,GAA+B,kBAANokC,EAChCpkC,EAAI,IAAIsV,GAAUtV,GAClBokC,EAAI,IAAI9uB,GAAU8uB,QAEjB,KAAMpkC,aAAasV,OAAgB8uB,aAAa9uB,IACjD,KAAM,CAAErc,KAAM,WAAYoM,QAAS,6BAEvC,OAAO,IAAIiQ,GAAU5a,KAAKyE,IAAIa,EAAE7N,MAAOiyC,EAAEjyC,OAAQ6N,EAAEuV,OAEvD8uB,WAAY,SAAU1xC,GAClB,IAAIiS,EAASg+B,IAAW,SAAUY,GAAO,OAAa,IAANA,IAAc,IAAK7wC,GACnE,OAAOiS,IAIXyW,GAAS,CACTxkB,EAAG,SAAUwP,GACT,OAAO,IAAIiS,GAAO,IAAKjS,aAAe+U,GAAa/U,EAAIi+B,UAAYj+B,EAAIlU,OAAO,IAElFulC,OAAQ,SAAUrxB,GACd,OAAO,IAAIiC,EAAUi8B,UAAUl+B,EAAIlU,OAAOoC,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAClHA,QAAQ,MAAO,OAAOA,QAAQ,MAAO,SAE9CA,QAAS,SAAU8mB,EAAQmpB,EAAShlB,EAAailB,GAC7C,IAAI7/B,EAASyW,EAAOlpB,MAIpB,OAHAqtB,EAAoC,WAArBA,EAAYvmB,KACvBumB,EAAYrtB,MAAQqtB,EAAYxjB,QACpC4I,EAASA,EAAOrQ,QAAQ,IAAIogB,OAAO6vB,EAAQryC,MAAOsyC,EAAQA,EAAMtyC,MAAQ,IAAKqtB,GACtE,IAAIlH,GAAO+C,EAAO5C,OAAS,GAAI7T,EAAQyW,EAAO7C,UAEzD,IAAK,SAAU6C,GAWX,IAVA,IAAI/b,EAAO5D,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,GAC7C2C,EAASyW,EAAOlpB,MAChBuyC,EAAU,SAAUxzC,GAEpB0T,EAASA,EAAOrQ,QAAQ,WAAW,SAAUowC,GACzC,IAAIxyC,EAA2B,WAAjBmN,EAAKpO,GAAG+H,MAClB0rC,EAAMvmC,MAAM,MAASkB,EAAKpO,GAAGiB,MAAQmN,EAAKpO,GAAG8K,QACjD,OAAO2oC,EAAMvmC,MAAM,UAAYmjC,mBAAmBpvC,GAASA,MAG1DjB,EAAI,EAAGA,EAAIoO,EAAKpJ,OAAQhF,IAC7BwzC,EAAQxzC,GAGZ,OADA0T,EAASA,EAAOrQ,QAAQ,MAAO,KACxB,IAAI+jB,GAAO+C,EAAO5C,OAAS,GAAI7T,EAAQyW,EAAO7C,WAIzDosB,GAAM,SAAW7qC,GACjB,MAAO,CAAE,eAAgB,SAAU8qC,GAC3B,IAAIC,EACAC,EAIA/jB,EAEA9vB,EACAyC,EACAqxC,EACAC,EACA1mC,EATA2mC,EAAe,SACfC,EAAqB,mCACrBC,EAAY,CAAE5xC,UAAU,GAExB6xC,EAAiBR,EAAU7oC,MAAMopC,GAMrC,SAASE,IACL,KAAM,CAAErsC,KAAM,WACVoM,QAAS,yIAejB,OAZwB,GAApBpD,UAAU/L,QACN+L,UAAU,GAAG9P,MAAM+D,OAAS,GAC5BovC,IAEJR,EAAQ7iC,UAAU,GAAG9P,OAEhB8P,UAAU/L,OAAS,EACxBovC,IAGAR,EAAQppC,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,GAE1CojC,GACJ,IAAK,YACDN,EAAuB,oCACvB,MACJ,IAAK,WACDA,EAAuB,oCACvB,MACJ,IAAK,kBACDA,EAAuB,sCACvB,MACJ,IAAK,eACDA,EAAuB,sCACvB,MACJ,IAAK,UACL,IAAK,oBACDG,EAAe,SACfH,EAAuB,4BACvBI,EAAqB,2CACrB,MACJ,QACI,KAAM,CAAElsC,KAAM,WAAYoM,QAAS,oHAI3C,IADA2b,EAAW,8DAAoEkkB,EAAe,mBAAuBH,EAAuB,IACvI7zC,EAAI,EAAGA,EAAI4zC,EAAM5uC,OAAQhF,GAAK,EAC3B4zC,EAAM5zC,aAAcslB,IACpB7iB,EAAQmxC,EAAM5zC,GAAGiB,MAAM,GACvB6yC,EAAWF,EAAM5zC,GAAGiB,MAAM,KAG1BwB,EAAQmxC,EAAM5zC,GACd8zC,OAAW7tC,GAETxD,aAAiBsK,KAAoB,IAAN/M,GAAWA,EAAI,IAAM4zC,EAAM5uC,cAAwBiB,IAAb6tC,GAA6BA,aAAoB1vB,KACxHgwB,IAEJL,EAAgBD,EAAWA,EAAShpC,MAAMopC,GAAmB,IAANl0C,EAAU,KAAO,OACxEqN,EAAQ5K,EAAM4K,MACdyiB,GAAY,iBAAoBikB,EAAgB,iBAAqBtxC,EAAM+L,QAAU,KAAQnB,EAAQ,EAAI,kBAAqBA,EAAQ,IAAO,IAAM,KAKvJ,OAHAyiB,GAAY,KAAOkkB,EAAe,kBAAoBC,EAAqB,2BAC3EnkB,EAAWugB,mBAAmBvgB,GAC9BA,EAAW,sBAAwBA,EAC5B,IAAI3H,GAAI,IAAIf,GAAO,IAAM0I,EAAW,IAAKA,GAAU,EAAO5tB,KAAKkJ,MAAOlJ,KAAK0N,iBAAkB1N,KAAKkJ,MAAOlJ,KAAK0N,oBAI7HykC,GAAM,SAAU5yC,EAAG6yC,GAAQ,OAAQ7yC,aAAa6yC,EAAQr9B,EAAQC,KAAOD,EAAQE,OAC/Eo9B,GAAS,SAAU9yC,EAAG4iB,GACtB,QAAape,IAAToe,EACA,KAAM,CAAEtc,KAAM,WAAYoM,QAAS,mDAGvC,GADAkQ,EAA6B,kBAAfA,EAAKpjB,MAAqBojB,EAAKpjB,MAAQojB,EACjC,kBAATA,EACP,KAAM,CAAEtc,KAAM,WAAYoM,QAAS,2DAEvC,OAAQ1S,aAAa2iB,IAAc3iB,EAAE4iB,KAAKhB,GAAGgB,GAAQpN,EAAQC,KAAOD,EAAQE,OAE5Eq9B,GAAQ,CACRC,UAAW,SAAUhzC,GACjB,OAAO4yC,GAAI5yC,EAAGohB,KAElB6xB,QAAS,SAAUjzC,GACf,OAAO4yC,GAAI5yC,EAAGsL,IAElB4nC,SAAU,SAAUlzC,GAChB,OAAO4yC,GAAI5yC,EAAG2iB,KAElBwwB,SAAU,SAAUnzC,GAChB,OAAO4yC,GAAI5yC,EAAG2lB,KAElBytB,UAAW,SAAUpzC,GACjB,OAAO4yC,GAAI5yC,EAAGwV,IAElB69B,MAAO,SAAUrzC,GACb,OAAO4yC,GAAI5yC,EAAG0mB,KAElB4sB,QAAS,SAAUtzC,GACf,OAAO8yC,GAAO9yC,EAAG,OAErBuzC,aAAc,SAAUvzC,GACpB,OAAO8yC,GAAO9yC,EAAG,MAErBwzC,KAAM,SAAUxzC,GACZ,OAAO8yC,GAAO9yC,EAAG,OAErB8yC,OAAQA,GACRlwB,KAAM,SAAUjS,EAAKiS,GACjB,KAAMjS,aAAegS,IACjB,KAAM,CAAErc,KAAM,WAAYoM,QAAS,+CAAiD/B,aAAe8S,GAAY,oCAAsC,KAazJ,OATQb,EAFJA,EACIA,aAAgBpN,EACToN,EAAKpjB,MAGLojB,EAAKvZ,QAIT,GAEJ,IAAIsZ,GAAUhS,EAAInR,MAAOojB,IAEpC,WAAY,SAAU5iB,GAClB,OAAO,IAAI2V,EAAU3V,EAAE4iB,QAI3B/b,GAAY,SAAWO,GACvB,IAAIP,EAAY,CAAEmT,iBAAkBA,EAAkBoK,eAAgBA,IAatE,OAXApK,EAAiBxB,YAAY6wB,IAC7BrvB,EAAiBvQ,IAAI,UAAWwQ,GAAY/P,KAAKnK,KAAKka,KACtDD,EAAiBxB,YAAYxX,IAC7BgZ,EAAiBxB,YAAYg0B,IAC7BxyB,EAAiBxB,YAAYm1B,GAAQvmC,IACrC4S,EAAiBxB,YAAYw2B,IAC7Bh1B,EAAiBxB,YAAY23B,IAC7Bn2B,EAAiBxB,YAAY64B,IAC7Br3B,EAAiBxB,YAAYkQ,IAC7B1O,EAAiBxB,YAAYy5B,MAC7Bj4B,EAAiBxB,YAAYu6B,IACtBlsC,GAGX,SAAS4sC,GAAep4B,EAAMvZ,GAE1B,IAAI4xC,EADJ5xC,EAAUA,GAAW,GAErB,IAAI2a,EAAY3a,EAAQ2a,UACpBk3B,EAAU,IAAIj8B,EAASmB,KAAK/W,GAcP,kBAAd2a,GAA2B1T,MAAMC,QAAQyT,KAChDA,EAAYxd,OAAOyZ,KAAK+D,GAAW/Q,KAAI,SAAU6D,GAC7C,IAAI/P,EAAQid,EAAUlN,GAOtB,OANM/P,aAAiBstB,GAAKvX,QAClB/V,aAAiBstB,GAAKjJ,aACxBrkB,EAAQ,IAAIstB,GAAKjJ,WAAW,CAACrkB,KAEjCA,EAAQ,IAAIstB,GAAKvX,MAAM,CAAC/V,KAErB,IAAIstB,GAAK5W,YAAY,IAAM3G,EAAG/P,GAAO,EAAO,KAAM,MAE7Dm0C,EAAQ76B,OAAS,CAAC,IAAIgU,GAAKzS,QAAQ,KAAMoC,KAE7C,IAOI1Q,EACA6nC,EARAC,EAAa,CACb,IAAIvuB,GAASmU,oBACb,IAAInU,GAAS2W,6BAA4B,GACzC,IAAI3W,GAAS4W,cACb,IAAI5W,GAASC,aAAa,CAAE1kB,SAAUkV,QAAQjU,EAAQjB,aAEtDizC,EAAkB,GAQtB,GAAIhyC,EAAQwF,cAAe,CACvBssC,EAAkB9xC,EAAQwF,cAAc0C,UACxC,IAAK,IAAIzL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxBq1C,EAAgBG,QAChB,MAAQhoC,EAAI6nC,EAAgBx0C,MACpB2M,EAAEioC,iBACQ,IAANz1C,IAA2C,IAAhCu1C,EAAgBlnC,QAAQb,KACnC+nC,EAAgB3tC,KAAK4F,GACrBA,EAAEonB,IAAI9X,IAIA,IAAN9c,IAAsC,IAA3Bs1C,EAAWjnC,QAAQb,KAC1BA,EAAEkoC,aACFJ,EAAWp4B,QAAQ1P,GAGnB8nC,EAAW1tC,KAAK4F,KAOxC2nC,EAAYr4B,EAAKnR,KAAKypC,GACtB,IAASp1C,EAAI,EAAGA,EAAIs1C,EAAWtwC,OAAQhF,IACnCs1C,EAAWt1C,GAAG40B,IAAIugB,GAGtB,GAAI5xC,EAAQwF,cAAe,CACvBssC,EAAgBG,QAChB,MAAQhoC,EAAI6nC,EAAgBx0C,OACO,IAA3By0C,EAAWjnC,QAAQb,KAA6C,IAAhC+nC,EAAgBlnC,QAAQb,IACxDA,EAAEonB,IAAIugB,GAIlB,OAAOA,EAMX,IA8IIQ,GA9IAC,GAA+B,WAC/B,SAASA,EAAc9uB,GACnB5kB,KAAK4kB,KAAOA,EACZ5kB,KAAK6kB,SAAW,GAChB7kB,KAAK+hC,cAAgB,GACrB/hC,KAAK2zC,eAAiB,GACtB3zC,KAAK4zC,iBAAmB,GACxB5zC,KAAKiG,aAAe,GACpBjG,KAAKmvC,UAAY,EACjBnvC,KAAK6zC,YAAc,GACnB7zC,KAAK8zC,OAAS,IAAIlvB,EAAKmvB,aAAanvB,GAkIxC,OA5HA8uB,EAAch0C,UAAUs0C,WAAa,SAAUxkB,GAC3C,GAAIA,EACA,IAAK,IAAI1xB,EAAI,EAAGA,EAAI0xB,EAAQ1sB,OAAQhF,IAChCkC,KAAK+uB,UAAUS,EAAQ1xB,KASnC41C,EAAch0C,UAAUqvB,UAAY,SAAUC,EAAQvoB,EAAU8S,GAC5DvZ,KAAK4zC,iBAAiBluC,KAAKspB,GACvBvoB,IACAzG,KAAK6zC,YAAYptC,GAAYuoB,GAE7BA,EAAOilB,SACPjlB,EAAOilB,QAAQj0C,KAAK4kB,KAAM5kB,KAAMuZ,GAAoBvZ,KAAK4kB,KAAKxe,UAAUmT,mBAOhFm6B,EAAch0C,UAAUf,IAAM,SAAU8H,GACpC,OAAOzG,KAAK6zC,YAAYptC,IAO5BitC,EAAch0C,UAAUw0C,WAAa,SAAU3qC,GAC3CvJ,KAAK6kB,SAASnf,KAAK6D,IAOvBmqC,EAAch0C,UAAUy0C,gBAAkB,SAAUC,EAAcC,GAC9D,IAAIC,EACJ,IAAKA,EAAkB,EAAGA,EAAkBt0C,KAAK+hC,cAAcj/B,OAAQwxC,IACnE,GAAIt0C,KAAK+hC,cAAcuS,GAAiBD,UAAYA,EAChD,MAGRr0C,KAAK+hC,cAAcn8B,OAAO0uC,EAAiB,EAAG,CAAEF,aAAcA,EAAcC,SAAUA,KAO1FX,EAAch0C,UAAU60C,iBAAmB,SAAUC,EAAeH,GAChE,IAAIC,EACJ,IAAKA,EAAkB,EAAGA,EAAkBt0C,KAAK2zC,eAAe7wC,OAAQwxC,IACpE,GAAIt0C,KAAK2zC,eAAeW,GAAiBD,UAAYA,EACjD,MAGRr0C,KAAK2zC,eAAe/tC,OAAO0uC,EAAiB,EAAG,CAAEE,cAAeA,EAAeH,SAAUA,KAM7FX,EAAch0C,UAAUsH,eAAiB,SAAUytC,GAC/Cz0C,KAAKiG,aAAaP,KAAK+uC,IAO3Bf,EAAch0C,UAAUsiC,iBAAmB,WAEvC,IADA,IAAID,EAAgB,GACXjkC,EAAI,EAAGA,EAAIkC,KAAK+hC,cAAcj/B,OAAQhF,IAC3CikC,EAAcr8B,KAAK1F,KAAK+hC,cAAcjkC,GAAGs2C,cAE7C,OAAOrS,GAOX2R,EAAch0C,UAAUg1C,kBAAoB,WAExC,IADA,IAAIf,EAAiB,GACZ71C,EAAI,EAAGA,EAAIkC,KAAK2zC,eAAe7wC,OAAQhF,IAC5C61C,EAAejuC,KAAK1F,KAAK2zC,eAAe71C,GAAG02C,eAE/C,OAAOb,GAOXD,EAAch0C,UAAUi1C,YAAc,WAClC,OAAO30C,KAAK6kB,UAEhB6uB,EAAch0C,UAAU6J,QAAU,WAC9B,IAAIxB,EAAO/H,KACX,MAAO,CACHszC,MAAO,WAEH,OADAvrC,EAAKonC,UAAY,EACVpnC,EAAK8c,SAAS9c,EAAKonC,WAE9BxwC,IAAK,WAED,OADAoJ,EAAKonC,UAAY,EACVpnC,EAAK8c,SAAS9c,EAAKonC,aAStCuE,EAAch0C,UAAUoH,gBAAkB,WACtC,OAAO9G,KAAKiG,cAETytC,EA5IuB,GA+I9BkB,GAAuB,SAAUhwB,EAAMiwB,GAIvC,OAHIA,GAAepB,KACfA,GAAK,IAAIC,GAAc9uB,IAEpB6uB,IAGX,SAASqB,GAAiBnuC,GACtB,IAAImuC,EAAiC,WACjC,SAASA,EAAgBzzC,GACrBrB,KAAK+0C,KAAO,GACZ/0C,KAAKg1C,UAAY3zC,EAAQwG,SACzB7H,KAAKi1C,aAAe5zC,EAAQ6zC,YAC5Bl1C,KAAKm1C,yBAA2B9zC,EAAQ+zC,wBACpC/zC,EAAQg0C,oBACRr1C,KAAKs1C,mBAAqBj0C,EAAQg0C,kBAAkBl0C,QAAQ,MAAO,MAEvEnB,KAAKu1C,gBAAkBl0C,EAAQm0C,eAC/Bx1C,KAAKy1C,aAAep0C,EAAQo0C,aACxBp0C,EAAQq0C,oBACR11C,KAAK21C,mBAAqBt0C,EAAQq0C,kBAAkBv0C,QAAQ,MAAO,MAEnEE,EAAQu0C,mBACR51C,KAAK61C,mBAAqBx0C,EAAQu0C,kBAAkBz0C,QAAQ,MAAO,KACQ,MAAvEnB,KAAK61C,mBAAmBhoC,OAAO7N,KAAK61C,mBAAmB/yC,OAAS,KAChE9C,KAAK61C,oBAAsB,MAI/B71C,KAAK61C,mBAAqB,GAE9B71C,KAAK81C,mBAAqBz0C,EAAQ00C,kBAClC/1C,KAAKg2C,+BAAiCrvC,EAAYsvC,wBAClDj2C,KAAKk2C,YAAc,EACnBl2C,KAAKm2C,QAAU,EAsGnB,OApGArB,EAAgBp1C,UAAU02C,eAAiB,SAAU1+B,GAOjD,OANI1X,KAAK21C,oBAAgE,IAA1Cj+B,EAAKvL,QAAQnM,KAAK21C,sBAC7Cj+B,EAAOA,EAAK+R,UAAUzpB,KAAK21C,mBAAmB7yC,QACvB,OAAnB4U,EAAK7J,OAAO,IAAkC,MAAnB6J,EAAK7J,OAAO,KACvC6J,EAAOA,EAAK+R,UAAU,KAGvB/R,GAEXo9B,EAAgBp1C,UAAU22C,kBAAoB,SAAU5vC,GAGpD,OAFAA,EAAWA,EAAStF,QAAQ,MAAO,KACnCsF,EAAWzG,KAAKo2C,eAAe3vC,IACvBzG,KAAK61C,oBAAsB,IAAMpvC,GAE7CquC,EAAgBp1C,UAAUsJ,IAAM,SAAUC,EAAOjB,EAAUkB,EAAOiM,GAE9D,GAAKlM,EAAL,CAGA,IAAIuJ,EAAO8jC,EAAaC,EAASC,EAAe14C,EAChD,GAAIkK,GAAYA,EAASvB,SAAU,CAC/B,IAAIgwC,EAAcz2C,KAAKi1C,aAAajtC,EAASvB,UAe7C,GAbIzG,KAAKm1C,yBAAyBntC,EAASvB,YAEvCyC,GAASlJ,KAAKm1C,yBAAyBntC,EAASvB,UAC5CyC,EAAQ,IACRA,EAAQ,GAGZutC,EAAcA,EAAYzpC,MAAMhN,KAAKm1C,yBAAyBntC,EAASvB,iBAMvD1C,IAAhB0yC,EAEA,YADAz2C,KAAK+0C,KAAKrvC,KAAKuD,GAGnBwtC,EAAcA,EAAYhtB,UAAU,EAAGvgB,GACvCotC,EAAcG,EAAYrrC,MAAM,MAChCorC,EAAgBF,EAAYA,EAAYxzC,OAAS,GAIrD,GAFA0P,EAAQvJ,EAAMmC,MAAM,MACpBmrC,EAAU/jC,EAAMA,EAAM1P,OAAS,GAC3BkF,GAAYA,EAASvB,SACrB,GAAK0O,EAMD,IAAKrX,EAAI,EAAGA,EAAI0U,EAAM1P,OAAQhF,IAC1BkC,KAAK02C,oBAAoBC,WAAW,CAAEC,UAAW,CAAEtmC,KAAMtQ,KAAKk2C,YAAcp4C,EAAI,EAAGyS,OAAc,IAANzS,EAAUkC,KAAKm2C,QAAU,GAChHh/B,SAAU,CAAE7G,KAAMgmC,EAAYxzC,OAAShF,EAAGyS,OAAc,IAANzS,EAAU04C,EAAc1zC,OAAS,GACnF+zC,OAAQ72C,KAAKq2C,kBAAkBruC,EAASvB,iBARhDzG,KAAK02C,oBAAoBC,WAAW,CAAEC,UAAW,CAAEtmC,KAAMtQ,KAAKk2C,YAAc,EAAG3lC,OAAQvQ,KAAKm2C,SACxFh/B,SAAU,CAAE7G,KAAMgmC,EAAYxzC,OAAQyN,OAAQimC,EAAc1zC,QAC5D+zC,OAAQ72C,KAAKq2C,kBAAkBruC,EAASvB,YAU/B,IAAjB+L,EAAM1P,OACN9C,KAAKm2C,SAAWI,EAAQzzC,QAGxB9C,KAAKk2C,aAAe1jC,EAAM1P,OAAS,EACnC9C,KAAKm2C,QAAUI,EAAQzzC,QAE3B9C,KAAK+0C,KAAKrvC,KAAKuD,KAEnB6rC,EAAgBp1C,UAAUyJ,QAAU,WAChC,OAA4B,IAArBnJ,KAAK+0C,KAAKjyC,QAErBgyC,EAAgBp1C,UAAUkJ,MAAQ,SAAUC,GAExC,GADA7I,KAAK02C,oBAAsB,IAAI12C,KAAKg2C,+BAA+B,CAAEc,KAAM92C,KAAKu1C,gBAAiBwB,WAAY,OACzG/2C,KAAK81C,mBACL,IAAK,IAAIrvC,KAAYzG,KAAKi1C,aACtB,GAAIj1C,KAAKi1C,aAAat1C,eAAe8G,GAAW,CAC5C,IAAIowC,EAAS72C,KAAKi1C,aAAaxuC,GAC3BzG,KAAKm1C,yBAAyB1uC,KAC9BowC,EAASA,EAAO7pC,MAAMhN,KAAKm1C,yBAAyB1uC,KAExDzG,KAAK02C,oBAAoBM,iBAAiBh3C,KAAKq2C,kBAAkB5vC,GAAWowC,GAKxF,GADA72C,KAAKg1C,UAAUjsC,OAAOF,EAAS7I,MAC3BA,KAAK+0C,KAAKjyC,OAAS,EAAG,CACtB,IAAI2yC,OAAe,EACfwB,EAAmBx1C,KAAKy1C,UAAUl3C,KAAK02C,oBAAoBS,UAC3Dn3C,KAAKy1C,aACLA,EAAez1C,KAAKy1C,aAEfz1C,KAAKs1C,qBACVG,EAAez1C,KAAKs1C,oBAExBt1C,KAAKy1C,aAAeA,EACpBz1C,KAAKo3C,UAAYH,EAErB,OAAOj3C,KAAK+0C,KAAK3rC,KAAK,KAEnB0rC,EAhIyB,GAkIpC,OAAOA,EAGX,SAASuC,GAAkBvC,EAAiBnuC,GACxC,IAAI0wC,EAAkC,WAClC,SAASA,EAAiBh2C,GACtBrB,KAAKqB,QAAUA,EA8DnB,OA5DAg2C,EAAiB33C,UAAUkJ,MAAQ,SAAUf,EAAUxG,EAAS6S,GAC5D,IAAIojC,EAAkB,IAAIxC,EAAgB,CACtCM,wBAAyBlhC,EAAQiuB,qBACjCt6B,SAAUA,EACVqtC,YAAahhC,EAAQ9B,SACrBijC,kBAAmBr1C,KAAKqB,QAAQg0C,kBAChCI,aAAcz1C,KAAKqB,QAAQo0C,aAC3BD,eAAgBx1C,KAAKqB,QAAQk2C,wBAC7B7B,kBAAmB11C,KAAKqB,QAAQq0C,kBAChCE,kBAAmB51C,KAAKqB,QAAQu0C,kBAChCG,kBAAmB/1C,KAAKqB,QAAQ00C,kBAChCyB,mBAAoBx3C,KAAKqB,QAAQm2C,mBACjCC,oBAAqBz3C,KAAKqB,QAAQo2C,oBAClCC,2BAA4B13C,KAAKqB,QAAQq2C,6BAEzC7wB,EAAMywB,EAAgB1uC,MAAMvH,GAShC,OARArB,KAAKo3C,UAAYE,EAAgBF,UACjCp3C,KAAKy1C,aAAe6B,EAAgB7B,aAChCz1C,KAAKqB,QAAQs2C,yBACb33C,KAAK23C,uBAAyBL,EAAgBjB,kBAAkBr2C,KAAKqB,QAAQs2C,8BAE1C5zC,IAAnC/D,KAAKqB,QAAQq0C,wBAAyD3xC,IAAtB/D,KAAKy1C,eACrDz1C,KAAKy1C,aAAe6B,EAAgBlB,eAAep2C,KAAKy1C,eAErD5uB,EAAM7mB,KAAK43C,mBAEtBP,EAAiB33C,UAAUk4C,gBAAkB,WACzC,IAAInC,EAAez1C,KAAKy1C,aACxB,GAAIz1C,KAAKqB,QAAQo2C,oBAAqB,CAClC,QAAuB1zC,IAAnB/D,KAAKo3C,UACL,MAAO,GAEX3B,EAAe,gCAAkC9uC,EAAYunC,aAAaluC,KAAKo3C,WAEnF,OAAIp3C,KAAKqB,QAAQq2C,2BACN,GAEPjC,EACO,wBAA0BA,EAAe,MAE7C,IAEX4B,EAAiB33C,UAAUm4C,qBAAuB,WAC9C,OAAO73C,KAAKo3C,WAEhBC,EAAiB33C,UAAUo4C,qBAAuB,SAAUV,GACxDp3C,KAAKo3C,UAAYA,GAErBC,EAAiB33C,UAAUq4C,SAAW,WAClC,OAAO/3C,KAAKqB,QAAQo2C,qBAExBJ,EAAiB33C,UAAUs4C,gBAAkB,WACzC,OAAOh4C,KAAKy1C,cAEhB4B,EAAiB33C,UAAUu4C,kBAAoB,WAC3C,OAAOj4C,KAAKqB,QAAQk2C,yBAExBF,EAAiB33C,UAAUw4C,iBAAmB,WAC1C,OAAOl4C,KAAK23C,wBAETN,EAhE0B,GAkErC,OAAOA,EAGX,SAASc,GAAWd,GAChB,IAAIc,EAA2B,WAC3B,SAASA,EAAUv9B,EAAM1G,GACrBlU,KAAK4a,KAAOA,EACZ5a,KAAKkU,QAAUA,EAoDnB,OAlDAikC,EAAUz4C,UAAUkJ,MAAQ,SAAUvH,GAClC,IAAI4xC,EAEAmF,EADA5mC,EAAS,GAEb,IACIyhC,EAAYD,GAAchzC,KAAK4a,KAAMvZ,GAEzC,MAAOoC,GACH,MAAM,IAAIqO,EAAUrO,EAAGzD,KAAKkU,SAEhC,IACI,IAAI9T,EAAWkV,QAAQjU,EAAQjB,UAC3BA,GACA4E,EAAOI,KAAK,mIAGhB,IAAIizC,EAAe,CACfj4C,SAAUA,EACVsE,gBAAiBrD,EAAQqD,gBACzB7D,YAAayU,QAAQjU,EAAQR,aAC7BmJ,aAAc,GAEd3I,EAAQ+1C,WACRgB,EAAmB,IAAIf,EAAiBh2C,EAAQ+1C,WAChD5lC,EAAOqV,IAAMuxB,EAAiBxvC,MAAMqqC,EAAWoF,EAAcr4C,KAAKkU,UAGlE1C,EAAOqV,IAAMosB,EAAUrqC,MAAMyvC,GAGrC,MAAO50C,GACH,MAAM,IAAIqO,EAAUrO,EAAGzD,KAAKkU,SAEhC,GAAI7S,EAAQwF,cAER,IADA,IAAI8sC,EAAiBtyC,EAAQwF,cAAc6tC,oBAClC52C,EAAI,EAAGA,EAAI61C,EAAe7wC,OAAQhF,IACvC0T,EAAOqV,IAAM8sB,EAAe71C,GAAGmkC,QAAQzwB,EAAOqV,IAAK,CAAEuwB,UAAWgB,EAAkB/2C,QAASA,EAAS6S,QAASlU,KAAKkU,UAO1H,IAAK,IAAI4iC,KAJLz1C,EAAQ+1C,YACR5lC,EAAOvG,IAAMmtC,EAAiBP,wBAElCrmC,EAAO0C,QAAU,GACAlU,KAAKkU,QAAQokC,MACtBt4C,KAAKkU,QAAQokC,MAAM34C,eAAem3C,IAASA,IAAS92C,KAAKkU,QAAQqkC,cACjE/mC,EAAO0C,QAAQxO,KAAKoxC,GAG5B,OAAOtlC,GAEJ2mC,EAvDmB,GAyD9B,OAAOA,EAGX,SAASK,GAAe7xC,GASpB,IAAI6xC,EAA+B,WAC/B,SAASA,EAAc5zB,EAAM/b,EAAS4vC,GAClCz4C,KAAK4kB,KAAOA,EACZ5kB,KAAKu4C,aAAeE,EAAahyC,SACjCzG,KAAKM,MAAQuI,EAAQvI,OAAS,GAC9BN,KAAKoS,SAAW,GAChBpS,KAAKmiC,qBAAuB,GAC5BniC,KAAK04C,KAAO7vC,EAAQ6vC,KACpB14C,KAAKiF,MAAQ,KACbjF,KAAK6I,QAAUA,EAEf7I,KAAK24C,MAAQ,GACb34C,KAAKs4C,MAAQ,GA2IjB,OAjIAE,EAAc94C,UAAUgG,KAAO,SAAUgS,EAAM8U,EAAoB9e,EAAiB84B,EAAe/kB,GAC/F,IAAIm3B,EAAgB54C,KAAM64C,EAAe74C,KAAK6I,QAAQhC,cAAcitC,OACpE9zC,KAAK24C,MAAMjzC,KAAKgS,GAChB,IAAIohC,EAAiB,SAAUr1C,EAAGmX,EAAM2Y,GACpCqlB,EAAcD,MAAM/yC,OAAOgzC,EAAcD,MAAMxsC,QAAQuL,GAAO,GAC9D,IAAIqhC,EAAqBxlB,IAAaqlB,EAAcL,aAChD/R,EAAc9S,UAAYjwB,GAC1Bge,EAAS,KAAM,CAAE3H,MAAO,KAAM,EAAO,MACrC9U,EAAOK,KAAK,YAAckuB,EAAW,+EAMhCqlB,EAAcN,MAAM/kB,IAAciT,EAAc7wB,SACjDijC,EAAcN,MAAM/kB,GAAY,CAAE3Y,KAAMA,EAAMvZ,QAASmlC,IAEvD/iC,IAAMm1C,EAAc3zC,QACpB2zC,EAAc3zC,MAAQxB,GAE1Bge,EAAShe,EAAGmX,EAAMm+B,EAAoBxlB,KAG1CylB,EAAc,CACdr4C,YAAaX,KAAK6I,QAAQlI,YAC1B8sC,UAAW//B,EAAgB+/B,UAC3B/sC,SAAUgN,EAAgBhN,SAC1B63C,aAAc7qC,EAAgB6qC,cAE9BxxC,EAAcJ,EAAYH,eAAekR,EAAMhK,EAAgBhH,iBAAkB1G,KAAK6I,QAASlC,GACnG,GAAKI,EAAL,CAIA,IAqDIkyC,EACAC,EAtDAC,EAAmB,SAAUF,GAC7B,IAAIjqB,EACAoqB,EAAmBH,EAAWxyC,SAC9B2L,EAAW6mC,EAAW7mC,SAASjR,QAAQ,UAAW,IAStD63C,EAAYtyC,iBAAmBK,EAAYggB,QAAQqyB,GAC/CJ,EAAYr4C,cACZq4C,EAAYt4C,SAAWqG,EAAYqC,KAAMwvC,EAAc/vC,QAAQnI,UAAY,GAAKqG,EAAYimB,SAASgsB,EAAYtyC,iBAAkBsyC,EAAYvL,aAC1I1mC,EAAY8lB,eAAemsB,EAAYt4C,WAAaqG,EAAY6lB,4BACjEosB,EAAYt4C,SAAWqG,EAAYqC,KAAK4vC,EAAYvL,UAAWuL,EAAYt4C,YAGnFs4C,EAAYvyC,SAAW2yC,EACvB,IAAIC,EAAS,IAAIpiC,EAASM,MAAMqhC,EAAc/vC,SAC9CwwC,EAAOhX,gBAAiB,EACxBuW,EAAcxmC,SAASgnC,GAAoBhnC,GACvC1E,EAAgBuZ,WAAauf,EAAcvf,aAC3C+xB,EAAY/xB,WAAY,GAExBuf,EAAcxf,UACdgI,EAAS6pB,EAAa3qB,WAAW9b,EAAUinC,EAAQT,EAAepS,EAAcK,WAAYmS,GACxFhqB,aAAkBld,EAClBgnC,EAAe9pB,EAAQ,KAAMoqB,GAG7BN,EAAe,KAAM9pB,EAAQoqB,IAG5B5S,EAAc7wB,OACnBmjC,EAAe,KAAM1mC,EAAUgnC,IAK3BR,EAAcN,MAAMc,IAChBR,EAAcN,MAAMc,GAAkB/3C,QAAQ6xB,UAC9CsT,EAActT,SAIlB,IAAI+N,GAAOoY,EAAQT,EAAeI,GAAat3C,MAAM0Q,GAAU,SAAU3O,EAAGmX,GACxEk+B,EAAer1C,EAAGmX,EAAMw+B,MAJ5BN,EAAe,KAAMF,EAAcN,MAAMc,GAAkBx+B,KAAMw+B,IAWzEvwC,EAAU8E,EAAM3N,KAAK6I,SACrB2jB,IACA3jB,EAAQ4jB,IAAM+Z,EAAcxf,SAAW,MAAQ,SAE/Cwf,EAAcxf,UACdne,EAAQ6vC,KAAO,yBACX7vC,EAAQywC,WACRL,EAAaJ,EAAaU,eAAe7hC,EAAMhK,EAAgBhH,iBAAkBmC,EAASlC,EAAaI,GAGvGmyC,EAAUL,EAAaW,WAAW9hC,EAAMhK,EAAgBhH,iBAAkBmC,EAASlC,EAAaI,IAIhG8B,EAAQywC,WACRL,EAAalyC,EAAYinC,aAAat2B,EAAMhK,EAAgBhH,iBAAkBmC,EAASlC,GAGvFuyC,EAAUnyC,EAAY0yC,SAAS/hC,EAAMhK,EAAgBhH,iBAAkBmC,EAASlC,GAAa,SAAUsN,EAAKglC,GACpGhlC,EACA6kC,EAAe7kC,GAGfklC,EAAiBF,MAK7BA,EACKA,EAAWxyC,SAIZ0yC,EAAiBF,GAHjBH,EAAeG,GAMdC,GACLA,EAAQQ,KAAKP,EAAkBL,QA/F/BA,EAAe,CAAE7mC,QAAS,qCAAuCyF,KAkGlE8gC,EAvJuB,GAyJlC,OAAOA,EAGX,SAASjhC,GAAO5Q,EAAawxC,EAAWK,GACpC,IAAI92C,EAAQ,SAAUyQ,EAAO9Q,EAASogB,GAQlC,GAPuB,oBAAZpgB,GACPogB,EAAWpgB,EACXA,EAAU8P,EAAYnR,KAAKqB,QAAS,KAGpCA,EAAU8P,EAAYnR,KAAKqB,QAASA,GAAW,KAE9CogB,EAAU,CACX,IAAIk4B,EAAS35C,KACb,OAAO,IAAI45C,SAAQ,SAAUC,EAASC,GAClCp4C,EAAMzD,KAAK07C,EAAQxnC,EAAO9Q,GAAS,SAAU4S,EAAK5K,GAC1C4K,EACA6lC,EAAO7lC,GAGP4lC,EAAQxwC,SAMpB,IAAI0wC,EACAtB,OAAe,EACfuB,EAAkB,IAAIpF,GAAqB50C,MAAOqB,EAAQ44C,oBAG9D,GAFA54C,EAAQwF,cAAgBmzC,EACxBD,EAAY,IAAI9iC,EAASM,MAAMlW,GAC3BA,EAAQo3C,aACRA,EAAep3C,EAAQo3C,iBAEtB,CACD,IAAIhyC,EAAWpF,EAAQoF,UAAY,QAC/BgnC,EAAYhnC,EAAStF,QAAQ,YAAa,IAC9Cs3C,EAAe,CACXhyC,SAAUA,EACV9F,YAAao5C,EAAUp5C,YACvBD,SAAUq5C,EAAUr5C,UAAY,GAChCgG,iBAAkB+mC,EAClBA,UAAWA,EACX8K,aAAc9xC,GAGdgyC,EAAa/3C,UAAgD,MAApC+3C,EAAa/3C,SAASsM,OAAO,KACtDyrC,EAAa/3C,UAAY,KAGjC,IAAIw5C,EAAY,IAAI1B,EAAcx4C,KAAM+5C,EAAWtB,GACnDz4C,KAAK44C,cAAgBsB,EAGjB74C,EAAQmuB,SACRnuB,EAAQmuB,QAAQhnB,SAAQ,SAAUwmB,GAC9B,IAAImrB,EAAY/nC,EAChB,GAAI4c,EAAOorB,aAGP,GAFAhoC,EAAW4c,EAAOorB,YAAYj5C,QAAQ,UAAW,IACjDg5C,EAAaH,EAAgBlG,OAAO5lB,WAAW9b,EAAU2nC,EAAWG,EAAWlrB,EAAO3tB,QAAS2tB,EAAOvoB,UAClG0zC,aAAsBroC,EACtB,OAAO2P,EAAS04B,QAIpBH,EAAgBjrB,UAAUC,MAItC,IAAIiS,GAAO8Y,EAAWG,EAAWzB,GAC5B/2C,MAAMyQ,GAAO,SAAU1O,EAAGmX,GAC3B,GAAInX,EACA,OAAOge,EAAShe,GAEpBge,EAAS,KAAM7G,EAAMs/B,EAAW74C,KACjCA,IAGX,OAAOK,EAGX,SAAS24C,GAAQ1zC,EAAawxC,EAAWK,GACrC,IAAI8B,EAAS,SAAUnoC,EAAO9Q,EAASogB,GAQnC,GAPuB,oBAAZpgB,GACPogB,EAAWpgB,EACXA,EAAU8P,EAAYnR,KAAKqB,QAAS,KAGpCA,EAAU8P,EAAYnR,KAAKqB,QAASA,GAAW,KAE9CogB,EAAU,CACX,IAAIk4B,EAAS35C,KACb,OAAO,IAAI45C,SAAQ,SAAUC,EAASC,GAClCQ,EAAOr8C,KAAK07C,EAAQxnC,EAAO9Q,GAAS,SAAU4S,EAAK5K,GAC3C4K,EACA6lC,EAAO7lC,GAGP4lC,EAAQxwC,SAMpBrJ,KAAK0B,MAAMyQ,EAAO9Q,GAAS,SAAU4S,EAAK2G,EAAM1G,EAAS7S,GACrD,GAAI4S,EACA,OAAOwN,EAASxN,GAEpB,IAAIzC,EACJ,IACI,IAAI+oC,EAAY,IAAIpC,EAAUv9B,EAAM1G,GACpC1C,EAAS+oC,EAAU3xC,MAAMvH,GAE7B,MAAO4S,GACH,OAAOwN,EAASxN,GAEpBwN,EAAS,KAAMjQ,OAI3B,OAAO8oC,EAGX,IAAIprB,GAAU,QAEd,SAASsrB,GAAiBtrB,GACxB,IAAIlkB,EAAQkkB,EAAQlkB,MAAM,mFAC1B,IAAKA,EACH,MAAM,IAAItH,MAAM,oBAAsBwrB,GAGxC,IAAIurB,EAAM,CACRC,MAAOxvC,SAASF,EAAM,GAAI,IAC1B2vC,MAAOzvC,SAASF,EAAM,GAAI,IAC1B4vC,MAAO1vC,SAASF,EAAM,GAAI,IAC1B6vC,IAAK7vC,EAAM,IAAM,GACjB8vC,MAAO9vC,EAAM,IAAM,IAGrB,OAAOyvC,EAGT,IAwEIp5C,GACA05C,GAzEAC,GAAqBR,GAEzB,SAASS,GAAUt0C,EAAaV,GAC5B,IAAIqxC,EAAiBc,EAAkBmC,EAAW3B,EAClDjyC,EAAc,IAAIZ,EAAYY,EAAaV,GAC3CqxC,EAAkBxC,GAAgBnuC,GAClCyxC,EAAmBf,GAAiBC,EAAiB3wC,GACrD4zC,EAAYpC,GAAUC,GACtBQ,EAAgBJ,GAAc7xC,GAC9B,IAmCI3H,EAnCAs7C,EAASD,GAAO1zC,EAAa4zC,GAC7B74C,EAAQ6V,GAAM5Q,EAAa4zC,EAAW3B,GACtCttC,EAAI0vC,GAAmB,IAAM9rB,IAC7BgsB,EAAU,CACVhsB,QAAS,CAAC5jB,EAAEovC,MAAOpvC,EAAEqvC,MAAOrvC,EAAEsvC,OAC9BpzC,KAAMA,EACN6kB,KAAMA,GACNtmB,YAAaA,EACbumB,oBAAqBA,GACrB0B,qBAAsBA,GACtBrnB,YAAaA,EACbke,SAAUA,GACVoc,OAAQA,GACR76B,UAAWA,GAAUO,GACrBsQ,SAAUA,EACV69B,gBAAiBwC,EACjBD,iBAAkBe,EAClBD,UAAWoC,EACX/B,cAAeI,EACf0B,OAAQA,EACR54C,MAAOA,EACPoQ,UAAWA,EACXkhC,cAAeA,GACfthC,MAAOA,EACPgiC,cAAekB,GACf5vC,OAAQA,GAGRm2C,EAAO,SAAUn8C,GACjB,OAAO,WACH,IAAI0R,EAAMlS,OAAOY,OAAOJ,EAAEU,WAE1B,OADAV,EAAEwc,MAAM9K,EAAKpI,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,IAC5C6B,IAIX0qC,EAAM58C,OAAOY,OAAO87C,GACxB,IAAK,IAAI37C,KAAK27C,EAAQ7uB,KAGlB,GADArtB,EAAIk8C,EAAQ7uB,KAAK9sB,GACA,oBAANP,EACPo8C,EAAI77C,EAAEwN,eAAiBouC,EAAKn8C,QAI5B,IAAK,IAAIT,KADT68C,EAAI77C,GAAKf,OAAOY,OAAO,MACTJ,EAEVo8C,EAAI77C,GAAGhB,EAAEwO,eAAiBouC,EAAKn8C,EAAET,IAY7C,OAFA28C,EAAQx5C,MAAQw5C,EAAQx5C,MAAMpC,KAAK87C,GACnCF,EAAQZ,OAASY,EAAQZ,OAAOh7C,KAAK87C,GAC9BA,EAMX,IAAIC,GAAY,GAEZ7sB,GAAc,aAClBA,GAAY9uB,UAAYlB,OAAOoN,OAAO,IAAI0gB,GAAuB,CAC7DM,wBAAyB,WACrB,OAAO,GAEXxjB,KAAM,SAAU0jB,EAAUC,GACtB,OAAKD,EAGE9sB,KAAKstB,gBAAgBP,EAAWD,GAAUpV,KAFtCqV,GAIfuuB,MAAO,SAAUruB,EAAKpnB,EAAM4b,EAAU85B,GAClC,IAAIC,EAAM,IAAIC,eACVr3C,GAAQ/C,GAAQ2C,gBAAiB3C,GAAQgD,UAQ7C,SAASq3C,EAAeF,EAAK/5B,EAAU85B,GAC/BC,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IAClCl6B,EAAS+5B,EAAII,aAAcJ,EAAIK,kBAAkB,kBAEzB,oBAAZN,GACZA,EAAQC,EAAIG,OAAQ1uB,GAZQ,oBAAzBuuB,EAAIM,kBACXN,EAAIM,iBAAiB,YAEzBf,GAASz1C,MAAM,iBAAmB2nB,EAAM,KACxCuuB,EAAIO,KAAK,MAAO9uB,EAAK7oB,GACrBo3C,EAAIQ,iBAAiB,SAAUn2C,GAAQ,4CACvC21C,EAAIS,KAAK,MASL56C,GAAQ2C,iBAAmB3C,GAAQgD,UAChB,IAAfm3C,EAAIG,QAAiBH,EAAIG,QAAU,KAAOH,EAAIG,OAAS,IACvDl6B,EAAS+5B,EAAII,cAGbL,EAAQC,EAAIG,OAAQ1uB,GAGnB7oB,EACLo3C,EAAIU,mBAAqB,WACC,GAAlBV,EAAIW,YACJT,EAAeF,EAAK/5B,EAAU85B,IAKtCG,EAAeF,EAAK/5B,EAAU85B,IAGtCa,SAAU,WACN,OAAO,GAEXC,eAAgB,WACZhB,GAAY,IAEhB5B,SAAU,SAAUhzC,EAAUC,EAAkBrF,EAASsF,GAGjDD,IAAqB1G,KAAK6sB,eAAepmB,KACzCA,EAAWC,EAAmBD,GAElCA,EAAWpF,EAAQorB,IAAMzsB,KAAKwsB,mBAAmB/lB,EAAUpF,EAAQorB,KAAOhmB,EAC1EpF,EAAUA,GAAW,GAGrB,IAAIi7C,EAAYt8C,KAAKstB,gBAAgB7mB,EAAU7C,OAAOM,SAAShD,MAC3DA,EAAOo7C,EAAUrvB,IACjBllB,EAAO/H,KACX,OAAO,IAAI45C,SAAQ,SAAUC,EAASC,GAClC,GAAIz4C,EAAQwD,cAAgBw2C,GAAUn6C,GAClC,IACI,IAAIq7C,EAAWlB,GAAUn6C,GACzB,OAAO24C,EAAQ,CAAEznC,SAAUmqC,EAAU91C,SAAUvF,EAAMs7C,QAAS,CAAEC,aAAc,IAAIC,QAEtF,MAAOj5C,GACH,OAAOq2C,EAAO,CAAErzC,SAAUvF,EAAM+Q,QAAS,sBAAwB/Q,EAAO,cAAgBuC,EAAEwO,UAGlGlK,EAAKuzC,MAAMp6C,EAAMG,EAAQq3C,MAAM,SAAuBlxC,EAAMi1C,GAExDpB,GAAUn6C,GAAQsG,EAElBqyC,EAAQ,CAAEznC,SAAU5K,EAAMf,SAAUvF,EAAMs7C,QAAS,CAAEC,aAAcA,QACpE,SAAoBd,EAAQ1uB,GAC3B6sB,EAAO,CAAEj0C,KAAM,OAAQoM,QAAS,IAAMgb,EAAM,mBAAqB0uB,EAAS,IAAKz6C,KAAMA,aAKrG,IAAIy7C,GAAK,SAAWvrC,EAAMwrC,GAGtB,OAFAv7C,GAAU+P,EACV2pC,GAAW6B,EACJpuB,IAOPulB,GAAe,SAAUnvB,GACzB5kB,KAAK4kB,KAAOA,GAGhBmvB,GAAar0C,UAAYlB,OAAOoN,OAAO,IAAIoiB,GAAwB,CAC/DwrB,WAAY,SAAU/yC,EAAUqmB,EAAUjkB,EAASlC,EAAaI,GAC5D,OAAO,IAAI6yC,SAAQ,SAAUiD,EAAS/C,GAClC/yC,EAAY0yC,SAAShzC,EAAUqmB,EAAUjkB,EAASlC,GAC7C+yC,KAAKmD,GAASC,MAAMhD,SAKrC,IAAIiD,GAAc,SAAWn4B,EAAMvjB,GAC/B,IAAI27C,EAAiB,EACjBC,EAAgB,EAChBC,EAAgB,EAChBC,EAAiB,EAOrB97C,EAAQ+7C,SAAuC,qBAArB/7C,EAAQ+7C,SAA2B/7C,EAAQ+7C,SAA4B,gBAAhB/7C,EAAQkD,IAAwB04C,EAAgBE,EAC5H97C,EAAQg8C,UACTh8C,EAAQg8C,QAAU,CAAC,CACX/3C,MAAO,SAAUJ,GACT7D,EAAQ+7C,UAAYJ,GACpBM,QAAQV,IAAI13C,IAGpBG,KAAM,SAAUH,GACR7D,EAAQ+7C,UAAYH,GACpBK,QAAQV,IAAI13C,IAGpBE,KAAM,SAAUF,GACR7D,EAAQ+7C,UAAYF,GACpBI,QAAQl4C,KAAKF,IAGrBD,MAAO,SAAUC,GACT7D,EAAQ+7C,UAAYD,GACpBG,QAAQr4C,MAAMC,OAKlC,IAAK,IAAIpH,EAAI,EAAGA,EAAIuD,EAAQg8C,QAAQv6C,OAAQhF,IACxC8mB,EAAK5f,OAAOO,YAAYlE,EAAQg8C,QAAQv/C,KAI5Cy/C,GAAiB,SAAW35C,EAAQghB,EAAMvjB,GAC1C,SAASm8C,EAAU/5C,EAAGg6C,GAClB,IAGIC,EACAv4B,EAJAljB,EAAK,sBAAwBhB,EAAUw8C,GAAY,IACnDE,EAAW,qEACX7Y,EAAOlhC,EAAO9B,SAASS,cAAc,OAGrCq7C,EAAS,GACTn3C,EAAWhD,EAAEgD,UAAYg3C,EACzBI,EAAiBp3C,EAASuE,MAAM,oBAAoB,GACxD85B,EAAK7iC,GAAKA,EACV6iC,EAAKgZ,UAAY,qBACjB34B,EAAU,QAAU1hB,EAAEoC,MAAQ,UAAY,WAAapC,EAAEwO,SAAW,wCAC/D,uBAA0BxL,EAAW,KAAQo3C,EAAiB,QACnE,IAAIE,EAAY,SAAUt6C,EAAG3F,EAAGkgD,QACPj6C,IAAjBN,EAAEqP,QAAQhV,IACV8/C,EAAOl4C,KAAKi4C,EAASx8C,QAAQ,YAAa+J,SAASzH,EAAE6M,KAAM,KAAO,IAAMxS,EAAI,IACvEqD,QAAQ,YAAa68C,GACrB78C,QAAQ,cAAesC,EAAEqP,QAAQhV,MAG1C2F,EAAE6M,OACFytC,EAAUt6C,EAAG,EAAG,IAChBs6C,EAAUt6C,EAAG,EAAG,QAChBs6C,EAAUt6C,EAAG,EAAG,IAChB0hB,GAAW,WAAa1hB,EAAE6M,KAAO,aAAe7M,EAAE8M,OAAS,GAAK,YAAcqtC,EAAOx0C,KAAK,IAAM,SAEhG3F,EAAEyO,QAAUzO,EAAEqP,SAAWzR,EAAQ+7C,UAAY,KAC7Cj4B,GAAW,0BAA4B1hB,EAAEyO,MAAM9G,MAAM,MAAM4B,MAAM,GAAG5D,KAAK,UAE7E07B,EAAKmZ,UAAY94B,EAEjBvjB,EAAQC,UAAU+B,EAAO9B,SAAU,CAC/B,mDACA,yBACA,sBACA,kBACA,aACA,IACA,8BACA,mBACA,sBACA,kBACA,kBACA,IACA,4BACA,kBACA,kBACA,aACA,yBACA,IACA,iCACA,kBACA,IACA,2BACA,mBACA,qBACA,yBACA,aACA,IACA,0BACA,cACA,IACA,+BACA,cACA,qBACA,uBACA,iCACA,KACFsH,KAAK,MAAO,CAAElH,MAAO,kBACvB4iC,EAAKoZ,MAAM16C,QAAU,CACjB,iCACA,yBACA,yBACA,qBACA,6BACA,0BACA,cACA,gBACA,uBACF4F,KAAK,KACa,gBAAhB/H,EAAQkD,MACRm5C,EAAQS,aAAY,WAChB,IAAIr8C,EAAW8B,EAAO9B,SAClBsmC,EAAOtmC,EAASsmC,KAChBA,IACItmC,EAASM,eAAeH,GACxBmmC,EAAKgW,aAAatZ,EAAMhjC,EAASM,eAAeH,IAGhDmmC,EAAK9kC,aAAawhC,EAAMsD,EAAKrlC,YAEjCs7C,cAAcX,MAEnB,KAGX,SAASY,EAAgB5mC,GACrB,IAAIrP,EAAOzE,EAAO9B,SAASM,eAAe,sBAAwBnB,EAAUyW,IACxErP,GACAA,EAAKhF,WAAWE,YAAY8E,GAGpC,SAASk2C,EAAY7mC,GACZrW,EAAQm9C,gBAA6C,SAA3Bn9C,EAAQm9C,eAGH,YAA3Bn9C,EAAQm9C,gBAC0B,oBAA3Bn9C,EAAQm9C,gBACpBn9C,EAAQm9C,eAAe,SAAU9mC,GAJjC4mC,EAAgB5mC,GAOxB,SAAS+mC,EAAah7C,EAAGg6C,GACrB,IAAIE,EAAW,mBACXl3C,EAAWhD,EAAEgD,UAAYg3C,EACzBG,EAAS,GACTz4B,GAAW1hB,EAAEoC,MAAQ,UAAY,WAAapC,EAAEwO,SAAW,wCAA0C,OAASxL,EAC9Gs3C,EAAY,SAAUt6C,EAAG3F,EAAGkgD,QACPj6C,IAAjBN,EAAEqP,QAAQhV,IACV8/C,EAAOl4C,KAAKi4C,EAASx8C,QAAQ,YAAa+J,SAASzH,EAAE6M,KAAM,KAAO,IAAMxS,EAAI,IACvEqD,QAAQ,YAAa68C,GACrB78C,QAAQ,cAAesC,EAAEqP,QAAQhV,MAG1C2F,EAAE6M,OACFytC,EAAUt6C,EAAG,EAAG,IAChBs6C,EAAUt6C,EAAG,EAAG,QAChBs6C,EAAUt6C,EAAG,EAAG,IAChB0hB,GAAW,YAAc1hB,EAAE6M,KAAO,aAAe7M,EAAE8M,OAAS,GAAK,MAAQqtC,EAAOx0C,KAAK,OAErF3F,EAAEyO,QAAUzO,EAAEqP,SAAWzR,EAAQ+7C,UAAY,KAC7Cj4B,GAAW,kBAAoB1hB,EAAEyO,OAErC0S,EAAK5f,OAAOC,MAAMkgB,GAEtB,SAASlgB,EAAMxB,EAAGg6C,GACTp8C,EAAQm9C,gBAA6C,SAA3Bn9C,EAAQm9C,eAGH,YAA3Bn9C,EAAQm9C,eACbC,EAAah7C,EAAGg6C,GAEuB,oBAA3Bp8C,EAAQm9C,gBACpBn9C,EAAQm9C,eAAe,MAAO/6C,EAAGg6C,GANjCD,EAAU/5C,EAAGg6C,GASrB,MAAO,CACHz0C,IAAK/D,EACLy5C,OAAQH,IAKZI,GAAQ,SAAW/6C,EAAQvC,EAAS2D,GACpC,IAAI45C,EAAQ,KACZ,GAAoB,gBAAhBv9C,EAAQkD,IACR,IACIq6C,EAAwC,qBAAxBh7C,EAAOi7C,aAAgC,KAAOj7C,EAAOi7C,aAEzE,MAAOl9C,IAEX,MAAO,CACHm9C,OAAQ,SAAUpnC,EAAM+kC,EAAc17C,EAAYgB,GAC9C,GAAI68C,EAAO,CACP55C,EAAOK,KAAK,UAAYqS,EAAO,cAC/B,IACIknC,EAAMG,QAAQrnC,EAAM3V,GACpB68C,EAAMG,QAAQrnC,EAAO,aAAc+kC,GAC/B17C,GACA69C,EAAMG,QAAQrnC,EAAO,QAASjW,KAAKy1C,UAAUn2C,IAGrD,MAAO0C,GAEHuB,EAAOC,MAAM,mBAAsByS,EAAO,sCAItDsnC,OAAQ,SAAUtnC,EAAM8kC,EAASz7C,GAC7B,IAAI8lB,EAAM+3B,GAASA,EAAMK,QAAQvnC,GAC7BwnC,EAAYN,GAASA,EAAMK,QAAQvnC,EAAO,cAC1CuE,EAAO2iC,GAASA,EAAMK,QAAQvnC,EAAO,SAGzC,GAFA3W,EAAaA,GAAc,GAC3Bkb,EAAOA,GAAQ,KACXijC,GAAa1C,EAAQC,cACpB,IAAIC,KAAKF,EAAQC,cAAc0C,YAC5B,IAAIzC,KAAKwC,GAAWC,WACxB19C,KAAKy1C,UAAUn2C,KAAgBkb,EAE/B,OAAO4K,KAMnBu4B,GAAY,WACZ,SAASC,IACL,KAAM,CACFx5C,KAAM,UACNoM,QAAS,qEAGjB,IAAIqtC,EAAiB,CACjB,aAAc,SAAUhS,GAEpB,OADA+R,KACQ,GAEZ,cAAe,SAAU/R,GAErB,OADA+R,KACQ,GAEZ,eAAgB,SAAU/R,GAEtB,OADA+R,KACQ,IAGhB9lC,EAAiBxB,YAAYunC,IAI7B1kC,GAAO,SAAWhX,EAAQvC,GAC1B,IAAIS,EAAW8B,EAAO9B,SAClB8iB,EAAOq2B,KACXr2B,EAAKvjB,QAAUA,EACf,IAAIsF,EAAcie,EAAKje,YACnB6nB,EAAcmuB,GAAGt7C,EAASujB,EAAK5f,QAC/B+B,EAAc,IAAIynB,EACtB7nB,EAAYK,eAAeD,GAC3B6d,EAAK4J,YAAcA,EACnB5J,EAAKmvB,aAAeA,GACpBgJ,GAAYn4B,EAAMvjB,GAClB,IAAIu8C,EAASL,GAAe35C,EAAQghB,EAAMvjB,GACtCu9C,EAAQh6B,EAAKg6B,MAAQv9C,EAAQu9C,OAASD,GAAM/6C,EAAQvC,EAASujB,EAAK5f,QACtEo6C,GAAUx6B,EAAKje,aAEXtF,EAAQ+E,WACRwe,EAAKxe,UAAUmT,iBAAiBxB,YAAY1W,EAAQ+E,WAExD,IAAIm5C,EAAc,oBAClB,SAAS5xC,EAAM+C,GACX,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAQF,EACTA,EAAI/Q,eAAeiR,KACnBD,EAAOC,GAAQF,EAAIE,IAG3B,OAAOD,EAGX,SAASrR,EAAKoT,EAAM8sC,GAChB,IAAIC,EAAYn3C,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,GACtD,OAAO,WACH,IAAI3C,EAAOuzC,EAAUp5C,OAAOiC,MAAM5I,UAAUsN,MAAM/O,KAAK4Q,UAAW,IAClE,OAAO6D,EAAK8I,MAAMgkC,EAAStzC,IAGnC,SAASwzC,EAAW3+C,GAGhB,IAFA,IACIm9C,EADAn8C,EAASD,EAASoB,qBAAqB,SAElCpF,EAAI,EAAGA,EAAIiE,EAAOe,OAAQhF,IAE/B,GADAogD,EAAQn8C,EAAOjE,GACXogD,EAAMr4C,KAAKmF,MAAMu0C,GAAc,CAC/B,IAAII,EAAkBhyC,EAAMtM,GAC5Bs+C,EAAgB5+C,WAAaA,EAC7B,IAAIw7C,EAAW2B,EAAMD,WAAa,GAClC0B,EAAgBl5C,SAAW3E,EAASoC,SAAShD,KAAKC,QAAQ,OAAQ,IAGlEyjB,EAAK01B,OAAOiC,EAAUoD,EAAiBrgD,GAAK,SAAU4+C,EAAOz6C,EAAG+N,GACxD/N,EACAm6C,EAAO50C,IAAIvF,EAAG,WAGdy6C,EAAMr4C,KAAO,WACTq4C,EAAMx7C,WACNw7C,EAAMx7C,WAAWc,QAAUgO,EAAOqV,IAGlCq3B,EAAMD,UAAYzsC,EAAOqV,OAGlC,KAAMq3B,KAIrB,SAAS0B,EAAe59C,EAAOyf,EAAUo+B,EAAQC,EAAW/+C,GACxD,IAAI4+C,EAAkBhyC,EAAMtM,GAM5B,SAAS0+C,EAAwB9G,GAC7B,IAAIzxC,EAAOyxC,EAAW7mC,SAClBsF,EAAOuhC,EAAWxyC,SAClB+1C,EAAUvD,EAAWuD,QACrBxD,EAAc,CACdtyC,iBAAkBK,EAAYggB,QAAQrP,GACtCjR,SAAUiR,EACV6gC,aAAc7gC,EACd/W,YAAag/C,EAAgBh/C,aAIjC,GAFAq4C,EAAYvL,UAAYuL,EAAYtyC,iBACpCsyC,EAAYt4C,SAAWi/C,EAAgBj/C,UAAYs4C,EAAYtyC,iBAC3D81C,EAAS,CACTA,EAAQsD,UAAYA,EACpB,IAAIj5B,EAAM+3B,EAAMI,OAAOtnC,EAAM8kC,EAASmD,EAAgB5+C,YACtD,IAAK8+C,GAAUh5B,EAGX,OAFA21B,EAAQwD,OAAQ,OAChBv+B,EAAS,KAAMoF,EAAKrf,EAAMxF,EAAOw6C,EAAS9kC,GAKlDkmC,EAAOc,OAAOhnC,GACdioC,EAAgBlH,aAAeO,EAC/Bp0B,EAAK01B,OAAO9yC,EAAMm4C,GAAiB,SAAUl8C,EAAG+N,GACxC/N,GACAA,EAAEvC,KAAOwW,EACT+J,EAAShe,KAGTm7C,EAAME,OAAO98C,EAAMd,KAAMs7C,EAAQC,aAAckD,EAAgB5+C,WAAYyQ,EAAOqV,KAClFpF,EAAS,KAAMjQ,EAAOqV,IAAKrf,EAAMxF,EAAOw6C,EAAS9kC,OApC7DtW,EAAYu+C,EAAiB39C,GAC7B29C,EAAgBjH,KAAO12C,EAAM6D,KACzB9E,IACA4+C,EAAgB5+C,WAAaA,GAqCjCgG,EAAY0yC,SAASz3C,EAAMd,KAAM,KAAMy+C,EAAiBh5C,GACnD+yC,MAAK,SAAUT,GAChB8G,EAAwB9G,MACzB6D,OAAM,SAAU7oC,GACfqpC,QAAQV,IAAI3oC,GACZwN,EAASxN,MAGjB,SAASgsC,EAAgBx+B,EAAUo+B,EAAQ9+C,GACvC,IAAK,IAAIjD,EAAI,EAAGA,EAAI8mB,EAAKs7B,OAAOp9C,OAAQhF,IACpC8hD,EAAeh7B,EAAKs7B,OAAOpiD,GAAI2jB,EAAUo+B,EAAQj7B,EAAKs7B,OAAOp9C,QAAUhF,EAAI,GAAIiD,GAGvF,SAASo/C,IACY,gBAAbv7B,EAAKrgB,MACLqgB,EAAKw7B,WAAajC,aAAY,WACtBv5B,EAAKy7B,YACLt5C,EAAYs1C,iBACZ4D,GAAgB,SAAUx8C,EAAGojB,EAAKllB,EAAGK,EAAOw6C,GACpC/4C,EACAm6C,EAAO50C,IAAIvF,EAAGA,EAAEvC,MAAQc,EAAMd,MAEzB2lB,GACLjlB,EAAQC,UAAU+B,EAAO9B,SAAU+kB,EAAK7kB,SAIrDX,EAAQiD,OAqGnB,OA/FAsgB,EAAK07B,MAAQ,WAMT,OALK17B,EAAKy7B,YACNz7B,EAAKrgB,IAAM,cACX47C,KAEJngD,KAAKqgD,WAAY,GACV,GAEXz7B,EAAK27B,QAAU,WAAsE,OAAxDlC,cAAcz5B,EAAKw7B,YAAapgD,KAAKqgD,WAAY,GAAc,GAK5Fz7B,EAAK47B,+BAAiC,WAClC,IAAIC,EAAQ3+C,EAASoB,qBAAqB,QAC1C0hB,EAAKs7B,OAAS,GACd,IAAK,IAAIpiD,EAAI,EAAGA,EAAI2iD,EAAM39C,OAAQhF,KACT,oBAAjB2iD,EAAM3iD,GAAG4iD,KAA8BD,EAAM3iD,GAAG4iD,IAAI11C,MAAM,eACzDy1C,EAAM3iD,GAAG+H,KAAKmF,MAAMu0C,KACrB36B,EAAKs7B,OAAOx6C,KAAK+6C,EAAM3iD,KAQnC8mB,EAAK+7B,oBAAsB,WAAc,OAAO,IAAI/G,SAAQ,SAAUC,EAASC,GAC3El1B,EAAK47B,iCACL3G,QAMJj1B,EAAK7jB,WAAa,SAAU6/C,GAAU,OAAOh8B,EAAKi8B,SAAQ,EAAMD,GAAQ,IACxEh8B,EAAKi8B,QAAU,SAAUhB,EAAQ9+C,EAAYs7C,GAIzC,OAHKwD,GAAUxD,KAAsC,IAAnBA,GAC9Bt1C,EAAYs1C,iBAET,IAAIzC,SAAQ,SAAUC,EAASC,GAClC,IAAIgH,EACAC,EACAC,EACAC,EACJH,EAAYC,EAAU,IAAIrE,KAE1BuE,EAAkBr8B,EAAKs7B,OAAOp9C,OACN,IAApBm+C,GACAF,EAAU,IAAIrE,KACdsE,EAAoBD,EAAUD,EAC9Bl8B,EAAK5f,OAAOK,KAAK,gDACjBw0C,EAAQ,CACJiH,UAAWA,EACXC,QAASA,EACTC,kBAAmBA,EACnBd,OAAQt7B,EAAKs7B,OAAOp9C,UAKxBm9C,GAAgB,SAAUx8C,EAAGojB,EAAKllB,EAAGK,EAAOw6C,GACxC,GAAI/4C,EAGA,OAFAm6C,EAAO50C,IAAIvF,EAAGA,EAAEvC,MAAQc,EAAMd,WAC9B44C,EAAOr2C,GAGP+4C,EAAQwD,MACRp7B,EAAK5f,OAAOK,KAAK,WAAarD,EAAMd,KAAO,gBAG3C0jB,EAAK5f,OAAOK,KAAK,YAAcrD,EAAMd,KAAO,kBAEhDU,EAAQC,UAAU+B,EAAO9B,SAAU+kB,EAAK7kB,GACxC4iB,EAAK5f,OAAOK,KAAK,WAAarD,EAAMd,KAAO,kBAAoB,IAAIw7C,KAASqE,GAAW,MAEvFE,IAEwB,IAApBA,IACAD,EAAoB,IAAItE,KAASoE,EACjCl8B,EAAK5f,OAAOK,KAAK,uCAAyC27C,EAAoB,MAC9EnH,EAAQ,CACJiH,UAAWA,EACXC,QAASA,EACTC,kBAAmBA,EACnBd,OAAQt7B,EAAKs7B,OAAOp9C,UAG5Bi+C,EAAU,IAAIrE,OACfmD,EAAQ9+C,GAEf2+C,EAAW3+C,OAGnB6jB,EAAKs8B,cAAgBxB,EACd96B,GAQPu8B,GAAYlhD,IAChB,GAAI2D,OAAOghB,KACP,IAAK,IAAIvlB,MAAOuE,OAAOghB,KACfhhB,OAAOghB,KAAKjlB,eAAeN,MAC3B8hD,GAAU9hD,IAAOuE,OAAOghB,KAAKvlB,KAIzCyE,EAAkBF,OAAQu9C,IAC1BA,GAAU3xB,QAAU2xB,GAAU3xB,SAAW,GACrC5rB,OAAOw9C,eACPD,GAAU3xB,QAAU2xB,GAAU3xB,QAAQnpB,OAAOzC,OAAOw9C,eAExD,IAEIv6B,GACA5jB,GACAi7C,GAJAt5B,GAAOhK,GAAKhX,OAAQu9C,IAMxB,SAASE,GAAgB75C,GACjBA,EAAKf,UACL62C,QAAQl4C,KAAKoC,GAEZ25C,GAAU/8C,OACXnB,GAAKM,YAAY26C,IAyBzB,OAnCAt6C,OAAOghB,KAAOA,GAaVu8B,GAAUr8C,UACN,SAASb,KAAKL,OAAOM,SAASU,OAC9BggB,GAAK07B,QAGJa,GAAU/8C,QACXyiB,GAAM,oCACN5jB,GAAOnB,SAASmB,MAAQnB,SAASoB,qBAAqB,QAAQ,GAC9Dg7C,GAAQp8C,SAASS,cAAc,SAC/B27C,GAAMr4C,KAAO,WACTq4C,GAAMx7C,WACNw7C,GAAMx7C,WAAWc,QAAUqjB,GAG3Bq3B,GAAMv7C,YAAYb,SAASc,eAAeikB,KAE9C5jB,GAAKN,YAAYu7C,KAErBt5B,GAAK47B,iCACL57B,GAAK08B,iBAAmB18B,GAAKi8B,QAAqB,gBAAbj8B,GAAKrgB,KAAuBm1C,KAAK2H,GAAiBA,KAGpFz8B,O,oCCt8VX,SAAS28B,EAAuBx9B,EAAMy9B,GACpC,IAAIr8B,EAAUpB,EAAK,IAAM,GAErB09B,EAAa19B,EAAK,GAEtB,IAAK09B,EACH,OAAOt8B,EAGT,GAAIq8B,GAAgC,oBAATE,KAAqB,CAC9C,IAAIC,EAAgBC,EAAUH,GAC1BI,EAAaJ,EAAWK,QAAQ72C,KAAI,SAAU4rC,GAChD,MAAO,iBAAiBxwC,OAAOo7C,EAAW1K,YAAc,IAAI1wC,OAAOwwC,EAAQ,UAE7E,MAAO,CAAC1xB,GAAS9e,OAAOw7C,GAAYx7C,OAAO,CAACs7C,IAAgBv4C,KAAK,MAGnE,MAAO,CAAC+b,GAAS/b,KAAK,MAIxB,SAASw4C,EAAUxK,GAEjB,IAAI2K,EAASL,KAAKM,SAAS7T,mBAAmB1sC,KAAKy1C,UAAUE,MACzD5vC,EAAO,+DAA+DnB,OAAO07C,GACjF,MAAO,OAAO17C,OAAOmB,EAAM,OApF7B3J,EAAOD,QAAU,SAAU4jD,GACzB,IAAIjT,EAAO,GAuDX,OArDAA,EAAK5iC,SAAW,WACd,OAAO3L,KAAKiL,KAAI,SAAU8Y,GACxB,IAAIoB,EAAUo8B,EAAuBx9B,EAAMy9B,GAE3C,OAAIz9B,EAAK,GACA,UAAU1d,OAAO0d,EAAK,GAAI,MAAM1d,OAAO8e,EAAS,KAGlDA,KACN/b,KAAK,KAKVmlC,EAAKzwC,EAAI,SAAUE,EAASikD,EAAYC,GACf,kBAAZlkD,IAETA,EAAU,CAAC,CAAC,KAAMA,EAAS,MAG7B,IAAImkD,EAAyB,GAE7B,GAAID,EACF,IAAK,IAAIpkD,EAAI,EAAGA,EAAIkC,KAAK8C,OAAQhF,IAAK,CAEpC,IAAImE,EAAKjC,KAAKlC,GAAG,GAEP,MAANmE,IACFkgD,EAAuBlgD,IAAM,GAKnC,IAAK,IAAIysC,EAAK,EAAGA,EAAK1wC,EAAQ8E,OAAQ4rC,IAAM,CAC1C,IAAI3qB,EAAO,GAAG1d,OAAOrI,EAAQ0wC,IAEzBwT,GAAUC,EAAuBp+B,EAAK,MAKtCk+B,IACGl+B,EAAK,GAGRA,EAAK,GAAK,GAAG1d,OAAO47C,EAAY,SAAS57C,OAAO0d,EAAK,IAFrDA,EAAK,GAAKk+B,GAMd1T,EAAK7oC,KAAKqe,MAIPwqB,I,qBC/DT,IAAI6T,EAA8B,EAAQ,QAC1CxkD,EAAUwkD,GAA4B,GAEtCxkD,EAAQ8H,KAAK,CAAC7H,EAAOC,EAAI,ivEAAkvE,KAE3wED,EAAOD,QAAUA,G,oCCFF,SAASykD,EAAcC,EAAU/T,GAG9C,IAFA,IAAIxsC,EAAS,GACTwgD,EAAY,GACPzkD,EAAI,EAAGA,EAAIywC,EAAKzrC,OAAQhF,IAAK,CACpC,IAAIimB,EAAOwqB,EAAKzwC,GACZmE,EAAK8hB,EAAK,GACV8C,EAAM9C,EAAK,GACXthB,EAAQshB,EAAK,GACbqzB,EAAYrzB,EAAK,GACjBy+B,EAAO,CACTvgD,GAAIqgD,EAAW,IAAMxkD,EACrB+oB,IAAKA,EACLpkB,MAAOA,EACP20C,UAAWA,GAERmL,EAAUtgD,GAGbsgD,EAAUtgD,GAAIwgD,MAAM/8C,KAAK88C,GAFzBzgD,EAAO2D,KAAK68C,EAAUtgD,GAAM,CAAEA,GAAIA,EAAIwgD,MAAO,CAACD,KAKlD,OAAOzgD,ECvBM,SAAS2gD,EAAsBJ,EAAU/T,EAAMoU,GAC5D,IAAI5gD,EAASsgD,EAAaC,EAAU/T,GACpCqU,EAAU7gD,EAAQ4gD,GAgBpB,SAASC,EAAW7gD,EAAiC4gD,GACnD,MAAME,EACJF,EAAWG,kBACVH,EAAWG,gBAAkB,IAChC,IAAK,IAAIhlD,EAAI,EAAGA,EAAIiE,EAAOe,OAAQhF,IAAK,CACtC,IAAIimB,EAAOhiB,EAAOjE,GACdogD,EAAQ2E,EAAe9+B,EAAK9hB,IAChC,IAAKi8C,EAAO,CACV,IAAK,IAAInvC,EAAI,EAAGA,EAAIgV,EAAK0+B,MAAM3/C,OAAQiM,IACrCg0C,EAASh/B,EAAK0+B,MAAM1zC,GAAI4zC,GAE1BE,EAAe9+B,EAAK9hB,KAAM,IAKhC,SAAS+gD,EAAoBL,GAC3B,IAAIM,EAAenhD,SAASS,cAAc,SAG1C,OAFA0gD,EAAap9C,KAAO,WACpB88C,EAAWhgD,YAAYsgD,GAChBA,EAGT,SAASF,EAAUryC,EAA2BiyC,GAC5C,IAAIM,EAAeD,EAAmBL,GAClC97B,EAAMnW,EAAImW,IACVpkB,EAAQiO,EAAIjO,MACZ20C,EAAY1mC,EAAI0mC,UAcpB,GAZI30C,GACFwgD,EAAazgD,aAAa,QAASC,GAGjC20C,IAGFvwB,GAAO,mBAAqBuwB,EAAU0K,QAAQ,GAAK,MAEnDj7B,GAAO,uDAAyD66B,KAAKM,SAAS7T,mBAAmB1sC,KAAKy1C,UAAUE,MAAgB,OAG9H6L,EAAavgD,WACfugD,EAAavgD,WAAWc,QAAUqjB,MAC7B,CACL,MAAOo8B,EAAalgD,WAClBkgD,EAAa1/C,YAAY0/C,EAAalgD,YAExCkgD,EAAatgD,YAAYb,SAASc,eAAeikB,K,uECnErDhpB,EAAOD,QAAU,IAA0B,yB,uBCA3CC,EAAOD,QAAU,IAA0B,2B,oCCE3C,G,OAAsB,qBAAXgG,OAAwB,CACjC,IAAID,EAAgBC,OAAO9B,SAAS6B,cACpC,GAAI,6CAAYu/C,4BAA6B,CAC3C,IAAIC,EAAmB,EAAQ,QAC/Bx/C,EAAgBw/C,IAGV,kBAAmBrhD,UACvBtD,OAAOC,eAAeqD,SAAU,gBAAiB,CAAEnD,IAAKwkD,IAI5D,IAAIC,EAAMz/C,GAAiBA,EAAcy/C,IAAIp4C,MAAM,2BAC/Co4C,IACF,IAA0BA,EAAI,IAKnB,I,qBCrBf,MAAMC,EAAa,SACbC,EAAWrwC,GACRA,EAAI9R,QAAQkiD,EAAY,CAAC1hD,EAAGxD,IAAMA,EAAIA,EAAEkjB,cAAgB,IAG3DkiC,EAAc,aACdC,EAAYvwC,GACTA,EAAI9R,QAAQoiD,EAAa,OAAOx2C,cAGzC,SAAS02C,EAAiBC,GACxB,MAAMjJ,EAAM,GAIZ,OAHAiJ,EAAUl7C,QAAQnJ,IAChBo7C,EAAIp7C,QAAO0E,IAEN02C,EAGT,SAASkJ,EAAYtiD,EAAShC,EAAKukD,GACjCviD,EAAQhC,GAAO,GAAGgH,OAAOhF,EAAQhC,IAAQ,IACzCgC,EAAQhC,GAAK2b,QAAQ4oC,GAGvB,SAASC,EAAWC,EAAIF,GACtB,GAAIE,EAAI,CACN,MAAMC,EAAQD,EAAGE,SAASJ,IAAS,GACnCG,EAAMv7C,QAAQo7C,IACZA,EAAK3lD,KAAK6lD,MAKhB,SAASG,EAAmB5lD,EAAM6N,GAChC,OAAO,IAAIg4C,YAAY7lD,EAAM,CAC3B8lD,SAAS,EACTC,YAAY,EACZC,OAAQn4C,IAIZ,MAAMo4C,EAAYp0C,GAAO,mBAAmBjM,KAAKue,OAAOtS,IAClDq0C,EAAWr0C,GAAO,kBAAkBjM,KAAKue,OAAOtS,IAEtD,SAASs0C,EAAuBzlD,EAAOV,GAAM,KAAEwH,GAAS,IACtD,GAAIy+C,EAAUz+C,GACZ,MAAc,SAAV9G,GAA8B,UAAVA,EACL,SAAVA,EAEK,KAAVA,GAAgBA,IAAUV,GAAiB,MAATU,GAG/BA,EACF,GAAIwlD,EAAS1+C,GAAO,CACzB,MAAMiC,EAASsa,WAAWrjB,EAAO,IACjC,OAAOsjB,MAAMva,GAAU/I,EAAQ+I,EAE/B,OAAO/I,EAIX,SAAS0lD,EAAUp4C,EAAGq4C,GACpB,MAAMjK,EAAM,GACZ,IAAK,IAAI38C,EAAI,EAAGC,EAAI2mD,EAAS5hD,OAAQhF,EAAIC,EAAGD,IAC1C28C,EAAI/0C,KAAKi/C,EAAQt4C,EAAGq4C,EAAS5mD,KAE/B,OAAO28C,EAGT,SAASkK,EAASt4C,EAAGhE,GACnB,GAAsB,IAAlBA,EAAKu8C,SACP,OAAOv8C,EAAKb,KAAK6F,OAAShF,EAAKb,KAAO,KACjC,GAAsB,IAAlBa,EAAKu8C,SAAgB,CAC9B,MAAMp9C,EAAO,CACXq9C,MAAOC,EAAcz8C,GACrB08C,SAAU,CACR9G,UAAW51C,EAAK41C,YAOpB,OAJIz2C,EAAKq9C,MAAMG,OACbx9C,EAAKw9C,KAAOx9C,EAAKq9C,MAAMG,YAChBx9C,EAAKq9C,MAAMG,MAEb34C,EAAEhE,EAAK48C,QAASz9C,GAEvB,OAAO,KAIX,SAASs9C,EAAez8C,GACtB,MAAMoyC,EAAM,GACZ,IAAK,IAAI38C,EAAI,EAAGC,EAAIsK,EAAK68C,WAAWpiD,OAAQhF,EAAIC,EAAGD,IAAK,CACtD,MAAMqnD,EAAO98C,EAAK68C,WAAWpnD,GAC7B28C,EAAI0K,EAAKC,UAAYD,EAAKniD,UAE5B,OAAOy3C,EAGT,SAAS4K,EAAMC,EAAKC,GAClB,MAAMC,EAA+B,oBAAdD,IAA6BA,EAAUE,IAC9D,IACIC,EACAC,EACAC,EAHAC,GAAgB,EAKpB,SAASC,EAAYP,GACnB,GAAIM,EAAe,OAEnB,MAAMxkD,EAA+B,oBAAdkkD,EACnBA,EAAUlkD,QACVkkD,EAGE7B,EAAYp7C,MAAMC,QAAQlH,EAAQuO,OACpCvO,EAAQuO,MACRpR,OAAOyZ,KAAK5W,EAAQuO,OAAS,IACjC81C,EAAsBhC,EAAUz4C,IAAIu4C,GACpCmC,EAAqBjC,EAAUz4C,IAAIq4C,GACnC,MAAMyC,EAAwBz9C,MAAMC,QAAQlH,EAAQuO,OAAS,GAAKvO,EAAQuO,OAAS,GACnFg2C,EAAoBD,EAAmB31C,OAAO,CAAC/E,EAAK5L,EAAKvB,KACvDmN,EAAI5L,GAAO0mD,EAAsBrC,EAAU5lD,IACpCmN,GACN,IAGH04C,EAAWtiD,EAAS,gBAAgB,WAClC,MAAM2kD,EAAOhmD,KAAKimD,MAClBjmD,KAAKimD,MAAQ,CAAC5nD,KAAS6N,KACrBlM,KAAKkmD,MAAMlC,SAASmC,cAAcC,cAAcnC,EAAkB5lD,EAAM6N,IACjE85C,EAAK/nD,KAAK+B,KAAM3B,KAAS6N,OAIpCy3C,EAAWtiD,EAAS,WAAW,WAE7BskD,EAAmBn9C,QAAQnJ,IACzBW,KAAKkmD,MAAMt2C,MAAMvQ,GAAOW,KAAKX,QAKjCsmD,EAAmBn9C,QAAQnJ,IACzBb,OAAOC,eAAe4nD,EAAc3mD,UAAWL,EAAK,CAClD,MACE,OAAOW,KAAKsmD,SAAS12C,MAAMvQ,IAE7B,IAAK8P,GACHnP,KAAKsmD,SAAS12C,MAAMvQ,GAAO8P,GAE7BzQ,YAAY,EACZ+Q,cAAc,MAIlBo2C,GAAgB,EAGlB,SAASU,EAAenyC,EAAI/U,GAC1B,MAAMmnD,EAAYlD,EAASjkD,GACrBN,EAAQqV,EAAGqyC,aAAapnD,GAAO+U,EAAGsyC,aAAarnD,QAAO0E,EAC5DqQ,EAAGkyC,SAAS12C,MAAM42C,GAAahC,EAC7BzlD,EACAM,EACAumD,EAAkBY,IAItB,MAAMH,UAAsBM,YAC1B,cACE,MAAM5+C,EAAO6+C,QACb7+C,EAAK8+C,aAAa,CAAE5nD,KAAM,SAE1B,MAAM6nD,EAAU/+C,EAAKu+C,SAAW,IAAIhB,EAAI,CACtCjnD,KAAM,cACN8nD,cAAep+C,EACf46C,WAAY56C,EAAK46C,WACjB,OACE,MAAO,CACL/yC,MAAO,GACPm3C,aAAc,KAGlB,OAAQ16C,GACN,OAAOA,EAAEk5C,EAAW,CAClByB,IAAK,QACLp3C,MAAO5P,KAAK4P,OACX5P,KAAK+mD,iBAKNE,EAAW,IAAIC,iBAAiBC,IACpC,IAAIC,GAAoB,EACxB,IAAK,IAAItpD,EAAI,EAAGA,EAAIqpD,EAAUrkD,OAAQhF,IAAK,CACzC,MAAMI,EAAIipD,EAAUrpD,GAChB+nD,GAA4B,eAAX3nD,EAAE2H,MAAyB3H,EAAEyR,SAAW5H,EAC3Dw+C,EAAcx+C,EAAM7J,EAAEmpD,eAEtBD,GAAoB,EAGpBA,IACFN,EAAQC,aAAevoD,OAAOmT,OAAO8yC,EACnCqC,EAAQQ,eACRv/C,EAAKlF,gBAIXokD,EAASM,QAAQx/C,EAAM,CACrBy/C,WAAW,EACXC,SAAS,EACTC,eAAe,EACfxC,YAAY,IAIhB,mBACE,OAAOllD,KAAKsmD,SAASqB,MAAMC,MAG7B,oBACE,MAAMd,EAAU9mD,KAAKsmD,SACrB,GAAKQ,EAAQe,WA6BXhE,EAAU7jD,KAAK8nD,aAAc,iBA7BN,CAEvB,MAAMC,EAAwB,KAC5BjB,EAAQl3C,MAAQ6zC,EAAgBkC,GAChCD,EAAoBl9C,QAAQnJ,IAC1BknD,EAAcvmD,KAAMX,MAIpBwmD,EACFkC,IAGAxC,IAAY7L,KAAKsO,KACXA,EAAS9oD,YAA+C,WAAjC8oD,EAASnpD,OAAOC,gBACzCkpD,EAAWA,EAASC,SAEtBnC,EAAWkC,GACXD,MAIJjB,EAAQC,aAAevoD,OAAOmT,OAAO8yC,EACnCqC,EAAQQ,eACRtnD,KAAK6C,aAEPikD,EAAQoB,SACRloD,KAAK2iD,WAAWhgD,YAAYmkD,EAAQqB,MAMxC,uBACEtE,EAAU7jD,KAAK8nD,aAAc,gBAQjC,OAJKtC,GACHM,EAAWP,GAGNc,EAGM,Q,oBCpQA,SAAS+B,EACtBC,EACA/N,EACAgO,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBI/E,EArBAviD,EAAmC,oBAAlBgnD,EACjBA,EAAchnD,QACdgnD,EAsDJ,GAnDI/N,IACFj5C,EAAQi5C,OAASA,EACjBj5C,EAAQinD,gBAAkBA,EAC1BjnD,EAAQunD,WAAY,GAIlBL,IACFlnD,EAAQwnD,YAAa,GAInBJ,IACFpnD,EAAQynD,SAAW,UAAYL,GAI7BC,GACF9E,EAAO,SAAU/6C,GAEfA,EACEA,GACC7I,KAAK+oD,QAAU/oD,KAAK+oD,OAAOC,YAC3BhpD,KAAK0H,QAAU1H,KAAK0H,OAAOqhD,QAAU/oD,KAAK0H,OAAOqhD,OAAOC,WAEtDngD,GAA0C,qBAAxBogD,sBACrBpgD,EAAUogD,qBAGRT,GACFA,EAAavqD,KAAK+B,KAAM6I,GAGtBA,GAAWA,EAAQqgD,uBACrBrgD,EAAQqgD,sBAAsBlgD,IAAI0/C,IAKtCrnD,EAAQ8nD,aAAevF,GACd4E,IACT5E,EAAO+E,EACH,WACAH,EAAavqD,KACX+B,MACCqB,EAAQwnD,WAAa7oD,KAAK0H,OAAS1H,MAAMkmD,MAAMlC,SAASrB,aAG3D6F,GAGF5E,EACF,GAAIviD,EAAQwnD,WAAY,CAGtBxnD,EAAQ+nD,cAAgBxF,EAExB,IAAIyF,EAAiBhoD,EAAQi5C,OAC7Bj5C,EAAQi5C,OAAS,SAAmCjuC,EAAGxD,GAErD,OADA+6C,EAAK3lD,KAAK4K,GACHwgD,EAAeh9C,EAAGxD,QAEtB,CAEL,IAAIygD,EAAWjoD,EAAQkoD,aACvBloD,EAAQkoD,aAAeD,EACnB,GAAGjjD,OAAOijD,EAAU1F,GACpB,CAACA,GAIT,MAAO,CACLhmD,QAASyqD,EACThnD,QAASA,GC/Fb,IAAIi5C,EAAS,WAAa,IAAIkP,EAAIxpD,KAASypD,EAAGD,EAAIlC,eAAmBoC,EAAGF,EAAIG,MAAMD,IAAID,EAAG,OAAOC,EAAG,MAAM,CAAC7E,MAAM,CAAC,GAAK,QAAQ,CAAC6E,EAAG,WAAWA,EAAG,MAAM,CAACF,EAAII,GAAG,YAAY,IACtKtB,EAAkB,GCDlB,EAAS,WAAa,IAAIkB,EAAIxpD,KAASypD,EAAGD,EAAIlC,eAAsBkC,EAAIG,MAAMD,GAAO,OAAOF,EAAIK,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIL,EAAIxpD,KAASypD,EAAGD,EAAIlC,eAAmBoC,EAAGF,EAAIG,MAAMD,IAAID,EAAG,OAAOC,EAAG,MAAM,CAAC7E,MAAM,CAAC,GAAK,WAAW,CAAC6E,EAAG,MAAM,CAAC7E,MAAM,CAAC,GAAK,uBAAuB,CAAC6E,EAAG,MAAM,CAAC7E,MAAM,CAAC,IAAM,EAAQ,QAAsB,GAAK,OAAO,IAAM,UAAU6E,EAAG,MAAM,CAAC7E,MAAM,CAAC,GAAK,kBAAkB,CAAC6E,EAAG,OAAO,CAACI,YAAY,eAAe,CAACN,EAAII,GAAG,UAAUF,EAAG,OAAO,CAACI,YAAY,eAAe,CAACN,EAAII,GAAG,UAAUF,EAAG,OAAO,CAACI,YAAY,eAAe,CAACN,EAAII,GAAG,UAAUF,EAAG,OAAO,CAACI,YAAY,eAAe,CAACN,EAAII,GAAG,UAAUF,EAAG,UAAUA,EAAG,MAAM,CAAC7E,MAAM,CAAC,GAAK,kBAAkB,CAAC6E,EAAG,MAAM,CAACI,YAAY,uBAAuB,CAACJ,EAAG,MAAM,CAACI,YAAY,eAAejF,MAAM,CAAC,IAAM,EAAQ,QAAwB,IAAM,cAAc6E,EAAG,MAAM,CAACI,YAAY,uBAAuB,CAACJ,EAAG,MAAM,CAACI,YAAY,eAAejF,MAAM,CAAC,IAAM,EAAQ,QAAsB,IAAM,YAAY6E,EAAG,MAAM,CAACI,YAAY,sBAAsBjF,MAAM,CAAC,GAAK,4BAA4B,CAAC6E,EAAG,MAAM,CAACI,YAAY,eAAejF,MAAM,CAAC,GAAK,mBAAmB,IAAM,EAAQ,QAAsB,IAAM,oBC0BjjC,GACE,KAAF,SACE,MAAF,WC7BgV,ICGhV,SAAS2D,EAAc3/C,GAErB,IAAIkhD,EAAS,EAAQ,QACnBA,EAAOC,YAAYD,EAAOC,WAAWnhD,GAMzC,IAAIohD,EAAY,EACd,EACA,EACA,GACA,EACAzB,EACA,WACA,MACC,GAGY,EAAAyB,E,QCZf,GACE,KAAF,MACE,WAAF,CACI,OAAJ,ICd8T,ICG9T,SAAS,EAAcphD,IAOvB,IAAI,EAAY,EACd,EACAyxC,EACAgO,GACA,EACA,EACA,KACA,MACC,GAGY,I,6BChBfhD,IAAI52B,IAAI9J,KACR0gC,IAAI4E,OAAOC,eAAgB,EAO3B,MAAM9D,EAAgBhB,EAAKC,IAAK8E,GAEhCxmD,OAAOymD,eAAeC,OAAO,aAAcjE,GAE3C,IAAIf,IAAI,CACJhL,OAAQjuC,GAAKA,EAAEk+C,KAChBrC,OAAO,QCTVtkD,OAAOymD,eAAeC,OAAO,aAAc,EAAK,SAAK,K,uBCPrD,IAAInlC,EAAU,EAAQ,QACnBA,EAAQjmB,aAAYimB,EAAUA,EAAQ8iC,SACnB,kBAAZ9iC,IAAsBA,EAAU,CAAC,CAACtnB,EAAOC,EAAIqnB,EAAS,MAC7DA,EAAQqlC,SAAQ3sD,EAAOD,QAAUunB,EAAQqlC,QAE5C,IAAIxhD,EAAM,EAAQ,QAA+Di/C,QACjFpqD,EAAOD,QAAQosD,WAAa,SAAUrH,GACpC35C,EAAI,WAAYmc,EAASw9B,K,qBCV3B,WAMC,SAAU/nC,EAAM7a,GAEb,EAAO,GAAI,EAAF,EAAS,kEAFtB,CAQkB,qBAATgI,MAAuBA,MAAa,WAC3C,SAASo7C,IACP,IAAIsH,EAAajsD,OAAOksD,yBAAyB5oD,SAAU,iBAE3D,IAAK2oD,GAAc,kBAAmB3oD,UAAYA,SAAS6B,cACzD,OAAO7B,SAAS6B,cAIlB,GAAI8mD,GAAcA,EAAW9rD,MAAQwkD,GAAoBrhD,SAAS6B,cAChE,OAAO7B,SAAS6B,cAKlB,IACE,MAAM,IAAID,MAEZ,MAAOuQ,GAEL,IAME02C,EACAC,EACAC,EAREC,EAAgB,kCAClBC,EAAgB,6BAChBC,EAAeF,EAAcnmD,KAAKsP,EAAI/B,QAAU64C,EAAcpmD,KAAKsP,EAAI/B,OACvE+4C,EAAkBD,GAAgBA,EAAa,KAAO,EACtD16C,EAAQ06C,GAAgBA,EAAa,KAAO,EAC5CE,EAAkBppD,SAASoC,SAAShD,KAAKC,QAAQW,SAASoC,SAASU,KAAM,IAIzEf,EAAU/B,SAASoB,qBAAqB,UAEtC+nD,IAAmBC,IACrBP,EAAa7oD,SAASqpD,gBAAgBC,UACtCR,EAA2B,IAAIrpC,OAAO,sBAAwBjR,EAAO,GAAK,iDAAkD,KAC5Hu6C,EAAqBF,EAAWxpD,QAAQypD,EAA0B,MAAMv9C,QAG1E,IAAK,IAAIvP,EAAI,EAAGA,EAAI+F,EAAQf,OAAQhF,IAAK,CAEvC,GAA8B,gBAA1B+F,EAAQ/F,GAAGq+C,WACb,OAAOt4C,EAAQ/F,GAIjB,GAAI+F,EAAQ/F,GAAGslD,MAAQ6H,EACrB,OAAOpnD,EAAQ/F,GAIjB,GACEmtD,IAAmBC,GACnBrnD,EAAQ/F,GAAGmgD,WACXp6C,EAAQ/F,GAAGmgD,UAAU5wC,SAAWw9C,EAEhC,OAAOhnD,EAAQ/F,GAKnB,OAAO,MAIX,OAAOqlD,M,qBC7ETtlD,EAAOD,QAAU0nD,K,kCCAjB","file":"asf-navbar.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"5a74\");\n","module.exports = __webpack_public_path__ + \"img/user.e6f04d30.svg\";","module.exports = __webpack_public_path__ + \"img/Logo.4919af69.svg\";","/**\n * Less - Leaner CSS v4.1.1\n * http://lesscss.org\n * \n * Copyright (c) 2009-2021, Alexis Sellier <self@cloudhead.net>\n * Licensed under the Apache-2.0 License.\n *\n * @license Apache-2.0\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.less = factory());\n}(this, (function () { 'use strict';\n\n    // Export a new default each time\r\n    function defaultOptions () {\r\n        return {\r\n            /* Inline Javascript - @plugin still allowed */\r\n            javascriptEnabled: false,\r\n            /* Outputs a makefile import dependency list to stdout. */\r\n            depends: false,\r\n            /* (DEPRECATED) Compress using less built-in compression.\r\n             * This does an okay job but does not utilise all the tricks of\r\n             * dedicated css compression. */\r\n            compress: false,\r\n            /* Runs the less parser and just reports errors without any output. */\r\n            lint: false,\r\n            /* Sets available include paths.\r\n             * If the file in an @import rule does not exist at that exact location,\r\n             * less will look for it at the location(s) passed to this option.\r\n             * You might use this for instance to specify a path to a library which\r\n             * you want to be referenced simply and relatively in the less files. */\r\n            paths: [],\r\n            /* color output in the terminal */\r\n            color: true,\r\n            /* The strictImports controls whether the compiler will allow an @import inside of either\r\n             * @media blocks or (a later addition) other selector blocks.\r\n             * See: https://github.com/less/less.js/issues/656 */\r\n            strictImports: false,\r\n            /* Allow Imports from Insecure HTTPS Hosts */\r\n            insecure: false,\r\n            /* Allows you to add a path to every generated import and url in your css.\r\n             * This does not affect less import statements that are processed, just ones\r\n             * that are left in the output css. */\r\n            rootpath: '',\r\n            /* By default URLs are kept as-is, so if you import a file in a sub-directory\r\n             * that references an image, exactly the same URL will be output in the css.\r\n             * This option allows you to re-write URL's in imported files so that the\r\n             * URL is always relative to the base imported file */\r\n            rewriteUrls: false,\r\n            /* How to process math\r\n             *   0 always           - eagerly try to solve all operations\r\n             *   1 parens-division  - require parens for division \"/\"\r\n             *   2 parens | strict  - require parens for all operations\r\n             *   3 strict-legacy    - legacy strict behavior (super-strict)\r\n             */\r\n            math: 1,\r\n            /* Without this option, less attempts to guess at the output unit when it does maths. */\r\n            strictUnits: false,\r\n            /* Effectively the declaration is put at the top of your base Less file,\r\n             * meaning it can be used but it also can be overridden if this variable\r\n             * is defined in the file. */\r\n            globalVars: null,\r\n            /* As opposed to the global variable option, this puts the declaration at the\r\n             * end of your base file, meaning it will override anything defined in your Less file. */\r\n            modifyVars: null,\r\n            /* This option allows you to specify a argument to go on to every URL.  */\r\n            urlArgs: ''\r\n        };\r\n    }\n\n    function extractId(href) {\r\n        return href.replace(/^[a-z-]+:\\/+?[^\\/]+/, '') // Remove protocol & domain\r\n            .replace(/[\\?\\&]livereload=\\w+/, '') // Remove LiveReload cachebuster\r\n            .replace(/^\\//, '') // Remove root /\r\n            .replace(/\\.[a-zA-Z]+$/, '') // Remove simple extension\r\n            .replace(/[^\\.\\w-]+/g, '-') // Replace illegal characters\r\n            .replace(/\\./g, ':'); // Replace dots with colons(for valid id)\r\n    }\r\n    function addDataAttr(options, tag) {\r\n        for (var opt in tag.dataset) {\r\n            if (tag.dataset.hasOwnProperty(opt)) {\r\n                if (opt === 'env' || opt === 'dumpLineNumbers' || opt === 'rootpath' || opt === 'errorReporting') {\r\n                    options[opt] = tag.dataset[opt];\r\n                }\r\n                else {\r\n                    try {\r\n                        options[opt] = JSON.parse(tag.dataset[opt]);\r\n                    }\r\n                    catch (_) { }\r\n                }\r\n            }\r\n        }\r\n    }\n\n    var browser = {\r\n        createCSS: function (document, styles, sheet) {\r\n            // Strip the query-string\r\n            var href = sheet.href || '';\r\n            // If there is no title set, use the filename, minus the extension\r\n            var id = \"less:\" + (sheet.title || extractId(href));\r\n            // If this has already been inserted into the DOM, we may need to replace it\r\n            var oldStyleNode = document.getElementById(id);\r\n            var keepOldStyleNode = false;\r\n            // Create a new stylesheet node for insertion or (if necessary) replacement\r\n            var styleNode = document.createElement('style');\r\n            styleNode.setAttribute('type', 'text/css');\r\n            if (sheet.media) {\r\n                styleNode.setAttribute('media', sheet.media);\r\n            }\r\n            styleNode.id = id;\r\n            if (!styleNode.styleSheet) {\r\n                styleNode.appendChild(document.createTextNode(styles));\r\n                // If new contents match contents of oldStyleNode, don't replace oldStyleNode\r\n                keepOldStyleNode = (oldStyleNode !== null && oldStyleNode.childNodes.length > 0 && styleNode.childNodes.length > 0 &&\r\n                    oldStyleNode.firstChild.nodeValue === styleNode.firstChild.nodeValue);\r\n            }\r\n            var head = document.getElementsByTagName('head')[0];\r\n            // If there is no oldStyleNode, just append; otherwise, only append if we need\r\n            // to replace oldStyleNode with an updated stylesheet\r\n            if (oldStyleNode === null || keepOldStyleNode === false) {\r\n                var nextEl = sheet && sheet.nextSibling || null;\r\n                if (nextEl) {\r\n                    nextEl.parentNode.insertBefore(styleNode, nextEl);\r\n                }\r\n                else {\r\n                    head.appendChild(styleNode);\r\n                }\r\n            }\r\n            if (oldStyleNode && keepOldStyleNode === false) {\r\n                oldStyleNode.parentNode.removeChild(oldStyleNode);\r\n            }\r\n            // For IE.\r\n            // This needs to happen *after* the style element is added to the DOM, otherwise IE 7 and 8 may crash.\r\n            // See http://social.msdn.microsoft.com/Forums/en-US/7e081b65-878a-4c22-8e68-c10d39c2ed32/internet-explorer-crashes-appending-style-element-to-head\r\n            if (styleNode.styleSheet) {\r\n                try {\r\n                    styleNode.styleSheet.cssText = styles;\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Couldn\\'t reassign styleSheet.cssText.');\r\n                }\r\n            }\r\n        },\r\n        currentScript: function (window) {\r\n            var document = window.document;\r\n            return document.currentScript || (function () {\r\n                var scripts = document.getElementsByTagName('script');\r\n                return scripts[scripts.length - 1];\r\n            })();\r\n        }\r\n    };\n\n    var addDefaultOptions = (function (window, options) {\r\n        // use options from the current script tag data attribues\r\n        addDataAttr(options, browser.currentScript(window));\r\n        if (options.isFileProtocol === undefined) {\r\n            options.isFileProtocol = /^(file|(chrome|safari)(-extension)?|resource|qrc|app):/.test(window.location.protocol);\r\n        }\r\n        // Load styles asynchronously (default: false)\r\n        //\r\n        // This is set to `false` by default, so that the body\r\n        // doesn't start loading before the stylesheets are parsed.\r\n        // Setting this to `true` can result in flickering.\r\n        //\r\n        options.async = options.async || false;\r\n        options.fileAsync = options.fileAsync || false;\r\n        // Interval between watch polls\r\n        options.poll = options.poll || (options.isFileProtocol ? 1000 : 1500);\r\n        options.env = options.env || (window.location.hostname == '127.0.0.1' ||\r\n            window.location.hostname == '0.0.0.0' ||\r\n            window.location.hostname == 'localhost' ||\r\n            (window.location.port &&\r\n                window.location.port.length > 0) ||\r\n            options.isFileProtocol ? 'development'\r\n            : 'production');\r\n        var dumpLineNumbers = /!dumpLineNumbers:(comments|mediaquery|all)/.exec(window.location.hash);\r\n        if (dumpLineNumbers) {\r\n            options.dumpLineNumbers = dumpLineNumbers[1];\r\n        }\r\n        if (options.useFileCache === undefined) {\r\n            options.useFileCache = true;\r\n        }\r\n        if (options.onReady === undefined) {\r\n            options.onReady = true;\r\n        }\r\n        if (options.relativeUrls) {\r\n            options.rewriteUrls = 'all';\r\n        }\r\n    });\n\n    var logger = {\r\n        error: function (msg) {\r\n            this._fireEvent('error', msg);\r\n        },\r\n        warn: function (msg) {\r\n            this._fireEvent('warn', msg);\r\n        },\r\n        info: function (msg) {\r\n            this._fireEvent('info', msg);\r\n        },\r\n        debug: function (msg) {\r\n            this._fireEvent('debug', msg);\r\n        },\r\n        addListener: function (listener) {\r\n            this._listeners.push(listener);\r\n        },\r\n        removeListener: function (listener) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                if (this._listeners[i] === listener) {\r\n                    this._listeners.splice(i, 1);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n        _fireEvent: function (type, msg) {\r\n            for (var i = 0; i < this._listeners.length; i++) {\r\n                var logFunction = this._listeners[i][type];\r\n                if (logFunction) {\r\n                    logFunction(msg);\r\n                }\r\n            }\r\n        },\r\n        _listeners: []\r\n    };\n\n    /**\r\n     * @todo Document why this abstraction exists, and the relationship between\r\n     *       environment, file managers, and plugin manager\r\n     */\r\n    var Environment = /** @class */ (function () {\r\n        function Environment(externalEnvironment, fileManagers) {\r\n            this.fileManagers = fileManagers || [];\r\n            externalEnvironment = externalEnvironment || {};\r\n            var optionalFunctions = ['encodeBase64', 'mimeLookup', 'charsetLookup', 'getSourceMapGenerator'];\r\n            var requiredFunctions = [];\r\n            var functions = requiredFunctions.concat(optionalFunctions);\r\n            for (var i = 0; i < functions.length; i++) {\r\n                var propName = functions[i];\r\n                var environmentFunc = externalEnvironment[propName];\r\n                if (environmentFunc) {\r\n                    this[propName] = environmentFunc.bind(externalEnvironment);\r\n                }\r\n                else if (i < requiredFunctions.length) {\r\n                    this.warn(\"missing required function in environment - \" + propName);\r\n                }\r\n            }\r\n        }\r\n        Environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\r\n            if (!filename) {\r\n                logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\r\n            }\r\n            if (currentDirectory == null) {\r\n                logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\r\n            }\r\n            var fileManagers = this.fileManagers;\r\n            if (options.pluginManager) {\r\n                fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\r\n            }\r\n            for (var i = fileManagers.length - 1; i >= 0; i--) {\r\n                var fileManager = fileManagers[i];\r\n                if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\r\n                    return fileManager;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        Environment.prototype.addFileManager = function (fileManager) {\r\n            this.fileManagers.push(fileManager);\r\n        };\r\n        Environment.prototype.clearFileManagers = function () {\r\n            this.fileManagers = [];\r\n        };\r\n        return Environment;\r\n    }());\n\n    var colors = {\r\n        'aliceblue': '#f0f8ff',\r\n        'antiquewhite': '#faebd7',\r\n        'aqua': '#00ffff',\r\n        'aquamarine': '#7fffd4',\r\n        'azure': '#f0ffff',\r\n        'beige': '#f5f5dc',\r\n        'bisque': '#ffe4c4',\r\n        'black': '#000000',\r\n        'blanchedalmond': '#ffebcd',\r\n        'blue': '#0000ff',\r\n        'blueviolet': '#8a2be2',\r\n        'brown': '#a52a2a',\r\n        'burlywood': '#deb887',\r\n        'cadetblue': '#5f9ea0',\r\n        'chartreuse': '#7fff00',\r\n        'chocolate': '#d2691e',\r\n        'coral': '#ff7f50',\r\n        'cornflowerblue': '#6495ed',\r\n        'cornsilk': '#fff8dc',\r\n        'crimson': '#dc143c',\r\n        'cyan': '#00ffff',\r\n        'darkblue': '#00008b',\r\n        'darkcyan': '#008b8b',\r\n        'darkgoldenrod': '#b8860b',\r\n        'darkgray': '#a9a9a9',\r\n        'darkgrey': '#a9a9a9',\r\n        'darkgreen': '#006400',\r\n        'darkkhaki': '#bdb76b',\r\n        'darkmagenta': '#8b008b',\r\n        'darkolivegreen': '#556b2f',\r\n        'darkorange': '#ff8c00',\r\n        'darkorchid': '#9932cc',\r\n        'darkred': '#8b0000',\r\n        'darksalmon': '#e9967a',\r\n        'darkseagreen': '#8fbc8f',\r\n        'darkslateblue': '#483d8b',\r\n        'darkslategray': '#2f4f4f',\r\n        'darkslategrey': '#2f4f4f',\r\n        'darkturquoise': '#00ced1',\r\n        'darkviolet': '#9400d3',\r\n        'deeppink': '#ff1493',\r\n        'deepskyblue': '#00bfff',\r\n        'dimgray': '#696969',\r\n        'dimgrey': '#696969',\r\n        'dodgerblue': '#1e90ff',\r\n        'firebrick': '#b22222',\r\n        'floralwhite': '#fffaf0',\r\n        'forestgreen': '#228b22',\r\n        'fuchsia': '#ff00ff',\r\n        'gainsboro': '#dcdcdc',\r\n        'ghostwhite': '#f8f8ff',\r\n        'gold': '#ffd700',\r\n        'goldenrod': '#daa520',\r\n        'gray': '#808080',\r\n        'grey': '#808080',\r\n        'green': '#008000',\r\n        'greenyellow': '#adff2f',\r\n        'honeydew': '#f0fff0',\r\n        'hotpink': '#ff69b4',\r\n        'indianred': '#cd5c5c',\r\n        'indigo': '#4b0082',\r\n        'ivory': '#fffff0',\r\n        'khaki': '#f0e68c',\r\n        'lavender': '#e6e6fa',\r\n        'lavenderblush': '#fff0f5',\r\n        'lawngreen': '#7cfc00',\r\n        'lemonchiffon': '#fffacd',\r\n        'lightblue': '#add8e6',\r\n        'lightcoral': '#f08080',\r\n        'lightcyan': '#e0ffff',\r\n        'lightgoldenrodyellow': '#fafad2',\r\n        'lightgray': '#d3d3d3',\r\n        'lightgrey': '#d3d3d3',\r\n        'lightgreen': '#90ee90',\r\n        'lightpink': '#ffb6c1',\r\n        'lightsalmon': '#ffa07a',\r\n        'lightseagreen': '#20b2aa',\r\n        'lightskyblue': '#87cefa',\r\n        'lightslategray': '#778899',\r\n        'lightslategrey': '#778899',\r\n        'lightsteelblue': '#b0c4de',\r\n        'lightyellow': '#ffffe0',\r\n        'lime': '#00ff00',\r\n        'limegreen': '#32cd32',\r\n        'linen': '#faf0e6',\r\n        'magenta': '#ff00ff',\r\n        'maroon': '#800000',\r\n        'mediumaquamarine': '#66cdaa',\r\n        'mediumblue': '#0000cd',\r\n        'mediumorchid': '#ba55d3',\r\n        'mediumpurple': '#9370d8',\r\n        'mediumseagreen': '#3cb371',\r\n        'mediumslateblue': '#7b68ee',\r\n        'mediumspringgreen': '#00fa9a',\r\n        'mediumturquoise': '#48d1cc',\r\n        'mediumvioletred': '#c71585',\r\n        'midnightblue': '#191970',\r\n        'mintcream': '#f5fffa',\r\n        'mistyrose': '#ffe4e1',\r\n        'moccasin': '#ffe4b5',\r\n        'navajowhite': '#ffdead',\r\n        'navy': '#000080',\r\n        'oldlace': '#fdf5e6',\r\n        'olive': '#808000',\r\n        'olivedrab': '#6b8e23',\r\n        'orange': '#ffa500',\r\n        'orangered': '#ff4500',\r\n        'orchid': '#da70d6',\r\n        'palegoldenrod': '#eee8aa',\r\n        'palegreen': '#98fb98',\r\n        'paleturquoise': '#afeeee',\r\n        'palevioletred': '#d87093',\r\n        'papayawhip': '#ffefd5',\r\n        'peachpuff': '#ffdab9',\r\n        'peru': '#cd853f',\r\n        'pink': '#ffc0cb',\r\n        'plum': '#dda0dd',\r\n        'powderblue': '#b0e0e6',\r\n        'purple': '#800080',\r\n        'rebeccapurple': '#663399',\r\n        'red': '#ff0000',\r\n        'rosybrown': '#bc8f8f',\r\n        'royalblue': '#4169e1',\r\n        'saddlebrown': '#8b4513',\r\n        'salmon': '#fa8072',\r\n        'sandybrown': '#f4a460',\r\n        'seagreen': '#2e8b57',\r\n        'seashell': '#fff5ee',\r\n        'sienna': '#a0522d',\r\n        'silver': '#c0c0c0',\r\n        'skyblue': '#87ceeb',\r\n        'slateblue': '#6a5acd',\r\n        'slategray': '#708090',\r\n        'slategrey': '#708090',\r\n        'snow': '#fffafa',\r\n        'springgreen': '#00ff7f',\r\n        'steelblue': '#4682b4',\r\n        'tan': '#d2b48c',\r\n        'teal': '#008080',\r\n        'thistle': '#d8bfd8',\r\n        'tomato': '#ff6347',\r\n        'turquoise': '#40e0d0',\r\n        'violet': '#ee82ee',\r\n        'wheat': '#f5deb3',\r\n        'white': '#ffffff',\r\n        'whitesmoke': '#f5f5f5',\r\n        'yellow': '#ffff00',\r\n        'yellowgreen': '#9acd32'\r\n    };\n\n    var unitConversions = {\r\n        length: {\r\n            'm': 1,\r\n            'cm': 0.01,\r\n            'mm': 0.001,\r\n            'in': 0.0254,\r\n            'px': 0.0254 / 96,\r\n            'pt': 0.0254 / 72,\r\n            'pc': 0.0254 / 72 * 12\r\n        },\r\n        duration: {\r\n            's': 1,\r\n            'ms': 0.001\r\n        },\r\n        angle: {\r\n            'rad': 1 / (2 * Math.PI),\r\n            'deg': 1 / 360,\r\n            'grad': 1 / 400,\r\n            'turn': 1\r\n        }\r\n    };\n\n    var data = { colors: colors, unitConversions: unitConversions };\n\n    /**\r\n     * The reason why Node is a class and other nodes simply do not extend\r\n     * from Node (since we're transpiling) is due to this issue:\r\n     *\r\n     * https://github.com/less/less.js/issues/3434\r\n     */\r\n    var Node = /** @class */ (function () {\r\n        function Node() {\r\n            this.parent = null;\r\n            this.visibilityBlocks = undefined;\r\n            this.nodeVisible = undefined;\r\n            this.rootNode = null;\r\n            this.parsed = null;\r\n            var self = this;\r\n            Object.defineProperty(this, 'currentFileInfo', {\r\n                get: function () { return self.fileInfo(); }\r\n            });\r\n            Object.defineProperty(this, 'index', {\r\n                get: function () { return self.getIndex(); }\r\n            });\r\n        }\r\n        Node.prototype.setParent = function (nodes, parent) {\r\n            function set(node) {\r\n                if (node && node instanceof Node) {\r\n                    node.parent = parent;\r\n                }\r\n            }\r\n            if (Array.isArray(nodes)) {\r\n                nodes.forEach(set);\r\n            }\r\n            else {\r\n                set(nodes);\r\n            }\r\n        };\r\n        Node.prototype.getIndex = function () {\r\n            return this._index || (this.parent && this.parent.getIndex()) || 0;\r\n        };\r\n        Node.prototype.fileInfo = function () {\r\n            return this._fileInfo || (this.parent && this.parent.fileInfo()) || {};\r\n        };\r\n        Node.prototype.isRulesetLike = function () { return false; };\r\n        Node.prototype.toCSS = function (context) {\r\n            var strs = [];\r\n            this.genCSS(context, {\r\n                add: function (chunk, fileInfo, index) {\r\n                    strs.push(chunk);\r\n                },\r\n                isEmpty: function () {\r\n                    return strs.length === 0;\r\n                }\r\n            });\r\n            return strs.join('');\r\n        };\r\n        Node.prototype.genCSS = function (context, output) {\r\n            output.add(this.value);\r\n        };\r\n        Node.prototype.accept = function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        };\r\n        Node.prototype.eval = function () { return this; };\r\n        Node.prototype._operate = function (context, op, a, b) {\r\n            switch (op) {\r\n                case '+': return a + b;\r\n                case '-': return a - b;\r\n                case '*': return a * b;\r\n                case '/': return a / b;\r\n            }\r\n        };\r\n        Node.prototype.fround = function (context, value) {\r\n            var precision = context && context.numPrecision;\r\n            // add \"epsilon\" to ensure numbers like 1.000000005 (represented as 1.000000004999...) are properly rounded:\r\n            return (precision) ? Number((value + 2e-16).toFixed(precision)) : value;\r\n        };\r\n        Node.compare = function (a, b) {\r\n            /* returns:\r\n             -1: a < b\r\n             0: a = b\r\n             1: a > b\r\n             and *any* other value for a != b (e.g. undefined, NaN, -2 etc.) */\r\n            if ((a.compare) &&\r\n                // for \"symmetric results\" force toCSS-based comparison\r\n                // of Quoted or Anonymous if either value is one of those\r\n                !(b.type === 'Quoted' || b.type === 'Anonymous')) {\r\n                return a.compare(b);\r\n            }\r\n            else if (b.compare) {\r\n                return -b.compare(a);\r\n            }\r\n            else if (a.type !== b.type) {\r\n                return undefined;\r\n            }\r\n            a = a.value;\r\n            b = b.value;\r\n            if (!Array.isArray(a)) {\r\n                return a === b ? 0 : undefined;\r\n            }\r\n            if (a.length !== b.length) {\r\n                return undefined;\r\n            }\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (Node.compare(a[i], b[i]) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        Node.numericCompare = function (a, b) {\r\n            return a < b ? -1\r\n                : a === b ? 0\r\n                    : a > b ? 1 : undefined;\r\n        };\r\n        // Returns true if this node represents root of ast imported by reference\r\n        Node.prototype.blocksVisibility = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            return this.visibilityBlocks !== 0;\r\n        };\r\n        Node.prototype.addVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks + 1;\r\n        };\r\n        Node.prototype.removeVisibilityBlock = function () {\r\n            if (this.visibilityBlocks == null) {\r\n                this.visibilityBlocks = 0;\r\n            }\r\n            this.visibilityBlocks = this.visibilityBlocks - 1;\r\n        };\r\n        // Turns on node visibility - if called node will be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureVisibility = function () {\r\n            this.nodeVisible = true;\r\n        };\r\n        // Turns off node visibility - if called node will NOT be shown in output regardless\r\n        // of whether it comes from import by reference or not\r\n        Node.prototype.ensureInvisibility = function () {\r\n            this.nodeVisible = false;\r\n        };\r\n        // return values:\r\n        // false - the node must not be visible\r\n        // true - the node must be visible\r\n        // undefined or null - the node has the same visibility as its parent\r\n        Node.prototype.isVisible = function () {\r\n            return this.nodeVisible;\r\n        };\r\n        Node.prototype.visibilityInfo = function () {\r\n            return {\r\n                visibilityBlocks: this.visibilityBlocks,\r\n                nodeVisible: this.nodeVisible\r\n            };\r\n        };\r\n        Node.prototype.copyVisibilityInfo = function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            this.visibilityBlocks = info.visibilityBlocks;\r\n            this.nodeVisible = info.nodeVisible;\r\n        };\r\n        return Node;\r\n    }());\n\n    //\r\n    // RGB Colors - #ff0014, #eee\r\n    //\r\n    var Color = function (rgb, a, originalForm) {\r\n        var self = this;\r\n        //\r\n        // The end goal here, is to parse the arguments\r\n        // into an integer triplet, such as `128, 255, 0`\r\n        //\r\n        // This facilitates operations and conversions.\r\n        //\r\n        if (Array.isArray(rgb)) {\r\n            this.rgb = rgb;\r\n        }\r\n        else if (rgb.length >= 6) {\r\n            this.rgb = [];\r\n            rgb.match(/.{2}/g).map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.rgb = [];\r\n            rgb.split('').map(function (c, i) {\r\n                if (i < 3) {\r\n                    self.rgb.push(parseInt(c + c, 16));\r\n                }\r\n                else {\r\n                    self.alpha = (parseInt(c + c, 16)) / 255;\r\n                }\r\n            });\r\n        }\r\n        this.alpha = this.alpha || (typeof a === 'number' ? a : 1);\r\n        if (typeof originalForm !== 'undefined') {\r\n            this.value = originalForm;\r\n        }\r\n    };\r\n    Color.prototype = Object.assign(new Node(), {\r\n        type: 'Color',\r\n        luma: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255;\r\n            r = (r <= 0.03928) ? r / 12.92 : Math.pow(((r + 0.055) / 1.055), 2.4);\r\n            g = (g <= 0.03928) ? g / 12.92 : Math.pow(((g + 0.055) / 1.055), 2.4);\r\n            b = (b <= 0.03928) ? b / 12.92 : Math.pow(((b + 0.055) / 1.055), 2.4);\r\n            return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context, doNotCompress) {\r\n            var compress = context && context.compress && !doNotCompress;\r\n            var color;\r\n            var alpha;\r\n            var colorFunction;\r\n            var args = [];\r\n            // `value` is set if this color was originally\r\n            // converted from a named color string so we need\r\n            // to respect this and try to output named color too.\r\n            alpha = this.fround(context, this.alpha);\r\n            if (this.value) {\r\n                if (this.value.indexOf('rgb') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'rgba';\r\n                    }\r\n                }\r\n                else if (this.value.indexOf('hsl') === 0) {\r\n                    if (alpha < 1) {\r\n                        colorFunction = 'hsla';\r\n                    }\r\n                    else {\r\n                        colorFunction = 'hsl';\r\n                    }\r\n                }\r\n                else {\r\n                    return this.value;\r\n                }\r\n            }\r\n            else {\r\n                if (alpha < 1) {\r\n                    colorFunction = 'rgba';\r\n                }\r\n            }\r\n            switch (colorFunction) {\r\n                case 'rgba':\r\n                    args = this.rgb.map(function (c) {\r\n                        return clamp(Math.round(c), 255);\r\n                    }).concat(clamp(alpha, 1));\r\n                    break;\r\n                case 'hsla':\r\n                    args.push(clamp(alpha, 1));\r\n                case 'hsl':\r\n                    color = this.toHSL();\r\n                    args = [\r\n                        this.fround(context, color.h),\r\n                        this.fround(context, color.s * 100) + \"%\",\r\n                        this.fround(context, color.l * 100) + \"%\"\r\n                    ].concat(args);\r\n            }\r\n            if (colorFunction) {\r\n                // Values are capped between `0` and `255`, rounded and zero-padded.\r\n                return colorFunction + \"(\" + args.join(\",\" + (compress ? '' : ' ')) + \")\";\r\n            }\r\n            color = this.toRGB();\r\n            if (compress) {\r\n                var splitcolor = color.split('');\r\n                // Convert color to short format\r\n                if (splitcolor[1] === splitcolor[2] && splitcolor[3] === splitcolor[4] && splitcolor[5] === splitcolor[6]) {\r\n                    color = \"#\" + splitcolor[1] + splitcolor[3] + splitcolor[5];\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        //\r\n        // Operations have to be done per-channel, if not,\r\n        // channels will spill onto each other. Once we have\r\n        // our result, in the form of an integer triplet,\r\n        // we create a new Color node to hold the result.\r\n        //\r\n        operate: function (context, op, other) {\r\n            var rgb = new Array(3);\r\n            var alpha = this.alpha * (1 - other.alpha) + other.alpha;\r\n            for (var c = 0; c < 3; c++) {\r\n                rgb[c] = this._operate(context, op, this.rgb[c], other.rgb[c]);\r\n            }\r\n            return new Color(rgb, alpha);\r\n        },\r\n        toRGB: function () {\r\n            return toHex(this.rgb);\r\n        },\r\n        toHSL: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var l = (max + min) / 2;\r\n            var d = max - min;\r\n            if (max === min) {\r\n                h = s = 0;\r\n            }\r\n            else {\r\n                s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, l: l, a: a };\r\n        },\r\n        // Adapted from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\r\n        toHSV: function () {\r\n            var r = this.rgb[0] / 255, g = this.rgb[1] / 255, b = this.rgb[2] / 255, a = this.alpha;\r\n            var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            var h;\r\n            var s;\r\n            var v = max;\r\n            var d = max - min;\r\n            if (max === 0) {\r\n                s = 0;\r\n            }\r\n            else {\r\n                s = d / max;\r\n            }\r\n            if (max === min) {\r\n                h = 0;\r\n            }\r\n            else {\r\n                switch (max) {\r\n                    case r:\r\n                        h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                h /= 6;\r\n            }\r\n            return { h: h * 360, s: s, v: v, a: a };\r\n        },\r\n        toARGB: function () {\r\n            return toHex([this.alpha * 255].concat(this.rgb));\r\n        },\r\n        compare: function (x) {\r\n            return (x.rgb &&\r\n                x.rgb[0] === this.rgb[0] &&\r\n                x.rgb[1] === this.rgb[1] &&\r\n                x.rgb[2] === this.rgb[2] &&\r\n                x.alpha === this.alpha) ? 0 : undefined;\r\n        }\r\n    });\r\n    Color.fromKeyword = function (keyword) {\r\n        var c;\r\n        var key = keyword.toLowerCase();\r\n        if (colors.hasOwnProperty(key)) {\r\n            c = new Color(colors[key].slice(1));\r\n        }\r\n        else if (key === 'transparent') {\r\n            c = new Color([0, 0, 0], 0);\r\n        }\r\n        if (c) {\r\n            c.value = keyword;\r\n            return c;\r\n        }\r\n    };\r\n    function clamp(v, max) {\r\n        return Math.min(Math.max(v, 0), max);\r\n    }\r\n    function toHex(v) {\r\n        return \"#\" + v.map(function (c) {\r\n            c = clamp(Math.round(c), 255);\r\n            return (c < 16 ? '0' : '') + c.toString(16);\r\n        }).join('');\r\n    }\n\n    var Paren = function (node) {\r\n        this.value = node;\r\n    };\r\n    Paren.prototype = Object.assign(new Node(), {\r\n        type: 'Paren',\r\n        genCSS: function (context, output) {\r\n            output.add('(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            return new Paren(this.value.eval(context));\r\n        }\r\n    });\n\n    var _noSpaceCombinators = {\r\n        '': true,\r\n        ' ': true,\r\n        '|': true\r\n    };\r\n    var Combinator = function (value) {\r\n        if (value === ' ') {\r\n            this.value = ' ';\r\n            this.emptyOrWhitespace = true;\r\n        }\r\n        else {\r\n            this.value = value ? value.trim() : '';\r\n            this.emptyOrWhitespace = this.value === '';\r\n        }\r\n    };\r\n    Combinator.prototype = Object.assign(new Node(), {\r\n        type: 'Combinator',\r\n        genCSS: function (context, output) {\r\n            var spaceOrEmpty = (context.compress || _noSpaceCombinators[this.value]) ? '' : ' ';\r\n            output.add(spaceOrEmpty + this.value + spaceOrEmpty);\r\n        }\r\n    });\n\n    var Element = function (combinator, value, isVariable, index, currentFileInfo, visibilityInfo) {\r\n        this.combinator = combinator instanceof Combinator ?\r\n            combinator : new Combinator(combinator);\r\n        if (typeof value === 'string') {\r\n            this.value = value.trim();\r\n        }\r\n        else if (value) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = '';\r\n        }\r\n        this.isVariable = isVariable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.combinator, this);\r\n    };\r\n    Element.prototype = Object.assign(new Node(), {\r\n        type: 'Element',\r\n        accept: function (visitor) {\r\n            var value = this.value;\r\n            this.combinator = visitor.visit(this.combinator);\r\n            if (typeof value === 'object') {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            return new Element(this.combinator, this.value.eval ? this.value.eval(context) : this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function () {\r\n            return new Element(this.combinator, this.value, this.isVariable, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context), this.fileInfo(), this.getIndex());\r\n        },\r\n        toCSS: function (context) {\r\n            context = context || {};\r\n            var value = this.value;\r\n            var firstSelector = context.firstSelector;\r\n            if (value instanceof Paren) {\r\n                // selector in parens should not be affected by outer selector\r\n                // flags (breaks only interpolated selectors - see #1973)\r\n                context.firstSelector = true;\r\n            }\r\n            value = value.toCSS ? value.toCSS(context) : value;\r\n            context.firstSelector = firstSelector;\r\n            if (value === '' && this.combinator.value.charAt(0) === '&') {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.combinator.toCSS(context) + value;\r\n            }\r\n        }\r\n    });\n\n    var Math$1 = {\r\n        ALWAYS: 0,\r\n        PARENS_DIVISION: 1,\r\n        PARENS: 2\r\n        // removed - STRICT_LEGACY: 3\r\n    };\r\n    var RewriteUrls = {\r\n        OFF: 0,\r\n        LOCAL: 1,\r\n        ALL: 2\r\n    };\n\n    /**\r\n     * Returns the object type of the given payload\r\n     *\r\n     * @param {*} payload\r\n     * @returns {string}\r\n     */\r\n    function getType(payload) {\r\n        return Object.prototype.toString.call(payload).slice(8, -1);\r\n    }\r\n    /**\r\n     * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n     *\r\n     * @param {*} payload\r\n     * @returns {payload is Record<string, any>}\r\n     */\r\n    function isPlainObject(payload) {\r\n        if (getType(payload) !== 'Object')\r\n            return false;\r\n        return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n    }\r\n    /**\r\n     * Returns whether the payload is an array\r\n     *\r\n     * @param {any} payload\r\n     * @returns {payload is any[]}\r\n     */\r\n    function isArray(payload) {\r\n        return getType(payload) === 'Array';\r\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    function assignProp(carry, key, newVal, originalObject, includeNonenumerable) {\r\n        var propType = {}.propertyIsEnumerable.call(originalObject, key)\r\n            ? 'enumerable'\r\n            : 'nonenumerable';\r\n        if (propType === 'enumerable')\r\n            carry[key] = newVal;\r\n        if (includeNonenumerable && propType === 'nonenumerable') {\r\n            Object.defineProperty(carry, key, {\r\n                value: newVal,\r\n                enumerable: false,\r\n                writable: true,\r\n                configurable: true,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Copy (clone) an object and all its props recursively to get rid of any prop referenced of the original object. Arrays are also cloned, however objects inside arrays are still linked.\r\n     *\r\n     * @export\r\n     * @template T\r\n     * @param {T} target Target can be anything\r\n     * @param {Options} [options={}] Options can be `props` or `nonenumerable`\r\n     * @returns {T} the target with replaced values\r\n     * @export\r\n     */\r\n    function copy(target, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (isArray(target))\r\n            return target.map(function (i) { return copy(i, options); });\r\n        if (!isPlainObject(target))\r\n            return target;\r\n        var props = Object.getOwnPropertyNames(target);\r\n        var symbols = Object.getOwnPropertySymbols(target);\r\n        return __spreadArrays(props, symbols).reduce(function (carry, key) {\r\n            if (isArray(options.props) && !options.props.includes(key)) {\r\n                return carry;\r\n            }\r\n            var val = target[key];\r\n            var newVal = copy(val, options);\r\n            assignProp(carry, key, newVal, target, options.nonenumerable);\r\n            return carry;\r\n        }, {});\r\n    }\n\n    /* jshint proto: true */\r\n    function getLocation(index, inputStream) {\r\n        var n = index + 1;\r\n        var line = null;\r\n        var column = -1;\r\n        while (--n >= 0 && inputStream.charAt(n) !== '\\n') {\r\n            column++;\r\n        }\r\n        if (typeof index === 'number') {\r\n            line = (inputStream.slice(0, index).match(/\\n/g) || '').length;\r\n        }\r\n        return {\r\n            line: line,\r\n            column: column\r\n        };\r\n    }\r\n    function copyArray(arr) {\r\n        var i;\r\n        var length = arr.length;\r\n        var copy = new Array(length);\r\n        for (i = 0; i < length; i++) {\r\n            copy[i] = arr[i];\r\n        }\r\n        return copy;\r\n    }\r\n    function clone(obj) {\r\n        var cloned = {};\r\n        for (var prop in obj) {\r\n            if (obj.hasOwnProperty(prop)) {\r\n                cloned[prop] = obj[prop];\r\n            }\r\n        }\r\n        return cloned;\r\n    }\r\n    function defaults(obj1, obj2) {\r\n        var newObj = obj2 || {};\r\n        if (!obj2._defaults) {\r\n            newObj = {};\r\n            var defaults_1 = copy(obj1);\r\n            newObj._defaults = defaults_1;\r\n            var cloned = obj2 ? copy(obj2) : {};\r\n            Object.assign(newObj, defaults_1, cloned);\r\n        }\r\n        return newObj;\r\n    }\r\n    function copyOptions(obj1, obj2) {\r\n        if (obj2 && obj2._defaults) {\r\n            return obj2;\r\n        }\r\n        var opts = defaults(obj1, obj2);\r\n        if (opts.strictMath) {\r\n            opts.math = Math$1.PARENS;\r\n        }\r\n        // Back compat with changed relativeUrls option\r\n        if (opts.relativeUrls) {\r\n            opts.rewriteUrls = RewriteUrls.ALL;\r\n        }\r\n        if (typeof opts.math === 'string') {\r\n            switch (opts.math.toLowerCase()) {\r\n                case 'always':\r\n                    opts.math = Math$1.ALWAYS;\r\n                    break;\r\n                case 'parens-division':\r\n                    opts.math = Math$1.PARENS_DIVISION;\r\n                    break;\r\n                case 'strict':\r\n                case 'parens':\r\n                    opts.math = Math$1.PARENS;\r\n                    break;\r\n                default:\r\n                    opts.math = Math$1.PARENS;\r\n            }\r\n        }\r\n        if (typeof opts.rewriteUrls === 'string') {\r\n            switch (opts.rewriteUrls.toLowerCase()) {\r\n                case 'off':\r\n                    opts.rewriteUrls = RewriteUrls.OFF;\r\n                    break;\r\n                case 'local':\r\n                    opts.rewriteUrls = RewriteUrls.LOCAL;\r\n                    break;\r\n                case 'all':\r\n                    opts.rewriteUrls = RewriteUrls.ALL;\r\n                    break;\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    function merge(obj1, obj2) {\r\n        for (var prop in obj2) {\r\n            if (obj2.hasOwnProperty(prop)) {\r\n                obj1[prop] = obj2[prop];\r\n            }\r\n        }\r\n        return obj1;\r\n    }\r\n    function flattenArray(arr, result) {\r\n        if (result === void 0) { result = []; }\r\n        for (var i = 0, length_1 = arr.length; i < length_1; i++) {\r\n            var value = arr[i];\r\n            if (Array.isArray(value)) {\r\n                flattenArray(value, result);\r\n            }\r\n            else {\r\n                if (value !== undefined) {\r\n                    result.push(value);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\n\n    var utils = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getLocation: getLocation,\n        copyArray: copyArray,\n        clone: clone,\n        defaults: defaults,\n        copyOptions: copyOptions,\n        merge: merge,\n        flattenArray: flattenArray\n    });\n\n    var anonymousFunc = /(<anonymous>|Function):(\\d+):(\\d+)/;\r\n    /**\r\n     * This is a centralized class of any error that could be thrown internally (mostly by the parser).\r\n     * Besides standard .message it keeps some additional data like a path to the file where the error\r\n     * occurred along with line and column numbers.\r\n     *\r\n     * @class\r\n     * @extends Error\r\n     * @type {module.LessError}\r\n     *\r\n     * @prop {string} type\r\n     * @prop {string} filename\r\n     * @prop {number} index\r\n     * @prop {number} line\r\n     * @prop {number} column\r\n     * @prop {number} callLine\r\n     * @prop {number} callExtract\r\n     * @prop {string[]} extract\r\n     *\r\n     * @param {Object} e              - An error object to wrap around or just a descriptive object\r\n     * @param {Object} fileContentMap - An object with file contents in 'contents' property (like importManager) @todo - move to fileManager?\r\n     * @param {string} [currentFilename]\r\n     */\r\n    var LessError = function (e, fileContentMap, currentFilename) {\r\n        Error.call(this);\r\n        var filename = e.filename || currentFilename;\r\n        this.message = e.message;\r\n        this.stack = e.stack;\r\n        if (fileContentMap && filename) {\r\n            var input = fileContentMap.contents[filename];\r\n            var loc = getLocation(e.index, input);\r\n            var line = loc.line;\r\n            var col = loc.column;\r\n            var callLine = e.call && getLocation(e.call, input).line;\r\n            var lines = input ? input.split('\\n') : '';\r\n            this.type = e.type || 'Syntax';\r\n            this.filename = filename;\r\n            this.index = e.index;\r\n            this.line = typeof line === 'number' ? line + 1 : null;\r\n            this.column = col;\r\n            if (!this.line && this.stack) {\r\n                var found = this.stack.match(anonymousFunc);\r\n                /**\r\n                 * We have to figure out how this environment stringifies anonymous functions\r\n                 * so we can correctly map plugin errors.\r\n                 *\r\n                 * Note, in Node 8, the output of anonymous funcs varied based on parameters\r\n                 * being present or not, so we inject dummy params.\r\n                 */\r\n                var func = new Function('a', 'throw new Error()');\r\n                var lineAdjust = 0;\r\n                try {\r\n                    func();\r\n                }\r\n                catch (e) {\r\n                    var match = e.stack.match(anonymousFunc);\r\n                    var line = parseInt(match[2]);\r\n                    lineAdjust = 1 - line;\r\n                }\r\n                if (found) {\r\n                    if (found[2]) {\r\n                        this.line = parseInt(found[2]) + lineAdjust;\r\n                    }\r\n                    if (found[3]) {\r\n                        this.column = parseInt(found[3]);\r\n                    }\r\n                }\r\n            }\r\n            this.callLine = callLine + 1;\r\n            this.callExtract = lines[callLine];\r\n            this.extract = [\r\n                lines[this.line - 2],\r\n                lines[this.line - 1],\r\n                lines[this.line]\r\n            ];\r\n        }\r\n    };\r\n    if (typeof Object.create === 'undefined') {\r\n        var F = function () { };\r\n        F.prototype = Error.prototype;\r\n        LessError.prototype = new F();\r\n    }\r\n    else {\r\n        LessError.prototype = Object.create(Error.prototype);\r\n    }\r\n    LessError.prototype.constructor = LessError;\r\n    /**\r\n     * An overridden version of the default Object.prototype.toString\r\n     * which uses additional information to create a helpful message.\r\n     *\r\n     * @param {Object} options\r\n     * @returns {string}\r\n     */\r\n    LessError.prototype.toString = function (options) {\r\n        options = options || {};\r\n        var message = '';\r\n        var extract = this.extract || [];\r\n        var error = [];\r\n        var stylize = function (str) { return str; };\r\n        if (options.stylize) {\r\n            var type = typeof options.stylize;\r\n            if (type !== 'function') {\r\n                throw Error(\"options.stylize should be a function, got a \" + type + \"!\");\r\n            }\r\n            stylize = options.stylize;\r\n        }\r\n        if (this.line !== null) {\r\n            if (typeof extract[0] === 'string') {\r\n                error.push(stylize(this.line - 1 + \" \" + extract[0], 'grey'));\r\n            }\r\n            if (typeof extract[1] === 'string') {\r\n                var errorTxt = this.line + \" \";\r\n                if (extract[1]) {\r\n                    errorTxt += extract[1].slice(0, this.column) +\r\n                        stylize(stylize(stylize(extract[1].substr(this.column, 1), 'bold') +\r\n                            extract[1].slice(this.column + 1), 'red'), 'inverse');\r\n                }\r\n                error.push(errorTxt);\r\n            }\r\n            if (typeof extract[2] === 'string') {\r\n                error.push(stylize(this.line + 1 + \" \" + extract[2], 'grey'));\r\n            }\r\n            error = error.join('\\n') + stylize('', 'reset') + \"\\n\";\r\n        }\r\n        message += stylize(this.type + \"Error: \" + this.message, 'red');\r\n        if (this.filename) {\r\n            message += stylize(' in ', 'red') + this.filename;\r\n        }\r\n        if (this.line) {\r\n            message += stylize(\" on line \" + this.line + \", column \" + (this.column + 1) + \":\", 'grey');\r\n        }\r\n        message += \"\\n\" + error;\r\n        if (this.callLine) {\r\n            message += stylize('from ', 'red') + (this.filename || '') + \"/n\";\r\n            message += stylize(this.callLine, 'grey') + \" \" + this.callExtract + \"/n\";\r\n        }\r\n        return message;\r\n    };\n\n    var Selector = function (elements, extendList, condition, index, currentFileInfo, visibilityInfo) {\r\n        this.extendList = extendList;\r\n        this.condition = condition;\r\n        this.evaldCondition = !condition;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.elements = this.getElements(elements);\r\n        this.mixinElements_ = undefined;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.elements, this);\r\n    };\r\n    Selector.prototype = Object.assign(new Node(), {\r\n        type: 'Selector',\r\n        accept: function (visitor) {\r\n            if (this.elements) {\r\n                this.elements = visitor.visitArray(this.elements);\r\n            }\r\n            if (this.extendList) {\r\n                this.extendList = visitor.visitArray(this.extendList);\r\n            }\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        createDerived: function (elements, extendList, evaldCondition) {\r\n            elements = this.getElements(elements);\r\n            var newSelector = new Selector(elements, extendList || this.extendList, null, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n            newSelector.evaldCondition = (evaldCondition != null) ? evaldCondition : this.evaldCondition;\r\n            newSelector.mediaEmpty = this.mediaEmpty;\r\n            return newSelector;\r\n        },\r\n        getElements: function (els) {\r\n            if (!els) {\r\n                return [new Element('', '&', false, this._index, this._fileInfo)];\r\n            }\r\n            if (typeof els === 'string') {\r\n                this.parse.parseNode(els, ['selector'], this._index, this._fileInfo, function (err, result) {\r\n                    if (err) {\r\n                        throw new LessError({\r\n                            index: err.index,\r\n                            message: err.message\r\n                        }, this.parse.imports, this._fileInfo.filename);\r\n                    }\r\n                    els = result[0].elements;\r\n                });\r\n            }\r\n            return els;\r\n        },\r\n        createEmptySelectors: function () {\r\n            var el = new Element('', '&', false, this._index, this._fileInfo), sels = [new Selector([el], null, null, this._index, this._fileInfo)];\r\n            sels[0].mediaEmpty = true;\r\n            return sels;\r\n        },\r\n        match: function (other) {\r\n            var elements = this.elements;\r\n            var len = elements.length;\r\n            var olen;\r\n            var i;\r\n            other = other.mixinElements();\r\n            olen = other.length;\r\n            if (olen === 0 || len < olen) {\r\n                return 0;\r\n            }\r\n            else {\r\n                for (i = 0; i < olen; i++) {\r\n                    if (elements[i].value !== other[i]) {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return olen; // return number of matched elements\r\n        },\r\n        mixinElements: function () {\r\n            if (this.mixinElements_) {\r\n                return this.mixinElements_;\r\n            }\r\n            var elements = this.elements.map(function (v) {\r\n                return v.combinator.value + (v.value.value || v.value);\r\n            }).join('').match(/[,&#\\*\\.\\w-]([\\w-]|(\\\\.))*/g);\r\n            if (elements) {\r\n                if (elements[0] === '&') {\r\n                    elements.shift();\r\n                }\r\n            }\r\n            else {\r\n                elements = [];\r\n            }\r\n            return (this.mixinElements_ = elements);\r\n        },\r\n        isJustParentSelector: function () {\r\n            return !this.mediaEmpty &&\r\n                this.elements.length === 1 &&\r\n                this.elements[0].value === '&' &&\r\n                (this.elements[0].combinator.value === ' ' || this.elements[0].combinator.value === '');\r\n        },\r\n        eval: function (context) {\r\n            var evaldCondition = this.condition && this.condition.eval(context);\r\n            var elements = this.elements;\r\n            var extendList = this.extendList;\r\n            elements = elements && elements.map(function (e) { return e.eval(context); });\r\n            extendList = extendList && extendList.map(function (extend) { return extend.eval(context); });\r\n            return this.createDerived(elements, extendList, evaldCondition);\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i, element;\r\n            if ((!context || !context.firstSelector) && this.elements[0].combinator.value === '') {\r\n                output.add(' ', this.fileInfo(), this.getIndex());\r\n            }\r\n            for (i = 0; i < this.elements.length; i++) {\r\n                element = this.elements[i];\r\n                element.genCSS(context, output);\r\n            }\r\n        },\r\n        getIsOutput: function () {\r\n            return this.evaldCondition;\r\n        }\r\n    });\n\n    var Value = function (value) {\r\n        if (!value) {\r\n            throw new Error('Value requires an array argument');\r\n        }\r\n        if (!Array.isArray(value)) {\r\n            this.value = [value];\r\n        }\r\n        else {\r\n            this.value = value;\r\n        }\r\n    };\r\n    Value.prototype = Object.assign(new Node(), {\r\n        type: 'Value',\r\n        accept: function (visitor) {\r\n            if (this.value) {\r\n                this.value = visitor.visitArray(this.value);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.length === 1) {\r\n                return this.value[0].eval(context);\r\n            }\r\n            else {\r\n                return new Value(this.value.map(function (v) {\r\n                    return v.eval(context);\r\n                }));\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            for (i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (i + 1 < this.value.length) {\r\n                    output.add((context && context.compress) ? ',' : ', ');\r\n                }\r\n            }\r\n        }\r\n    });\n\n    var Keyword = function (value) {\r\n        this.value = value;\r\n    };\r\n    Keyword.prototype = Object.assign(new Node(), {\r\n        type: 'Keyword',\r\n        genCSS: function (context, output) {\r\n            if (this.value === '%') {\r\n                throw { type: 'Syntax', message: 'Invalid % without number' };\r\n            }\r\n            output.add(this.value);\r\n        }\r\n    });\r\n    Keyword.True = new Keyword('true');\r\n    Keyword.False = new Keyword('false');\n\n    var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {\r\n        this.value = value;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.mapLines = mapLines;\r\n        this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;\r\n        this.allowRoot = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n    };\r\n    Anonymous.prototype = Object.assign(new Node(), {\r\n        type: 'Anonymous',\r\n        eval: function () {\r\n            return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());\r\n        },\r\n        compare: function (other) {\r\n            return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rulesetLike;\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.nodeVisible = Boolean(this.value);\r\n            if (this.nodeVisible) {\r\n                output.add(this.value, this._fileInfo, this._index, this.mapLines);\r\n            }\r\n        }\r\n    });\n\n    var MATH = Math$1;\r\n    function evalName(context, name) {\r\n        var value = '';\r\n        var i;\r\n        var n = name.length;\r\n        var output = { add: function (s) { value += s; } };\r\n        for (i = 0; i < n; i++) {\r\n            name[i].eval(context).genCSS(context, output);\r\n        }\r\n        return value;\r\n    }\r\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : new Value([value ? new Anonymous(value) : null]);\r\n        this.important = important ? \" \" + important.trim() : '';\r\n        this.merge = merge;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.inline = inline || false;\r\n        this.variable = (variable !== undefined) ? variable\r\n            : (name.charAt && (name.charAt(0) === '@'));\r\n        this.allowRoot = true;\r\n        this.setParent(this.value, this);\r\n    };\r\n    Declaration.prototype = Object.assign(new Node(), {\r\n        type: 'Declaration',\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\r\n            try {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            catch (e) {\r\n                e.index = this._index;\r\n                e.filename = this._fileInfo.filename;\r\n                throw e;\r\n            }\r\n            output.add(this.important + ((this.inline || (context.lastRule && context.compress)) ? '' : ';'), this._fileInfo, this._index);\r\n        },\r\n        eval: function (context) {\r\n            var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\r\n            if (typeof name !== 'string') {\r\n                // expand 'primitive' name directly to get\r\n                // things faster (~10% for benchmark.less):\r\n                name = (name.length === 1) && (name[0] instanceof Keyword) ?\r\n                    name[0].value : evalName(context, name);\r\n                variable = false; // never treat expanded interpolation as new variable name\r\n            }\r\n            // @todo remove when parens-division is default\r\n            if (name === 'font' && context.math === MATH.ALWAYS) {\r\n                mathBypass = true;\r\n                prevMath = context.math;\r\n                context.math = MATH.PARENS_DIVISION;\r\n            }\r\n            try {\r\n                context.importantScope.push({});\r\n                evaldValue = this.value.eval(context);\r\n                if (!this.variable && evaldValue.type === 'DetachedRuleset') {\r\n                    throw { message: 'Rulesets cannot be evaluated on a property.',\r\n                        index: this.getIndex(), filename: this.fileInfo().filename };\r\n                }\r\n                var important = this.important;\r\n                var importantResult = context.importantScope.pop();\r\n                if (!important && importantResult.important) {\r\n                    important = importantResult.important;\r\n                }\r\n                return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\r\n            }\r\n            catch (e) {\r\n                if (typeof e.index !== 'number') {\r\n                    e.index = this.getIndex();\r\n                    e.filename = this.fileInfo().filename;\r\n                }\r\n                throw e;\r\n            }\r\n            finally {\r\n                if (mathBypass) {\r\n                    context.math = prevMath;\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\r\n        }\r\n    });\n\n    var debugInfo = /** @class */ (function () {\r\n        function debugInfo(context, ctx, lineSeparator) {\r\n            var result = '';\r\n            if (context.dumpLineNumbers && !context.compress) {\r\n                switch (context.dumpLineNumbers) {\r\n                    case 'comments':\r\n                        result = debugInfo.asComment(ctx);\r\n                        break;\r\n                    case 'mediaquery':\r\n                        result = debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                    case 'all':\r\n                        result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\r\n                        break;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        debugInfo.asComment = function (ctx) {\r\n            return \"/* line \" + ctx.debugInfo.lineNumber + \", \" + ctx.debugInfo.fileName + \" */\\n\";\r\n        };\r\n        debugInfo.asMediaQuery = function (ctx) {\r\n            var filenameWithProtocol = ctx.debugInfo.fileName;\r\n            if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\r\n                filenameWithProtocol = \"file://\" + filenameWithProtocol;\r\n            }\r\n            return \"@media -sass-debug-info{filename{font-family:\" + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\r\n                if (a == '\\\\') {\r\n                    a = '\\/';\r\n                }\r\n                return \"\\\\\" + a;\r\n            }) + \"}line{font-family:\\\\00003\" + ctx.debugInfo.lineNumber + \"}}\\n\";\r\n        };\r\n        return debugInfo;\r\n    }());\n\n    var Comment = function (value, isLineComment, index, currentFileInfo) {\r\n        this.value = value;\r\n        this.isLineComment = isLineComment;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    Comment.prototype = Object.assign(new Node(), {\r\n        type: 'Comment',\r\n        genCSS: function (context, output) {\r\n            if (this.debugInfo) {\r\n                output.add(debugInfo(context, this), this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n        },\r\n        isSilent: function (context) {\r\n            var isCompressed = context.compress && this.value[2] !== '!';\r\n            return this.isLineComment || isCompressed;\r\n        }\r\n    });\n\n    var contexts = {};\r\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\r\n        if (!original) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < propertiesToCopy.length; i++) {\r\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\r\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\r\n            }\r\n        }\r\n    };\r\n    /*\r\n     parse is used whilst parsing\r\n     */\r\n    var parseCopyProperties = [\r\n        // options\r\n        'paths',\r\n        'rewriteUrls',\r\n        'rootpath',\r\n        'strictImports',\r\n        'insecure',\r\n        'dumpLineNumbers',\r\n        'compress',\r\n        'syncImport',\r\n        'chunkInput',\r\n        'mime',\r\n        'useFileCache',\r\n        // context\r\n        'processImports',\r\n        // Used by the import manager to stop multiple import visitors being created.\r\n        'pluginManager' // Used as the plugin manager for the session\r\n    ];\r\n    contexts.Parse = function (options) {\r\n        copyFromOriginal(options, this, parseCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n    };\r\n    var evalCopyProperties = [\r\n        'paths',\r\n        'compress',\r\n        'math',\r\n        'strictUnits',\r\n        'sourceMap',\r\n        'importMultiple',\r\n        'urlArgs',\r\n        'javascriptEnabled',\r\n        'pluginManager',\r\n        'importantScope',\r\n        'rewriteUrls' // option - whether to adjust URL's to be relative\r\n    ];\r\n    contexts.Eval = function (options, frames) {\r\n        copyFromOriginal(options, this, evalCopyProperties);\r\n        if (typeof this.paths === 'string') {\r\n            this.paths = [this.paths];\r\n        }\r\n        this.frames = frames || [];\r\n        this.importantScope = this.importantScope || [];\r\n    };\r\n    contexts.Eval.prototype.enterCalc = function () {\r\n        if (!this.calcStack) {\r\n            this.calcStack = [];\r\n        }\r\n        this.calcStack.push(true);\r\n        this.inCalc = true;\r\n    };\r\n    contexts.Eval.prototype.exitCalc = function () {\r\n        this.calcStack.pop();\r\n        if (!this.calcStack.length) {\r\n            this.inCalc = false;\r\n        }\r\n    };\r\n    contexts.Eval.prototype.inParenthesis = function () {\r\n        if (!this.parensStack) {\r\n            this.parensStack = [];\r\n        }\r\n        this.parensStack.push(true);\r\n    };\r\n    contexts.Eval.prototype.outOfParenthesis = function () {\r\n        this.parensStack.pop();\r\n    };\r\n    contexts.Eval.prototype.inCalc = false;\r\n    contexts.Eval.prototype.mathOn = true;\r\n    contexts.Eval.prototype.isMathOn = function (op) {\r\n        if (!this.mathOn) {\r\n            return false;\r\n        }\r\n        if (op === '/' && this.math !== Math$1.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\r\n            return false;\r\n        }\r\n        if (this.math > Math$1.PARENS_DIVISION) {\r\n            return this.parensStack && this.parensStack.length;\r\n        }\r\n        return true;\r\n    };\r\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\r\n        var isRelative = this.rewriteUrls === RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\r\n        return isRelative(path);\r\n    };\r\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\r\n        var newPath;\r\n        rootpath = rootpath || '';\r\n        newPath = this.normalizePath(rootpath + path);\r\n        // If a path was explicit relative and the rootpath was not an absolute path\r\n        // we must ensure that the new path is also explicit relative.\r\n        if (isPathLocalRelative(path) &&\r\n            isPathRelative(rootpath) &&\r\n            isPathLocalRelative(newPath) === false) {\r\n            newPath = \"./\" + newPath;\r\n        }\r\n        return newPath;\r\n    };\r\n    contexts.Eval.prototype.normalizePath = function (path) {\r\n        var segments = path.split('/').reverse();\r\n        var segment;\r\n        path = [];\r\n        while (segments.length !== 0) {\r\n            segment = segments.pop();\r\n            switch (segment) {\r\n                case '.':\r\n                    break;\r\n                case '..':\r\n                    if ((path.length === 0) || (path[path.length - 1] === '..')) {\r\n                        path.push(segment);\r\n                    }\r\n                    else {\r\n                        path.pop();\r\n                    }\r\n                    break;\r\n                default:\r\n                    path.push(segment);\r\n                    break;\r\n            }\r\n        }\r\n        return path.join('/');\r\n    };\r\n    function isPathRelative(path) {\r\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\r\n    }\r\n    function isPathLocalRelative(path) {\r\n        return path.charAt(0) === '.';\r\n    }\r\n    // todo - do the same for the toCSS ?\n\n    function makeRegistry(base) {\r\n        return {\r\n            _data: {},\r\n            add: function (name, func) {\r\n                // precautionary case conversion, as later querying of\r\n                // the registry by function-caller uses lower case as well.\r\n                name = name.toLowerCase();\r\n                if (this._data.hasOwnProperty(name)) ;\r\n                this._data[name] = func;\r\n            },\r\n            addMultiple: function (functions) {\r\n                var _this = this;\r\n                Object.keys(functions).forEach(function (name) {\r\n                    _this.add(name, functions[name]);\r\n                });\r\n            },\r\n            get: function (name) {\r\n                return this._data[name] || (base && base.get(name));\r\n            },\r\n            getLocalFunctions: function () {\r\n                return this._data;\r\n            },\r\n            inherit: function () {\r\n                return makeRegistry(this);\r\n            },\r\n            create: function (base) {\r\n                return makeRegistry(base);\r\n            }\r\n        };\r\n    }\r\n    var functionRegistry = makeRegistry(null);\n\n    var defaultFunc = {\r\n        eval: function () {\r\n            var v = this.value_;\r\n            var e = this.error_;\r\n            if (e) {\r\n                throw e;\r\n            }\r\n            if (v != null) {\r\n                return v ? Keyword.True : Keyword.False;\r\n            }\r\n        },\r\n        value: function (v) {\r\n            this.value_ = v;\r\n        },\r\n        error: function (e) {\r\n            this.error_ = e;\r\n        },\r\n        reset: function () {\r\n            this.value_ = this.error_ = null;\r\n        }\r\n    };\n\n    var Ruleset = function (selectors, rules, strictImports, visibilityInfo) {\r\n        this.selectors = selectors;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        this._variables = null;\r\n        this._properties = null;\r\n        this.strictImports = strictImports;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(this.selectors, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Ruleset.prototype = Object.assign(new Node(), {\r\n        type: 'Ruleset',\r\n        isRuleset: true,\r\n        isRulesetLike: function () { return true; },\r\n        accept: function (visitor) {\r\n            if (this.paths) {\r\n                this.paths = visitor.visitArray(this.paths, true);\r\n            }\r\n            else if (this.selectors) {\r\n                this.selectors = visitor.visitArray(this.selectors);\r\n            }\r\n            if (this.rules && this.rules.length) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var selectors;\r\n            var selCnt;\r\n            var selector;\r\n            var i;\r\n            var hasVariable;\r\n            var hasOnePassingSelector = false;\r\n            if (this.selectors && (selCnt = this.selectors.length)) {\r\n                selectors = new Array(selCnt);\r\n                defaultFunc.error({\r\n                    type: 'Syntax',\r\n                    message: 'it is currently only allowed in parametric mixin guards,'\r\n                });\r\n                for (i = 0; i < selCnt; i++) {\r\n                    selector = this.selectors[i].eval(context);\r\n                    for (var j = 0; j < selector.elements.length; j++) {\r\n                        if (selector.elements[j].isVariable) {\r\n                            hasVariable = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    selectors[i] = selector;\r\n                    if (selector.evaldCondition) {\r\n                        hasOnePassingSelector = true;\r\n                    }\r\n                }\r\n                if (hasVariable) {\r\n                    var toParseSelectors = new Array(selCnt);\r\n                    for (i = 0; i < selCnt; i++) {\r\n                        selector = selectors[i];\r\n                        toParseSelectors[i] = selector.toCSS(context);\r\n                    }\r\n                    this.parse.parseNode(toParseSelectors.join(','), [\"selectors\"], selectors[0].getIndex(), selectors[0].fileInfo(), function (err, result) {\r\n                        if (result) {\r\n                            selectors = flattenArray(result);\r\n                        }\r\n                    });\r\n                }\r\n                defaultFunc.reset();\r\n            }\r\n            else {\r\n                hasOnePassingSelector = true;\r\n            }\r\n            var rules = this.rules ? copyArray(this.rules) : null;\r\n            var ruleset = new Ruleset(selectors, rules, this.strictImports, this.visibilityInfo());\r\n            var rule;\r\n            var subRule;\r\n            ruleset.originalRuleset = this;\r\n            ruleset.root = this.root;\r\n            ruleset.firstRoot = this.firstRoot;\r\n            ruleset.allowImports = this.allowImports;\r\n            if (this.debugInfo) {\r\n                ruleset.debugInfo = this.debugInfo;\r\n            }\r\n            if (!hasOnePassingSelector) {\r\n                rules.length = 0;\r\n            }\r\n            // inherit a function registry from the frames stack when possible;\r\n            // otherwise from the global registry\r\n            ruleset.functionRegistry = (function (frames) {\r\n                var i = 0;\r\n                var n = frames.length;\r\n                var found;\r\n                for (; i !== n; ++i) {\r\n                    found = frames[i].functionRegistry;\r\n                    if (found) {\r\n                        return found;\r\n                    }\r\n                }\r\n                return functionRegistry;\r\n            }(context.frames)).inherit();\r\n            // push the current ruleset to the frames stack\r\n            var ctxFrames = context.frames;\r\n            ctxFrames.unshift(ruleset);\r\n            // currrent selectors\r\n            var ctxSelectors = context.selectors;\r\n            if (!ctxSelectors) {\r\n                context.selectors = ctxSelectors = [];\r\n            }\r\n            ctxSelectors.unshift(this.selectors);\r\n            // Evaluate imports\r\n            if (ruleset.root || ruleset.allowImports || !ruleset.strictImports) {\r\n                ruleset.evalImports(context);\r\n            }\r\n            // Store the frames around mixin definitions,\r\n            // so they can be evaluated like closures when the time comes.\r\n            var rsRules = ruleset.rules;\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.evalFirst) {\r\n                    rsRules[i] = rule.eval(context);\r\n                }\r\n            }\r\n            var mediaBlockCount = (context.mediaBlocks && context.mediaBlocks.length) || 0;\r\n            // Evaluate mixin calls.\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (rule.type === 'MixinCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope if the variable is\r\n                            // already there. consider returning false here\r\n                            // but we need a way to \"return\" variable from mixins\r\n                            return !(ruleset.variable(r.name));\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n                else if (rule.type === 'VariableCall') {\r\n                    /* jshint loopfunc:true */\r\n                    rules = rule.eval(context).rules.filter(function (r) {\r\n                        if ((r instanceof Declaration) && r.variable) {\r\n                            // do not pollute the scope at all\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    rsRules.splice.apply(rsRules, [i, 1].concat(rules));\r\n                    i += rules.length - 1;\r\n                    ruleset.resetCache();\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                if (!rule.evalFirst) {\r\n                    rsRules[i] = rule = rule.eval ? rule.eval(context) : rule;\r\n                }\r\n            }\r\n            // Evaluate everything else\r\n            for (i = 0; (rule = rsRules[i]); i++) {\r\n                // for rulesets, check if it is a css guard and can be removed\r\n                if (rule instanceof Ruleset && rule.selectors && rule.selectors.length === 1) {\r\n                    // check if it can be folded in (e.g. & where)\r\n                    if (rule.selectors[0] && rule.selectors[0].isJustParentSelector()) {\r\n                        rsRules.splice(i--, 1);\r\n                        for (var j = 0; (subRule = rule.rules[j]); j++) {\r\n                            if (subRule instanceof Node) {\r\n                                subRule.copyVisibilityInfo(rule.visibilityInfo());\r\n                                if (!(subRule instanceof Declaration) || !subRule.variable) {\r\n                                    rsRules.splice(++i, 0, subRule);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Pop the stack\r\n            ctxFrames.shift();\r\n            ctxSelectors.shift();\r\n            if (context.mediaBlocks) {\r\n                for (i = mediaBlockCount; i < context.mediaBlocks.length; i++) {\r\n                    context.mediaBlocks[i].bubbleSelectors(selectors);\r\n                }\r\n            }\r\n            return ruleset;\r\n        },\r\n        evalImports: function (context) {\r\n            var rules = this.rules;\r\n            var i;\r\n            var importRules;\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (i = 0; i < rules.length; i++) {\r\n                if (rules[i].type === 'Import') {\r\n                    importRules = rules[i].eval(context);\r\n                    if (importRules && (importRules.length || importRules.length === 0)) {\r\n                        rules.splice.apply(rules, [i, 1].concat(importRules));\r\n                        i += importRules.length - 1;\r\n                    }\r\n                    else {\r\n                        rules.splice(i, 1, importRules);\r\n                    }\r\n                    this.resetCache();\r\n                }\r\n            }\r\n        },\r\n        makeImportant: function () {\r\n            var result = new Ruleset(this.selectors, this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant();\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            }), this.strictImports, this.visibilityInfo());\r\n            return result;\r\n        },\r\n        matchArgs: function (args) {\r\n            return !args || args.length === 0;\r\n        },\r\n        // lets you call a css selector with a guard\r\n        matchCondition: function (args, context) {\r\n            var lastSelector = this.selectors[this.selectors.length - 1];\r\n            if (!lastSelector.evaldCondition) {\r\n                return false;\r\n            }\r\n            if (lastSelector.condition &&\r\n                !lastSelector.condition.eval(new contexts.Eval(context, context.frames))) {\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        resetCache: function () {\r\n            this._rulesets = null;\r\n            this._variables = null;\r\n            this._properties = null;\r\n            this._lookups = {};\r\n        },\r\n        variables: function () {\r\n            if (!this._variables) {\r\n                this._variables = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable === true) {\r\n                        hash[r.name] = r;\r\n                    }\r\n                    // when evaluating variables in an import statement, imports have not been eval'd\r\n                    // so we need to go inside import statements.\r\n                    // guard against root being a string (in the case of inlined less)\r\n                    if (r.type === 'Import' && r.root && r.root.variables) {\r\n                        var vars = r.root.variables();\r\n                        for (var name_1 in vars) {\r\n                            if (vars.hasOwnProperty(name_1)) {\r\n                                hash[name_1] = r.root.variable(name_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._variables;\r\n        },\r\n        properties: function () {\r\n            if (!this._properties) {\r\n                this._properties = !this.rules ? {} : this.rules.reduce(function (hash, r) {\r\n                    if (r instanceof Declaration && r.variable !== true) {\r\n                        var name_2 = (r.name.length === 1) && (r.name[0] instanceof Keyword) ?\r\n                            r.name[0].value : r.name;\r\n                        // Properties don't overwrite as they can merge\r\n                        if (!hash[\"$\" + name_2]) {\r\n                            hash[\"$\" + name_2] = [r];\r\n                        }\r\n                        else {\r\n                            hash[\"$\" + name_2].push(r);\r\n                        }\r\n                    }\r\n                    return hash;\r\n                }, {});\r\n            }\r\n            return this._properties;\r\n        },\r\n        variable: function (name) {\r\n            var decl = this.variables()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        property: function (name) {\r\n            var decl = this.properties()[name];\r\n            if (decl) {\r\n                return this.parseValue(decl);\r\n            }\r\n        },\r\n        lastDeclaration: function () {\r\n            for (var i = this.rules.length; i > 0; i--) {\r\n                var decl = this.rules[i - 1];\r\n                if (decl instanceof Declaration) {\r\n                    return this.parseValue(decl);\r\n                }\r\n            }\r\n        },\r\n        parseValue: function (toParse) {\r\n            var self = this;\r\n            function transformDeclaration(decl) {\r\n                if (decl.value instanceof Anonymous && !decl.parsed) {\r\n                    if (typeof decl.value.value === 'string') {\r\n                        this.parse.parseNode(decl.value.value, ['value', 'important'], decl.value.getIndex(), decl.fileInfo(), function (err, result) {\r\n                            if (err) {\r\n                                decl.parsed = true;\r\n                            }\r\n                            if (result) {\r\n                                decl.value = result[0];\r\n                                decl.important = result[1] || '';\r\n                                decl.parsed = true;\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        decl.parsed = true;\r\n                    }\r\n                    return decl;\r\n                }\r\n                else {\r\n                    return decl;\r\n                }\r\n            }\r\n            if (!Array.isArray(toParse)) {\r\n                return transformDeclaration.call(self, toParse);\r\n            }\r\n            else {\r\n                var nodes_1 = [];\r\n                toParse.forEach(function (n) {\r\n                    nodes_1.push(transformDeclaration.call(self, n));\r\n                });\r\n                return nodes_1;\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (!this.rules) {\r\n                return [];\r\n            }\r\n            var filtRules = [];\r\n            var rules = this.rules;\r\n            var i;\r\n            var rule;\r\n            for (i = 0; (rule = rules[i]); i++) {\r\n                if (rule.isRuleset) {\r\n                    filtRules.push(rule);\r\n                }\r\n            }\r\n            return filtRules;\r\n        },\r\n        prependRule: function (rule) {\r\n            var rules = this.rules;\r\n            if (rules) {\r\n                rules.unshift(rule);\r\n            }\r\n            else {\r\n                this.rules = [rule];\r\n            }\r\n            this.setParent(rule, this);\r\n        },\r\n        find: function (selector, self, filter) {\r\n            self = self || this;\r\n            var rules = [];\r\n            var match;\r\n            var foundMixins;\r\n            var key = selector.toCSS();\r\n            if (key in this._lookups) {\r\n                return this._lookups[key];\r\n            }\r\n            this.rulesets().forEach(function (rule) {\r\n                if (rule !== self) {\r\n                    for (var j = 0; j < rule.selectors.length; j++) {\r\n                        match = selector.match(rule.selectors[j]);\r\n                        if (match) {\r\n                            if (selector.elements.length > match) {\r\n                                if (!filter || filter(rule)) {\r\n                                    foundMixins = rule.find(new Selector(selector.elements.slice(match)), self, filter);\r\n                                    for (var i = 0; i < foundMixins.length; ++i) {\r\n                                        foundMixins[i].path.push(rule);\r\n                                    }\r\n                                    Array.prototype.push.apply(rules, foundMixins);\r\n                                }\r\n                            }\r\n                            else {\r\n                                rules.push({ rule: rule, path: [] });\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this._lookups[key] = rules;\r\n            return rules;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var i;\r\n            var j;\r\n            var charsetRuleNodes = [];\r\n            var ruleNodes = [];\r\n            var // Line number debugging\r\n            debugInfo$1;\r\n            var rule;\r\n            var path;\r\n            context.tabLevel = (context.tabLevel || 0);\r\n            if (!this.root) {\r\n                context.tabLevel++;\r\n            }\r\n            var tabRuleStr = context.compress ? '' : Array(context.tabLevel + 1).join('  ');\r\n            var tabSetStr = context.compress ? '' : Array(context.tabLevel).join('  ');\r\n            var sep;\r\n            var charsetNodeIndex = 0;\r\n            var importNodeIndex = 0;\r\n            for (i = 0; (rule = this.rules[i]); i++) {\r\n                if (rule instanceof Comment) {\r\n                    if (importNodeIndex === i) {\r\n                        importNodeIndex++;\r\n                    }\r\n                    ruleNodes.push(rule);\r\n                }\r\n                else if (rule.isCharset && rule.isCharset()) {\r\n                    ruleNodes.splice(charsetNodeIndex, 0, rule);\r\n                    charsetNodeIndex++;\r\n                    importNodeIndex++;\r\n                }\r\n                else if (rule.type === 'Import') {\r\n                    ruleNodes.splice(importNodeIndex, 0, rule);\r\n                    importNodeIndex++;\r\n                }\r\n                else {\r\n                    ruleNodes.push(rule);\r\n                }\r\n            }\r\n            ruleNodes = charsetRuleNodes.concat(ruleNodes);\r\n            // If this is the root node, we don't render\r\n            // a selector, or {}.\r\n            if (!this.root) {\r\n                debugInfo$1 = debugInfo(context, this, tabSetStr);\r\n                if (debugInfo$1) {\r\n                    output.add(debugInfo$1);\r\n                    output.add(tabSetStr);\r\n                }\r\n                var paths = this.paths;\r\n                var pathCnt = paths.length;\r\n                var pathSubCnt = void 0;\r\n                sep = context.compress ? ',' : (\",\\n\" + tabSetStr);\r\n                for (i = 0; i < pathCnt; i++) {\r\n                    path = paths[i];\r\n                    if (!(pathSubCnt = path.length)) {\r\n                        continue;\r\n                    }\r\n                    if (i > 0) {\r\n                        output.add(sep);\r\n                    }\r\n                    context.firstSelector = true;\r\n                    path[0].genCSS(context, output);\r\n                    context.firstSelector = false;\r\n                    for (j = 1; j < pathSubCnt; j++) {\r\n                        path[j].genCSS(context, output);\r\n                    }\r\n                }\r\n                output.add((context.compress ? '{' : ' {\\n') + tabRuleStr);\r\n            }\r\n            // Compile rules and rulesets\r\n            for (i = 0; (rule = ruleNodes[i]); i++) {\r\n                if (i + 1 === ruleNodes.length) {\r\n                    context.lastRule = true;\r\n                }\r\n                var currentLastRule = context.lastRule;\r\n                if (rule.isRulesetLike(rule)) {\r\n                    context.lastRule = false;\r\n                }\r\n                if (rule.genCSS) {\r\n                    rule.genCSS(context, output);\r\n                }\r\n                else if (rule.value) {\r\n                    output.add(rule.value.toString());\r\n                }\r\n                context.lastRule = currentLastRule;\r\n                if (!context.lastRule && rule.isVisible()) {\r\n                    output.add(context.compress ? '' : (\"\\n\" + tabRuleStr));\r\n                }\r\n                else {\r\n                    context.lastRule = false;\r\n                }\r\n            }\r\n            if (!this.root) {\r\n                output.add((context.compress ? '}' : \"\\n\" + tabSetStr + \"}\"));\r\n                context.tabLevel--;\r\n            }\r\n            if (!output.isEmpty() && !context.compress && this.firstRoot) {\r\n                output.add('\\n');\r\n            }\r\n        },\r\n        joinSelectors: function (paths, context, selectors) {\r\n            for (var s = 0; s < selectors.length; s++) {\r\n                this.joinSelector(paths, context, selectors[s]);\r\n            }\r\n        },\r\n        joinSelector: function (paths, context, selector) {\r\n            function createParenthesis(elementsToPak, originalElement) {\r\n                var replacementParen, j;\r\n                if (elementsToPak.length === 0) {\r\n                    replacementParen = new Paren(elementsToPak[0]);\r\n                }\r\n                else {\r\n                    var insideParent = new Array(elementsToPak.length);\r\n                    for (j = 0; j < elementsToPak.length; j++) {\r\n                        insideParent[j] = new Element(null, elementsToPak[j], originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                    }\r\n                    replacementParen = new Paren(new Selector(insideParent));\r\n                }\r\n                return replacementParen;\r\n            }\r\n            function createSelector(containedElement, originalElement) {\r\n                var element, selector;\r\n                element = new Element(null, containedElement, originalElement.isVariable, originalElement._index, originalElement._fileInfo);\r\n                selector = new Selector([element]);\r\n                return selector;\r\n            }\r\n            // joins selector path from `beginningPath` with selector path in `addPath`\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns concatenated path\r\n            function addReplacementIntoPath(beginningPath, addPath, replacedElement, originalSelector) {\r\n                var newSelectorPath, lastSelector, newJoinedSelector;\r\n                // our new selector path\r\n                newSelectorPath = [];\r\n                // construct the joined selector - if & is the first thing this will be empty,\r\n                // if not newJoinedSelector will be the last set of elements in the selector\r\n                if (beginningPath.length > 0) {\r\n                    newSelectorPath = copyArray(beginningPath);\r\n                    lastSelector = newSelectorPath.pop();\r\n                    newJoinedSelector = originalSelector.createDerived(copyArray(lastSelector.elements));\r\n                }\r\n                else {\r\n                    newJoinedSelector = originalSelector.createDerived([]);\r\n                }\r\n                if (addPath.length > 0) {\r\n                    // /deep/ is a CSS4 selector - (removed, so should deprecate)\r\n                    // that is valid without anything in front of it\r\n                    // so if the & does not have a combinator that is \"\" or \" \" then\r\n                    // and there is a combinator on the parent, then grab that.\r\n                    // this also allows + a { & .b { .a & { ... though not sure why you would want to do that\r\n                    var combinator = replacedElement.combinator;\r\n                    var parentEl = addPath[0].elements[0];\r\n                    if (combinator.emptyOrWhitespace && !parentEl.combinator.emptyOrWhitespace) {\r\n                        combinator = parentEl.combinator;\r\n                    }\r\n                    // join the elements so far with the first part of the parent\r\n                    newJoinedSelector.elements.push(new Element(combinator, parentEl.value, replacedElement.isVariable, replacedElement._index, replacedElement._fileInfo));\r\n                    newJoinedSelector.elements = newJoinedSelector.elements.concat(addPath[0].elements.slice(1));\r\n                }\r\n                // now add the joined selector - but only if it is not empty\r\n                if (newJoinedSelector.elements.length !== 0) {\r\n                    newSelectorPath.push(newJoinedSelector);\r\n                }\r\n                // put together the parent selectors after the join (e.g. the rest of the parent)\r\n                if (addPath.length > 1) {\r\n                    var restOfPath = addPath.slice(1);\r\n                    restOfPath = restOfPath.map(function (selector) {\r\n                        return selector.createDerived(selector.elements, []);\r\n                    });\r\n                    newSelectorPath = newSelectorPath.concat(restOfPath);\r\n                }\r\n                return newSelectorPath;\r\n            }\r\n            // joins selector path from `beginningPath` with every selector path in `addPaths` array\r\n            // `replacedElement` contains element that is being replaced by `addPath`\r\n            // returns array with all concatenated paths\r\n            function addAllReplacementsIntoPath(beginningPath, addPaths, replacedElement, originalSelector, result) {\r\n                var j;\r\n                for (j = 0; j < beginningPath.length; j++) {\r\n                    var newSelectorPath = addReplacementIntoPath(beginningPath[j], addPaths, replacedElement, originalSelector);\r\n                    result.push(newSelectorPath);\r\n                }\r\n                return result;\r\n            }\r\n            function mergeElementsOnToSelectors(elements, selectors) {\r\n                var i, sel;\r\n                if (elements.length === 0) {\r\n                    return;\r\n                }\r\n                if (selectors.length === 0) {\r\n                    selectors.push([new Selector(elements)]);\r\n                    return;\r\n                }\r\n                for (i = 0; (sel = selectors[i]); i++) {\r\n                    // if the previous thing in sel is a parent this needs to join on to it\r\n                    if (sel.length > 0) {\r\n                        sel[sel.length - 1] = sel[sel.length - 1].createDerived(sel[sel.length - 1].elements.concat(elements));\r\n                    }\r\n                    else {\r\n                        sel.push(new Selector(elements));\r\n                    }\r\n                }\r\n            }\r\n            // replace all parent selectors inside `inSelector` by content of `context` array\r\n            // resulting selectors are returned inside `paths` array\r\n            // returns true if `inSelector` contained at least one parent selector\r\n            function replaceParentSelector(paths, context, inSelector) {\r\n                // The paths are [[Selector]]\r\n                // The first list is a list of comma separated selectors\r\n                // The inner list is a list of inheritance separated selectors\r\n                // e.g.\r\n                // .a, .b {\r\n                //   .c {\r\n                //   }\r\n                // }\r\n                // == [[.a] [.c]] [[.b] [.c]]\r\n                //\r\n                var i, j, k, currentElements, newSelectors, selectorsMultiplied, sel, el, hadParentSelector = false, length, lastSelector;\r\n                function findNestedSelector(element) {\r\n                    var maybeSelector;\r\n                    if (!(element.value instanceof Paren)) {\r\n                        return null;\r\n                    }\r\n                    maybeSelector = element.value.value;\r\n                    if (!(maybeSelector instanceof Selector)) {\r\n                        return null;\r\n                    }\r\n                    return maybeSelector;\r\n                }\r\n                // the elements from the current selector so far\r\n                currentElements = [];\r\n                // the current list of new selectors to add to the path.\r\n                // We will build it up. We initiate it with one empty selector as we \"multiply\" the new selectors\r\n                // by the parents\r\n                newSelectors = [\r\n                    []\r\n                ];\r\n                for (i = 0; (el = inSelector.elements[i]); i++) {\r\n                    // non parent reference elements just get added\r\n                    if (el.value !== '&') {\r\n                        var nestedSelector = findNestedSelector(el);\r\n                        if (nestedSelector != null) {\r\n                            // merge the current list of non parent selector elements\r\n                            // on to the current list of selectors to add\r\n                            mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                            var nestedPaths = [];\r\n                            var replaced = void 0;\r\n                            var replacedNewSelectors = [];\r\n                            replaced = replaceParentSelector(nestedPaths, context, nestedSelector);\r\n                            hadParentSelector = hadParentSelector || replaced;\r\n                            // the nestedPaths array should have only one member - replaceParentSelector does not multiply selectors\r\n                            for (k = 0; k < nestedPaths.length; k++) {\r\n                                var replacementSelector = createSelector(createParenthesis(nestedPaths[k], el), el);\r\n                                addAllReplacementsIntoPath(newSelectors, [replacementSelector], el, inSelector, replacedNewSelectors);\r\n                            }\r\n                            newSelectors = replacedNewSelectors;\r\n                            currentElements = [];\r\n                        }\r\n                        else {\r\n                            currentElements.push(el);\r\n                        }\r\n                    }\r\n                    else {\r\n                        hadParentSelector = true;\r\n                        // the new list of selectors to add\r\n                        selectorsMultiplied = [];\r\n                        // merge the current list of non parent selector elements\r\n                        // on to the current list of selectors to add\r\n                        mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                        // loop through our current selectors\r\n                        for (j = 0; j < newSelectors.length; j++) {\r\n                            sel = newSelectors[j];\r\n                            // if we don't have any parent paths, the & might be in a mixin so that it can be used\r\n                            // whether there are parents or not\r\n                            if (context.length === 0) {\r\n                                // the combinator used on el should now be applied to the next element instead so that\r\n                                // it is not lost\r\n                                if (sel.length > 0) {\r\n                                    sel[0].elements.push(new Element(el.combinator, '', el.isVariable, el._index, el._fileInfo));\r\n                                }\r\n                                selectorsMultiplied.push(sel);\r\n                            }\r\n                            else {\r\n                                // and the parent selectors\r\n                                for (k = 0; k < context.length; k++) {\r\n                                    // We need to put the current selectors\r\n                                    // then join the last selector's elements on to the parents selectors\r\n                                    var newSelectorPath = addReplacementIntoPath(sel, context[k], el, inSelector);\r\n                                    // add that to our new set of selectors\r\n                                    selectorsMultiplied.push(newSelectorPath);\r\n                                }\r\n                            }\r\n                        }\r\n                        // our new selectors has been multiplied, so reset the state\r\n                        newSelectors = selectorsMultiplied;\r\n                        currentElements = [];\r\n                    }\r\n                }\r\n                // if we have any elements left over (e.g. .a& .b == .b)\r\n                // add them on to all the current selectors\r\n                mergeElementsOnToSelectors(currentElements, newSelectors);\r\n                for (i = 0; i < newSelectors.length; i++) {\r\n                    length = newSelectors[i].length;\r\n                    if (length > 0) {\r\n                        paths.push(newSelectors[i]);\r\n                        lastSelector = newSelectors[i][length - 1];\r\n                        newSelectors[i][length - 1] = lastSelector.createDerived(lastSelector.elements, inSelector.extendList);\r\n                    }\r\n                }\r\n                return hadParentSelector;\r\n            }\r\n            function deriveSelector(visibilityInfo, deriveFrom) {\r\n                var newSelector = deriveFrom.createDerived(deriveFrom.elements, deriveFrom.extendList, deriveFrom.evaldCondition);\r\n                newSelector.copyVisibilityInfo(visibilityInfo);\r\n                return newSelector;\r\n            }\r\n            // joinSelector code follows\r\n            var i, newPaths, hadParentSelector;\r\n            newPaths = [];\r\n            hadParentSelector = replaceParentSelector(newPaths, context, selector);\r\n            if (!hadParentSelector) {\r\n                if (context.length > 0) {\r\n                    newPaths = [];\r\n                    for (i = 0; i < context.length; i++) {\r\n                        var concatenated = context[i].map(deriveSelector.bind(this, selector.visibilityInfo()));\r\n                        concatenated.push(selector);\r\n                        newPaths.push(concatenated);\r\n                    }\r\n                }\r\n                else {\r\n                    newPaths = [[selector]];\r\n                }\r\n            }\r\n            for (i = 0; i < newPaths.length; i++) {\r\n                paths.push(newPaths[i]);\r\n            }\r\n        }\r\n    });\n\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\r\n        var i;\r\n        this.name = name;\r\n        this.value = (value instanceof Node) ? value : (value ? new Anonymous(value) : value);\r\n        if (rules) {\r\n            if (Array.isArray(rules)) {\r\n                this.rules = rules;\r\n            }\r\n            else {\r\n                this.rules = [rules];\r\n                this.rules[0].selectors = (new Selector([], null, null, index, currentFileInfo)).createEmptySelectors();\r\n            }\r\n            for (i = 0; i < this.rules.length; i++) {\r\n                this.rules[i].allowImports = true;\r\n            }\r\n            this.setParent(this.rules, this);\r\n        }\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.debugInfo = debugInfo;\r\n        this.isRooted = isRooted || false;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    AtRule.prototype = Object.assign(new Node(), {\r\n        type: 'AtRule',\r\n        accept: function (visitor) {\r\n            var value = this.value, rules = this.rules;\r\n            if (rules) {\r\n                this.rules = visitor.visitArray(rules);\r\n            }\r\n            if (value) {\r\n                this.value = visitor.visit(value);\r\n            }\r\n        },\r\n        isRulesetLike: function () {\r\n            return this.rules || !this.isCharset();\r\n        },\r\n        isCharset: function () {\r\n            return '@charset' === this.name;\r\n        },\r\n        genCSS: function (context, output) {\r\n            var value = this.value, rules = this.rules;\r\n            output.add(this.name, this.fileInfo(), this.getIndex());\r\n            if (value) {\r\n                output.add(' ');\r\n                value.genCSS(context, output);\r\n            }\r\n            if (rules) {\r\n                this.outputRuleset(context, output, rules);\r\n            }\r\n            else {\r\n                output.add(';');\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\r\n            // media stored inside other atrule should not bubble over it\r\n            // backpup media bubbling information\r\n            mediaPathBackup = context.mediaPath;\r\n            mediaBlocksBackup = context.mediaBlocks;\r\n            // deleted media bubbling information\r\n            context.mediaPath = [];\r\n            context.mediaBlocks = [];\r\n            if (value) {\r\n                value = value.eval(context);\r\n            }\r\n            if (rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                rules = [rules[0].eval(context)];\r\n                rules[0].root = true;\r\n            }\r\n            // restore media bubbling information\r\n            context.mediaPath = mediaPathBackup;\r\n            context.mediaBlocks = mediaBlocksBackup;\r\n            return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\r\n        },\r\n        variable: function (name) {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.variable.call(this.rules[0], name);\r\n            }\r\n        },\r\n        find: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.find.apply(this.rules[0], arguments);\r\n            }\r\n        },\r\n        rulesets: function () {\r\n            if (this.rules) {\r\n                // assuming that there is only one rule at this point - that is how parser constructs the rule\r\n                return Ruleset.prototype.rulesets.apply(this.rules[0]);\r\n            }\r\n        },\r\n        outputRuleset: function (context, output, rules) {\r\n            var ruleCnt = rules.length;\r\n            var i;\r\n            context.tabLevel = (context.tabLevel | 0) + 1;\r\n            // Compressed\r\n            if (context.compress) {\r\n                output.add('{');\r\n                for (i = 0; i < ruleCnt; i++) {\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add('}');\r\n                context.tabLevel--;\r\n                return;\r\n            }\r\n            // Non-compressed\r\n            var tabSetStr = \"\\n\" + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + \"  \";\r\n            if (!ruleCnt) {\r\n                output.add(\" {\" + tabSetStr + \"}\");\r\n            }\r\n            else {\r\n                output.add(\" {\" + tabRuleStr);\r\n                rules[0].genCSS(context, output);\r\n                for (i = 1; i < ruleCnt; i++) {\r\n                    output.add(tabRuleStr);\r\n                    rules[i].genCSS(context, output);\r\n                }\r\n                output.add(tabSetStr + \"}\");\r\n            }\r\n            context.tabLevel--;\r\n        }\r\n    });\n\n    var DetachedRuleset = function (ruleset, frames) {\r\n        this.ruleset = ruleset;\r\n        this.frames = frames;\r\n        this.setParent(this.ruleset, this);\r\n    };\r\n    DetachedRuleset.prototype = Object.assign(new Node(), {\r\n        type: 'DetachedRuleset',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            this.ruleset = visitor.visit(this.ruleset);\r\n        },\r\n        eval: function (context) {\r\n            var frames = this.frames || copyArray(context.frames);\r\n            return new DetachedRuleset(this.ruleset, frames);\r\n        },\r\n        callEval: function (context) {\r\n            return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\r\n        }\r\n    });\n\n    var Unit = function (numerator, denominator, backupUnit) {\r\n        this.numerator = numerator ? copyArray(numerator).sort() : [];\r\n        this.denominator = denominator ? copyArray(denominator).sort() : [];\r\n        if (backupUnit) {\r\n            this.backupUnit = backupUnit;\r\n        }\r\n        else if (numerator && numerator.length) {\r\n            this.backupUnit = numerator[0];\r\n        }\r\n    };\r\n    Unit.prototype = Object.assign(new Node(), {\r\n        type: 'Unit',\r\n        clone: function () {\r\n            return new Unit(copyArray(this.numerator), copyArray(this.denominator), this.backupUnit);\r\n        },\r\n        genCSS: function (context, output) {\r\n            // Dimension checks the unit is singular and throws an error if in strict math mode.\r\n            var strictUnits = context && context.strictUnits;\r\n            if (this.numerator.length === 1) {\r\n                output.add(this.numerator[0]); // the ideal situation\r\n            }\r\n            else if (!strictUnits && this.backupUnit) {\r\n                output.add(this.backupUnit);\r\n            }\r\n            else if (!strictUnits && this.denominator.length) {\r\n                output.add(this.denominator[0]);\r\n            }\r\n        },\r\n        toString: function () {\r\n            var i, returnStr = this.numerator.join('*');\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                returnStr += \"/\" + this.denominator[i];\r\n            }\r\n            return returnStr;\r\n        },\r\n        compare: function (other) {\r\n            return this.is(other.toString()) ? 0 : undefined;\r\n        },\r\n        is: function (unitString) {\r\n            return this.toString().toUpperCase() === unitString.toUpperCase();\r\n        },\r\n        isLength: function () {\r\n            return RegExp('^(px|em|ex|ch|rem|in|cm|mm|pc|pt|ex|vw|vh|vmin|vmax)$', 'gi').test(this.toCSS());\r\n        },\r\n        isEmpty: function () {\r\n            return this.numerator.length === 0 && this.denominator.length === 0;\r\n        },\r\n        isSingular: function () {\r\n            return this.numerator.length <= 1 && this.denominator.length === 0;\r\n        },\r\n        map: function (callback) {\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                this.numerator[i] = callback(this.numerator[i], false);\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                this.denominator[i] = callback(this.denominator[i], true);\r\n            }\r\n        },\r\n        usedUnits: function () {\r\n            var group;\r\n            var result = {};\r\n            var mapUnit;\r\n            var groupName;\r\n            mapUnit = function (atomicUnit) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit) && !result[groupName]) {\r\n                    result[groupName] = atomicUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in unitConversions) {\r\n                if (unitConversions.hasOwnProperty(groupName)) {\r\n                    group = unitConversions[groupName];\r\n                    this.map(mapUnit);\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        cancel: function () {\r\n            var counter = {};\r\n            var atomicUnit;\r\n            var i;\r\n            for (i = 0; i < this.numerator.length; i++) {\r\n                atomicUnit = this.numerator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) + 1;\r\n            }\r\n            for (i = 0; i < this.denominator.length; i++) {\r\n                atomicUnit = this.denominator[i];\r\n                counter[atomicUnit] = (counter[atomicUnit] || 0) - 1;\r\n            }\r\n            this.numerator = [];\r\n            this.denominator = [];\r\n            for (atomicUnit in counter) {\r\n                if (counter.hasOwnProperty(atomicUnit)) {\r\n                    var count = counter[atomicUnit];\r\n                    if (count > 0) {\r\n                        for (i = 0; i < count; i++) {\r\n                            this.numerator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                    else if (count < 0) {\r\n                        for (i = 0; i < -count; i++) {\r\n                            this.denominator.push(atomicUnit);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.numerator.sort();\r\n            this.denominator.sort();\r\n        }\r\n    });\n\n    //\r\n    // A number with a unit\r\n    //\r\n    var Dimension = function (value, unit) {\r\n        this.value = parseFloat(value);\r\n        if (isNaN(this.value)) {\r\n            throw new Error('Dimension is not a number.');\r\n        }\r\n        this.unit = (unit && unit instanceof Unit) ? unit :\r\n            new Unit(unit ? [unit] : undefined);\r\n        this.setParent(this.unit, this);\r\n    };\r\n    Dimension.prototype = Object.assign(new Node(), {\r\n        type: 'Dimension',\r\n        accept: function (visitor) {\r\n            this.unit = visitor.visit(this.unit);\r\n        },\r\n        eval: function (context) {\r\n            return this;\r\n        },\r\n        toColor: function () {\r\n            return new Color([this.value, this.value, this.value]);\r\n        },\r\n        genCSS: function (context, output) {\r\n            if ((context && context.strictUnits) && !this.unit.isSingular()) {\r\n                throw new Error(\"Multiple units in dimension. Correct the units or use the unit function. Bad unit: \" + this.unit.toString());\r\n            }\r\n            var value = this.fround(context, this.value);\r\n            var strValue = String(value);\r\n            if (value !== 0 && value < 0.000001 && value > -0.000001) {\r\n                // would be output 1e-6 etc.\r\n                strValue = value.toFixed(20).replace(/0+$/, '');\r\n            }\r\n            if (context && context.compress) {\r\n                // Zero values doesn't need a unit\r\n                if (value === 0 && this.unit.isLength()) {\r\n                    output.add(strValue);\r\n                    return;\r\n                }\r\n                // Float values doesn't need a leading zero\r\n                if (value > 0 && value < 1) {\r\n                    strValue = (strValue).substr(1);\r\n                }\r\n            }\r\n            output.add(strValue);\r\n            this.unit.genCSS(context, output);\r\n        },\r\n        // In an operation between two Dimensions,\r\n        // we default to the first Dimension's unit,\r\n        // so `1px + 2` will yield `3px`.\r\n        operate: function (context, op, other) {\r\n            /* jshint noempty:false */\r\n            var value = this._operate(context, op, this.value, other.value);\r\n            var unit = this.unit.clone();\r\n            if (op === '+' || op === '-') {\r\n                if (unit.numerator.length === 0 && unit.denominator.length === 0) {\r\n                    unit = other.unit.clone();\r\n                    if (this.unit.backupUnit) {\r\n                        unit.backupUnit = this.unit.backupUnit;\r\n                    }\r\n                }\r\n                else if (other.unit.numerator.length === 0 && unit.denominator.length === 0) ;\r\n                else {\r\n                    other = other.convertTo(this.unit.usedUnits());\r\n                    if (context.strictUnits && other.unit.toString() !== unit.toString()) {\r\n                        throw new Error(\"Incompatible units. Change the units or use the unit function. \"\r\n                            + (\"Bad units: '\" + unit.toString() + \"' and '\" + other.unit.toString() + \"'.\"));\r\n                    }\r\n                    value = this._operate(context, op, this.value, other.value);\r\n                }\r\n            }\r\n            else if (op === '*') {\r\n                unit.numerator = unit.numerator.concat(other.unit.numerator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.denominator).sort();\r\n                unit.cancel();\r\n            }\r\n            else if (op === '/') {\r\n                unit.numerator = unit.numerator.concat(other.unit.denominator).sort();\r\n                unit.denominator = unit.denominator.concat(other.unit.numerator).sort();\r\n                unit.cancel();\r\n            }\r\n            return new Dimension(value, unit);\r\n        },\r\n        compare: function (other) {\r\n            var a, b;\r\n            if (!(other instanceof Dimension)) {\r\n                return undefined;\r\n            }\r\n            if (this.unit.isEmpty() || other.unit.isEmpty()) {\r\n                a = this;\r\n                b = other;\r\n            }\r\n            else {\r\n                a = this.unify();\r\n                b = other.unify();\r\n                if (a.unit.compare(b.unit) !== 0) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            return Node.numericCompare(a.value, b.value);\r\n        },\r\n        unify: function () {\r\n            return this.convertTo({ length: 'px', duration: 's', angle: 'rad' });\r\n        },\r\n        convertTo: function (conversions) {\r\n            var value = this.value;\r\n            var unit = this.unit.clone();\r\n            var i;\r\n            var groupName;\r\n            var group;\r\n            var targetUnit;\r\n            var derivedConversions = {};\r\n            var applyUnit;\r\n            if (typeof conversions === 'string') {\r\n                for (i in unitConversions) {\r\n                    if (unitConversions[i].hasOwnProperty(conversions)) {\r\n                        derivedConversions = {};\r\n                        derivedConversions[i] = conversions;\r\n                    }\r\n                }\r\n                conversions = derivedConversions;\r\n            }\r\n            applyUnit = function (atomicUnit, denominator) {\r\n                /* jshint loopfunc:true */\r\n                if (group.hasOwnProperty(atomicUnit)) {\r\n                    if (denominator) {\r\n                        value = value / (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    else {\r\n                        value = value * (group[atomicUnit] / group[targetUnit]);\r\n                    }\r\n                    return targetUnit;\r\n                }\r\n                return atomicUnit;\r\n            };\r\n            for (groupName in conversions) {\r\n                if (conversions.hasOwnProperty(groupName)) {\r\n                    targetUnit = conversions[groupName];\r\n                    group = unitConversions[groupName];\r\n                    unit.map(applyUnit);\r\n                }\r\n            }\r\n            unit.cancel();\r\n            return new Dimension(value, unit);\r\n        }\r\n    });\n\n    var MATH$1 = Math$1;\r\n    var Operation = function (op, operands, isSpaced) {\r\n        this.op = op.trim();\r\n        this.operands = operands;\r\n        this.isSpaced = isSpaced;\r\n    };\r\n    Operation.prototype = Object.assign(new Node(), {\r\n        type: 'Operation',\r\n        accept: function (visitor) {\r\n            this.operands = visitor.visitArray(this.operands);\r\n        },\r\n        eval: function (context) {\r\n            var a = this.operands[0].eval(context), b = this.operands[1].eval(context), op;\r\n            if (context.isMathOn(this.op)) {\r\n                op = this.op === './' ? '/' : this.op;\r\n                if (a instanceof Dimension && b instanceof Color) {\r\n                    a = a.toColor();\r\n                }\r\n                if (b instanceof Dimension && a instanceof Color) {\r\n                    b = b.toColor();\r\n                }\r\n                if (!a.operate || !b.operate) {\r\n                    if ((a instanceof Operation || b instanceof Operation)\r\n                        && a.op === '/' && context.math === MATH$1.PARENS_DIVISION) {\r\n                        return new Operation(this.op, [a, b], this.isSpaced);\r\n                    }\r\n                    throw { type: 'Operation',\r\n                        message: 'Operation on an invalid type' };\r\n                }\r\n                return a.operate(context, op, b);\r\n            }\r\n            else {\r\n                return new Operation(this.op, [a, b], this.isSpaced);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            this.operands[0].genCSS(context, output);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            output.add(this.op);\r\n            if (this.isSpaced) {\r\n                output.add(' ');\r\n            }\r\n            this.operands[1].genCSS(context, output);\r\n        }\r\n    });\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    function __spreadArrays$1() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    var Expression = function (value, noSpacing) {\r\n        this.value = value;\r\n        this.noSpacing = noSpacing;\r\n        if (!value) {\r\n            throw new Error('Expression requires an array parameter');\r\n        }\r\n    };\r\n    Expression.prototype = Object.assign(new Node(), {\r\n        type: 'Expression',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visitArray(this.value);\r\n        },\r\n        eval: function (context) {\r\n            var returnValue;\r\n            var mathOn = context.isMathOn();\r\n            var inParenthesis = this.parens;\r\n            var doubleParen = false;\r\n            if (inParenthesis) {\r\n                context.inParenthesis();\r\n            }\r\n            if (this.value.length > 1) {\r\n                returnValue = new Expression(this.value.map(function (e) {\r\n                    if (!e.eval) {\r\n                        return e;\r\n                    }\r\n                    return e.eval(context);\r\n                }), this.noSpacing);\r\n            }\r\n            else if (this.value.length === 1) {\r\n                if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\r\n                    doubleParen = true;\r\n                }\r\n                returnValue = this.value[0].eval(context);\r\n            }\r\n            else {\r\n                returnValue = this;\r\n            }\r\n            if (inParenthesis) {\r\n                context.outOfParenthesis();\r\n            }\r\n            if (this.parens && this.parensInOp && !mathOn && !doubleParen\r\n                && (!(returnValue instanceof Dimension))) {\r\n                returnValue = new Paren(returnValue);\r\n            }\r\n            return returnValue;\r\n        },\r\n        genCSS: function (context, output) {\r\n            for (var i = 0; i < this.value.length; i++) {\r\n                this.value[i].genCSS(context, output);\r\n                if (!this.noSpacing && i + 1 < this.value.length) {\r\n                    output.add(' ');\r\n                }\r\n            }\r\n        },\r\n        throwAwayComments: function () {\r\n            this.value = this.value.filter(function (v) {\r\n                return !(v instanceof Comment);\r\n            });\r\n        }\r\n    });\n\n    var functionCaller = /** @class */ (function () {\r\n        function functionCaller(name, context, index, currentFileInfo) {\r\n            this.name = name.toLowerCase();\r\n            this.index = index;\r\n            this.context = context;\r\n            this.currentFileInfo = currentFileInfo;\r\n            this.func = context.frames[0].functionRegistry.get(this.name);\r\n        }\r\n        functionCaller.prototype.isValid = function () {\r\n            return Boolean(this.func);\r\n        };\r\n        functionCaller.prototype.call = function (args) {\r\n            var _this = this;\r\n            if (!(Array.isArray(args))) {\r\n                args = [args];\r\n            }\r\n            var evalArgs = this.func.evalArgs;\r\n            if (evalArgs !== false) {\r\n                args = args.map(function (a) { return a.eval(_this.context); });\r\n            }\r\n            var commentFilter = function (item) { return !(item.type === 'Comment'); };\r\n            // This code is terrible and should be replaced as per this issue...\r\n            // https://github.com/less/less.js/issues/2477\r\n            args = args\r\n                .filter(commentFilter)\r\n                .map(function (item) {\r\n                if (item.type === 'Expression') {\r\n                    var subNodes = item.value.filter(commentFilter);\r\n                    if (subNodes.length === 1) {\r\n                        return subNodes[0];\r\n                    }\r\n                    else {\r\n                        return new Expression(subNodes);\r\n                    }\r\n                }\r\n                return item;\r\n            });\r\n            if (evalArgs === false) {\r\n                return this.func.apply(this, __spreadArrays$1([this.context], args));\r\n            }\r\n            return this.func.apply(this, args);\r\n        };\r\n        return functionCaller;\r\n    }());\n\n    //\r\n    // A function call node.\r\n    //\r\n    var Call = function (name, args, index, currentFileInfo) {\r\n        this.name = name;\r\n        this.args = args;\r\n        this.calc = name === 'calc';\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Call.prototype = Object.assign(new Node(), {\r\n        type: 'Call',\r\n        accept: function (visitor) {\r\n            if (this.args) {\r\n                this.args = visitor.visitArray(this.args);\r\n            }\r\n        },\r\n        //\r\n        // When evaluating a function call,\r\n        // we either find the function in the functionRegistry,\r\n        // in which case we call it, passing the  evaluated arguments,\r\n        // if this returns null or we cannot find the function, we\r\n        // simply print it out as it appeared originally [2].\r\n        //\r\n        // The reason why we evaluate the arguments, is in the case where\r\n        // we try to pass a variable to a function, like: `saturate(@color)`.\r\n        // The function should receive the value, not the variable.\r\n        //\r\n        eval: function (context) {\r\n            var _this = this;\r\n            /**\r\n             * Turn off math for calc(), and switch back on for evaluating nested functions\r\n             */\r\n            var currentMathContext = context.mathOn;\r\n            context.mathOn = !this.calc;\r\n            if (this.calc || context.inCalc) {\r\n                context.enterCalc();\r\n            }\r\n            var exitCalc = function () {\r\n                if (_this.calc || context.inCalc) {\r\n                    context.exitCalc();\r\n                }\r\n                context.mathOn = currentMathContext;\r\n            };\r\n            var result;\r\n            var funcCaller = new functionCaller(this.name, context, this.getIndex(), this.fileInfo());\r\n            if (funcCaller.isValid()) {\r\n                try {\r\n                    result = funcCaller.call(this.args);\r\n                    exitCalc();\r\n                }\r\n                catch (e) {\r\n                    if (e.hasOwnProperty('line') && e.hasOwnProperty('column')) {\r\n                        throw e;\r\n                    }\r\n                    throw {\r\n                        type: e.type || 'Runtime',\r\n                        message: \"Error evaluating function `\" + this.name + \"`\" + (e.message ? \": \" + e.message : ''),\r\n                        index: this.getIndex(),\r\n                        filename: this.fileInfo().filename,\r\n                        line: e.lineNumber,\r\n                        column: e.columnNumber\r\n                    };\r\n                }\r\n            }\r\n            if (result !== null && result !== undefined) {\r\n                // Results that that are not nodes are cast as Anonymous nodes\r\n                // Falsy values or booleans are returned as empty nodes\r\n                if (!(result instanceof Node)) {\r\n                    if (!result || result === true) {\r\n                        result = new Anonymous(null);\r\n                    }\r\n                    else {\r\n                        result = new Anonymous(result.toString());\r\n                    }\r\n                }\r\n                result._index = this._index;\r\n                result._fileInfo = this._fileInfo;\r\n                return result;\r\n            }\r\n            var args = this.args.map(function (a) { return a.eval(context); });\r\n            exitCalc();\r\n            return new Call(this.name, args, this.getIndex(), this.fileInfo());\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.name + \"(\", this.fileInfo(), this.getIndex());\r\n            for (var i = 0; i < this.args.length; i++) {\r\n                this.args[i].genCSS(context, output);\r\n                if (i + 1 < this.args.length) {\r\n                    output.add(', ');\r\n                }\r\n            }\r\n            output.add(')');\r\n        }\r\n    });\n\n    var Variable = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Variable.prototype = Object.assign(new Node(), {\r\n        type: 'Variable',\r\n        eval: function (context) {\r\n            var variable, name = this.name;\r\n            if (name.indexOf('@@') === 0) {\r\n                name = \"@\" + new Variable(name.slice(1), this.getIndex(), this.fileInfo()).eval(context).value;\r\n            }\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive variable definition for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            variable = this.find(context.frames, function (frame) {\r\n                var v = frame.variable(name);\r\n                if (v) {\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    // If in calc, wrap vars in a function call to cascade evaluate args first\r\n                    if (context.inCalc) {\r\n                        return (new Call('_SELF', [v.value])).eval(context);\r\n                    }\r\n                    else {\r\n                        return v.value.eval(context);\r\n                    }\r\n                }\r\n            });\r\n            if (variable) {\r\n                this.evaluating = false;\r\n                return variable;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"variable \" + name + \" is undefined\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Property = function (name, index, currentFileInfo) {\r\n        this.name = name;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    Property.prototype = Object.assign(new Node(), {\r\n        type: 'Property',\r\n        eval: function (context) {\r\n            var property;\r\n            var name = this.name;\r\n            // TODO: shorten this reference\r\n            var mergeRules = context.pluginManager.less.visitors.ToCSSVisitor.prototype._mergeRules;\r\n            if (this.evaluating) {\r\n                throw { type: 'Name', message: \"Recursive property reference for \" + name, filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            this.evaluating = true;\r\n            property = this.find(context.frames, function (frame) {\r\n                var v;\r\n                var vArr = frame.property(name);\r\n                if (vArr) {\r\n                    for (var i = 0; i < vArr.length; i++) {\r\n                        v = vArr[i];\r\n                        vArr[i] = new Declaration(v.name, v.value, v.important, v.merge, v.index, v.currentFileInfo, v.inline, v.variable);\r\n                    }\r\n                    mergeRules(vArr);\r\n                    v = vArr[vArr.length - 1];\r\n                    if (v.important) {\r\n                        var importantScope = context.importantScope[context.importantScope.length - 1];\r\n                        importantScope.important = v.important;\r\n                    }\r\n                    v = v.value.eval(context);\r\n                    return v;\r\n                }\r\n            });\r\n            if (property) {\r\n                this.evaluating = false;\r\n                return property;\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: \"Property '\" + name + \"' is undefined\", filename: this.currentFileInfo.filename,\r\n                    index: this.index };\r\n            }\r\n        },\r\n        find: function (obj, fun) {\r\n            for (var i = 0, r = void 0; i < obj.length; i++) {\r\n                r = fun.call(obj, obj[i]);\r\n                if (r) {\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    });\n\n    var Attribute = function (key, op, value) {\r\n        this.key = key;\r\n        this.op = op;\r\n        this.value = value;\r\n    };\r\n    Attribute.prototype = Object.assign(new Node(), {\r\n        type: 'Attribute',\r\n        eval: function (context) {\r\n            return new Attribute(this.key.eval ? this.key.eval(context) : this.key, this.op, (this.value && this.value.eval) ? this.value.eval(context) : this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.toCSS(context));\r\n        },\r\n        toCSS: function (context) {\r\n            var value = this.key.toCSS ? this.key.toCSS(context) : this.key;\r\n            if (this.op) {\r\n                value += this.op;\r\n                value += (this.value.toCSS ? this.value.toCSS(context) : this.value);\r\n            }\r\n            return \"[\" + value + \"]\";\r\n        }\r\n    });\n\n    var Quoted = function (str, content, escaped, index, currentFileInfo) {\r\n        this.escaped = (escaped == null) ? true : escaped;\r\n        this.value = content || '';\r\n        this.quote = str.charAt(0);\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.variableRegex = /@\\{([\\w-]+)\\}/g;\r\n        this.propRegex = /\\$\\{([\\w-]+)\\}/g;\r\n        this.allowRoot = escaped;\r\n    };\r\n    Quoted.prototype = Object.assign(new Node(), {\r\n        type: 'Quoted',\r\n        genCSS: function (context, output) {\r\n            if (!this.escaped) {\r\n                output.add(this.quote, this.fileInfo(), this.getIndex());\r\n            }\r\n            output.add(this.value);\r\n            if (!this.escaped) {\r\n                output.add(this.quote);\r\n            }\r\n        },\r\n        containsVariables: function () {\r\n            return this.value.match(this.variableRegex);\r\n        },\r\n        eval: function (context) {\r\n            var that = this;\r\n            var value = this.value;\r\n            var variableReplacement = function (_, name) {\r\n                var v = new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            var propertyReplacement = function (_, name) {\r\n                var v = new Property(\"$\" + name, that.getIndex(), that.fileInfo()).eval(context, true);\r\n                return (v instanceof Quoted) ? v.value : v.toCSS();\r\n            };\r\n            function iterativeReplace(value, regexp, replacementFnc) {\r\n                var evaluatedValue = value;\r\n                do {\r\n                    value = evaluatedValue.toString();\r\n                    evaluatedValue = value.replace(regexp, replacementFnc);\r\n                } while (value !== evaluatedValue);\r\n                return evaluatedValue;\r\n            }\r\n            value = iterativeReplace(value, this.variableRegex, variableReplacement);\r\n            value = iterativeReplace(value, this.propRegex, propertyReplacement);\r\n            return new Quoted(this.quote + value + this.quote, value, this.escaped, this.getIndex(), this.fileInfo());\r\n        },\r\n        compare: function (other) {\r\n            // when comparing quoted strings allow the quote to differ\r\n            if (other.type === 'Quoted' && !this.escaped && !other.escaped) {\r\n                return Node.numericCompare(this.value, other.value);\r\n            }\r\n            else {\r\n                return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;\r\n            }\r\n        }\r\n    });\n\n    function escapePath(path) {\r\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) { return \"\\\\\" + match; });\r\n    }\r\n    var URL = function (val, index, currentFileInfo, isEvald) {\r\n        this.value = val;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.isEvald = isEvald;\r\n    };\r\n    URL.prototype = Object.assign(new Node(), {\r\n        type: 'Url',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('url(');\r\n            this.value.genCSS(context, output);\r\n            output.add(')');\r\n        },\r\n        eval: function (context) {\r\n            var val = this.value.eval(context);\r\n            var rootpath;\r\n            if (!this.isEvald) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                rootpath = this.fileInfo() && this.fileInfo().rootpath;\r\n                if (typeof rootpath === 'string' &&\r\n                    typeof val.value === 'string' &&\r\n                    context.pathRequiresRewrite(val.value)) {\r\n                    if (!val.quote) {\r\n                        rootpath = escapePath(rootpath);\r\n                    }\r\n                    val.value = context.rewritePath(val.value, rootpath);\r\n                }\r\n                else {\r\n                    val.value = context.normalizePath(val.value);\r\n                }\r\n                // Add url args if enabled\r\n                if (context.urlArgs) {\r\n                    if (!val.value.match(/^\\s*data:/)) {\r\n                        var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\r\n                        var urlArgs = delimiter + context.urlArgs;\r\n                        if (val.value.indexOf('#') !== -1) {\r\n                            val.value = val.value.replace('#', urlArgs + \"#\");\r\n                        }\r\n                        else {\r\n                            val.value += urlArgs;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return new URL(val, this.getIndex(), this.fileInfo(), true);\r\n        }\r\n    });\n\n    var Media = function (value, features, index, currentFileInfo, visibilityInfo) {\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        var selectors = (new Selector([], null, null, this._index, this._fileInfo)).createEmptySelectors();\r\n        this.features = new Value(features);\r\n        this.rules = [new Ruleset(selectors, value)];\r\n        this.rules[0].allowImports = true;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        this.setParent(selectors, this);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.rules, this);\r\n    };\r\n    Media.prototype = Object.assign(new AtRule(), {\r\n        type: 'Media',\r\n        isRulesetLike: function () {\r\n            return true;\r\n        },\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            if (this.rules) {\r\n                this.rules = visitor.visitArray(this.rules);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add('@media ', this._fileInfo, this._index);\r\n            this.features.genCSS(context, output);\r\n            this.outputRuleset(context, output, this.rules);\r\n        },\r\n        eval: function (context) {\r\n            if (!context.mediaBlocks) {\r\n                context.mediaBlocks = [];\r\n                context.mediaPath = [];\r\n            }\r\n            var media = new Media(null, [], this._index, this._fileInfo, this.visibilityInfo());\r\n            if (this.debugInfo) {\r\n                this.rules[0].debugInfo = this.debugInfo;\r\n                media.debugInfo = this.debugInfo;\r\n            }\r\n            media.features = this.features.eval(context);\r\n            context.mediaPath.push(media);\r\n            context.mediaBlocks.push(media);\r\n            this.rules[0].functionRegistry = context.frames[0].functionRegistry.inherit();\r\n            context.frames.unshift(this.rules[0]);\r\n            media.rules = [this.rules[0].eval(context)];\r\n            context.frames.shift();\r\n            context.mediaPath.pop();\r\n            return context.mediaPath.length === 0 ? media.evalTop(context) :\r\n                media.evalNested(context);\r\n        },\r\n        evalTop: function (context) {\r\n            var result = this;\r\n            // Render all dependent Media blocks.\r\n            if (context.mediaBlocks.length > 1) {\r\n                var selectors = (new Selector([], null, null, this.getIndex(), this.fileInfo())).createEmptySelectors();\r\n                result = new Ruleset(selectors, context.mediaBlocks);\r\n                result.multiMedia = true;\r\n                result.copyVisibilityInfo(this.visibilityInfo());\r\n                this.setParent(result, this);\r\n            }\r\n            delete context.mediaBlocks;\r\n            delete context.mediaPath;\r\n            return result;\r\n        },\r\n        evalNested: function (context) {\r\n            var i;\r\n            var value;\r\n            var path = context.mediaPath.concat([this]);\r\n            // Extract the media-query conditions separated with `,` (OR).\r\n            for (i = 0; i < path.length; i++) {\r\n                value = path[i].features instanceof Value ?\r\n                    path[i].features.value : path[i].features;\r\n                path[i] = Array.isArray(value) ? value : [value];\r\n            }\r\n            // Trace all permutations to generate the resulting media-query.\r\n            //\r\n            // (a, b and c) with nested (d, e) ->\r\n            //    a and d\r\n            //    a and e\r\n            //    b and c and d\r\n            //    b and c and e\r\n            this.features = new Value(this.permute(path).map(function (path) {\r\n                path = path.map(function (fragment) { return fragment.toCSS ? fragment : new Anonymous(fragment); });\r\n                for (i = path.length - 1; i > 0; i--) {\r\n                    path.splice(i, 0, new Anonymous('and'));\r\n                }\r\n                return new Expression(path);\r\n            }));\r\n            this.setParent(this.features, this);\r\n            // Fake a tree-node that doesn't output anything.\r\n            return new Ruleset([], []);\r\n        },\r\n        permute: function (arr) {\r\n            if (arr.length === 0) {\r\n                return [];\r\n            }\r\n            else if (arr.length === 1) {\r\n                return arr[0];\r\n            }\r\n            else {\r\n                var result = [];\r\n                var rest = this.permute(arr.slice(1));\r\n                for (var i = 0; i < rest.length; i++) {\r\n                    for (var j = 0; j < arr[0].length; j++) {\r\n                        result.push([arr[0][j]].concat(rest[i]));\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        bubbleSelectors: function (selectors) {\r\n            if (!selectors) {\r\n                return;\r\n            }\r\n            this.rules = [new Ruleset(copyArray(selectors), [this.rules[0]])];\r\n            this.setParent(this.rules, this);\r\n        }\r\n    });\n\n    //\r\n    // CSS @import node\r\n    //\r\n    // The general strategy here is that we don't want to wait\r\n    // for the parsing to be completed, before we start importing\r\n    // the file. That's because in the context of a browser,\r\n    // most of the time will be spent waiting for the server to respond.\r\n    //\r\n    // On creation, we push the import path to our import queue, though\r\n    // `import,push`, we also pass it a callback, which it'll call once\r\n    // the file has been fetched, and parsed.\r\n    //\r\n    var Import = function (path, features, options, index, currentFileInfo, visibilityInfo) {\r\n        this.options = options;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.path = path;\r\n        this.features = features;\r\n        this.allowRoot = true;\r\n        if (this.options.less !== undefined || this.options.inline) {\r\n            this.css = !this.options.less || this.options.inline;\r\n        }\r\n        else {\r\n            var pathValue = this.getPath();\r\n            if (pathValue && /[#\\.\\&\\?]css([\\?;].*)?$/.test(pathValue)) {\r\n                this.css = true;\r\n            }\r\n        }\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.setParent(this.features, this);\r\n        this.setParent(this.path, this);\r\n    };\r\n    Import.prototype = Object.assign(new Node(), {\r\n        type: 'Import',\r\n        accept: function (visitor) {\r\n            if (this.features) {\r\n                this.features = visitor.visit(this.features);\r\n            }\r\n            this.path = visitor.visit(this.path);\r\n            if (!this.options.isPlugin && !this.options.inline && this.root) {\r\n                this.root = visitor.visit(this.root);\r\n            }\r\n        },\r\n        genCSS: function (context, output) {\r\n            if (this.css && this.path._fileInfo.reference === undefined) {\r\n                output.add('@import ', this._fileInfo, this._index);\r\n                this.path.genCSS(context, output);\r\n                if (this.features) {\r\n                    output.add(' ');\r\n                    this.features.genCSS(context, output);\r\n                }\r\n                output.add(';');\r\n            }\r\n        },\r\n        getPath: function () {\r\n            return (this.path instanceof URL) ?\r\n                this.path.value.value : this.path.value;\r\n        },\r\n        isVariableImport: function () {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            if (path instanceof Quoted) {\r\n                return path.containsVariables();\r\n            }\r\n            return true;\r\n        },\r\n        evalForImport: function (context) {\r\n            var path = this.path;\r\n            if (path instanceof URL) {\r\n                path = path.value;\r\n            }\r\n            return new Import(path.eval(context), this.features, this.options, this._index, this._fileInfo, this.visibilityInfo());\r\n        },\r\n        evalPath: function (context) {\r\n            var path = this.path.eval(context);\r\n            var fileInfo = this._fileInfo;\r\n            if (!(path instanceof URL)) {\r\n                // Add the rootpath if the URL requires a rewrite\r\n                var pathValue = path.value;\r\n                if (fileInfo &&\r\n                    pathValue &&\r\n                    context.pathRequiresRewrite(pathValue)) {\r\n                    path.value = context.rewritePath(pathValue, fileInfo.rootpath);\r\n                }\r\n                else {\r\n                    path.value = context.normalizePath(path.value);\r\n                }\r\n            }\r\n            return path;\r\n        },\r\n        eval: function (context) {\r\n            var result = this.doEval(context);\r\n            if (this.options.reference || this.blocksVisibility()) {\r\n                if (result.length || result.length === 0) {\r\n                    result.forEach(function (node) {\r\n                        node.addVisibilityBlock();\r\n                    });\r\n                }\r\n                else {\r\n                    result.addVisibilityBlock();\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        doEval: function (context) {\r\n            var ruleset;\r\n            var registry;\r\n            var features = this.features && this.features.eval(context);\r\n            if (this.options.isPlugin) {\r\n                if (this.root && this.root.eval) {\r\n                    try {\r\n                        this.root.eval(context);\r\n                    }\r\n                    catch (e) {\r\n                        e.message = 'Plugin error during evaluation';\r\n                        throw new LessError(e, this.root.imports, this.root.filename);\r\n                    }\r\n                }\r\n                registry = context.frames[0] && context.frames[0].functionRegistry;\r\n                if (registry && this.root && this.root.functions) {\r\n                    registry.addMultiple(this.root.functions);\r\n                }\r\n                return [];\r\n            }\r\n            if (this.skip) {\r\n                if (typeof this.skip === 'function') {\r\n                    this.skip = this.skip();\r\n                }\r\n                if (this.skip) {\r\n                    return [];\r\n                }\r\n            }\r\n            if (this.options.inline) {\r\n                var contents = new Anonymous(this.root, 0, {\r\n                    filename: this.importedFilename,\r\n                    reference: this.path._fileInfo && this.path._fileInfo.reference\r\n                }, true, true);\r\n                return this.features ? new Media([contents], this.features.value) : [contents];\r\n            }\r\n            else if (this.css) {\r\n                var newImport = new Import(this.evalPath(context), features, this.options, this._index);\r\n                if (!newImport.css && this.error) {\r\n                    throw this.error;\r\n                }\r\n                return newImport;\r\n            }\r\n            else if (this.root) {\r\n                ruleset = new Ruleset(null, copyArray(this.root.rules));\r\n                ruleset.evalImports(context);\r\n                return this.features ? new Media(ruleset.rules, this.features.value) : ruleset.rules;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        }\r\n    });\n\n    var JsEvalNode = function () { };\r\n    JsEvalNode.prototype = Object.assign(new Node(), {\r\n        evaluateJavaScript: function (expression, context) {\r\n            var result;\r\n            var that = this;\r\n            var evalContext = {};\r\n            if (!context.javascriptEnabled) {\r\n                throw { message: 'Inline JavaScript is not enabled. Is it set in your options?',\r\n                    filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            expression = expression.replace(/@\\{([\\w-]+)\\}/g, function (_, name) {\r\n                return that.jsify(new Variable(\"@\" + name, that.getIndex(), that.fileInfo()).eval(context));\r\n            });\r\n            try {\r\n                expression = new Function(\"return (\" + expression + \")\");\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: \" + e.message + \" from `\" + expression + \"`\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            var variables = context.frames[0].variables();\r\n            for (var k in variables) {\r\n                if (variables.hasOwnProperty(k)) {\r\n                    /* jshint loopfunc:true */\r\n                    evalContext[k.slice(1)] = {\r\n                        value: variables[k].value,\r\n                        toJS: function () {\r\n                            return this.value.eval(context).toCSS();\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n            try {\r\n                result = expression.call(evalContext);\r\n            }\r\n            catch (e) {\r\n                throw { message: \"JavaScript evaluation error: '\" + e.name + \": \" + e.message.replace(/[\"]/g, '\\'') + \"'\", filename: this.fileInfo().filename,\r\n                    index: this.getIndex() };\r\n            }\r\n            return result;\r\n        },\r\n        jsify: function (obj) {\r\n            if (Array.isArray(obj.value) && (obj.value.length > 1)) {\r\n                return \"[\" + obj.value.map(function (v) { return v.toCSS(); }).join(', ') + \"]\";\r\n            }\r\n            else {\r\n                return obj.toCSS();\r\n            }\r\n        }\r\n    });\n\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\r\n        this.escaped = escaped;\r\n        this.expression = string;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n    };\r\n    JavaScript.prototype = Object.assign(new JsEvalNode(), {\r\n        type: 'JavaScript',\r\n        eval: function (context) {\r\n            var result = this.evaluateJavaScript(this.expression, context);\r\n            var type = typeof result;\r\n            if (type === 'number' && !isNaN(result)) {\r\n                return new Dimension(result);\r\n            }\r\n            else if (type === 'string') {\r\n                return new Quoted(\"\\\"\" + result + \"\\\"\", result, this.escaped, this._index);\r\n            }\r\n            else if (Array.isArray(result)) {\r\n                return new Anonymous(result.join(', '));\r\n            }\r\n            else {\r\n                return new Anonymous(result);\r\n            }\r\n        }\r\n    });\n\n    var Assignment = function (key, val) {\r\n        this.key = key;\r\n        this.value = val;\r\n    };\r\n    Assignment.prototype = Object.assign(new Node(), {\r\n        type: 'Assignment',\r\n        accept: function (visitor) {\r\n            this.value = visitor.visit(this.value);\r\n        },\r\n        eval: function (context) {\r\n            if (this.value.eval) {\r\n                return new Assignment(this.key, this.value.eval(context));\r\n            }\r\n            return this;\r\n        },\r\n        genCSS: function (context, output) {\r\n            output.add(this.key + \"=\");\r\n            if (this.value.genCSS) {\r\n                this.value.genCSS(context, output);\r\n            }\r\n            else {\r\n                output.add(this.value);\r\n            }\r\n        }\r\n    });\n\n    var Condition = function (op, l, r, i, negate) {\r\n        this.op = op.trim();\r\n        this.lvalue = l;\r\n        this.rvalue = r;\r\n        this._index = i;\r\n        this.negate = negate;\r\n    };\r\n    Condition.prototype = Object.assign(new Node(), {\r\n        type: 'Condition',\r\n        accept: function (visitor) {\r\n            this.lvalue = visitor.visit(this.lvalue);\r\n            this.rvalue = visitor.visit(this.rvalue);\r\n        },\r\n        eval: function (context) {\r\n            var result = (function (op, a, b) {\r\n                switch (op) {\r\n                    case 'and': return a && b;\r\n                    case 'or': return a || b;\r\n                    default:\r\n                        switch (Node.compare(a, b)) {\r\n                            case -1:\r\n                                return op === '<' || op === '=<' || op === '<=';\r\n                            case 0:\r\n                                return op === '=' || op === '>=' || op === '=<' || op === '<=';\r\n                            case 1:\r\n                                return op === '>' || op === '>=';\r\n                            default:\r\n                                return false;\r\n                        }\r\n                }\r\n            })(this.op, this.lvalue.eval(context), this.rvalue.eval(context));\r\n            return this.negate ? !result : result;\r\n        }\r\n    });\n\n    var UnicodeDescriptor = function (value) {\r\n        this.value = value;\r\n    };\r\n    UnicodeDescriptor.prototype = Object.assign(new Node(), {\r\n        type: 'UnicodeDescriptor'\r\n    });\n\n    var Negative = function (node) {\r\n        this.value = node;\r\n    };\r\n    Negative.prototype = Object.assign(new Node(), {\r\n        type: 'Negative',\r\n        genCSS: function (context, output) {\r\n            output.add('-');\r\n            this.value.genCSS(context, output);\r\n        },\r\n        eval: function (context) {\r\n            if (context.isMathOn()) {\r\n                return (new Operation('*', [new Dimension(-1), this.value])).eval(context);\r\n            }\r\n            return new Negative(this.value.eval(context));\r\n        }\r\n    });\n\n    var Extend = function (selector, option, index, currentFileInfo, visibilityInfo) {\r\n        this.selector = selector;\r\n        this.option = option;\r\n        this.object_id = Extend.next_id++;\r\n        this.parent_ids = [this.object_id];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n        switch (option) {\r\n            case 'all':\r\n                this.allowBefore = true;\r\n                this.allowAfter = true;\r\n                break;\r\n            default:\r\n                this.allowBefore = false;\r\n                this.allowAfter = false;\r\n                break;\r\n        }\r\n        this.setParent(this.selector, this);\r\n    };\r\n    Extend.prototype = Object.assign(new Node(), {\r\n        type: 'Extend',\r\n        accept: function (visitor) {\r\n            this.selector = visitor.visit(this.selector);\r\n        },\r\n        eval: function (context) {\r\n            return new Extend(this.selector.eval(context), this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        clone: function (context) {\r\n            return new Extend(this.selector, this.option, this.getIndex(), this.fileInfo(), this.visibilityInfo());\r\n        },\r\n        // it concatenates (joins) all selectors in selector array\r\n        findSelfSelectors: function (selectors) {\r\n            var selfElements = [], i, selectorElements;\r\n            for (i = 0; i < selectors.length; i++) {\r\n                selectorElements = selectors[i].elements;\r\n                // duplicate the logic in genCSS function inside the selector node.\r\n                // future TODO - move both logics into the selector joiner visitor\r\n                if (i > 0 && selectorElements.length && selectorElements[0].combinator.value === '') {\r\n                    selectorElements[0].combinator.value = ' ';\r\n                }\r\n                selfElements = selfElements.concat(selectors[i].elements);\r\n            }\r\n            this.selfSelectors = [new Selector(selfElements)];\r\n            this.selfSelectors[0].copyVisibilityInfo(this.visibilityInfo());\r\n        }\r\n    });\r\n    Extend.next_id = 0;\n\n    var VariableCall = function (variable, index, currentFileInfo) {\r\n        this.variable = variable;\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.allowRoot = true;\r\n    };\r\n    VariableCall.prototype = Object.assign(new Node(), {\r\n        type: 'VariableCall',\r\n        eval: function (context) {\r\n            var rules;\r\n            var detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context);\r\n            var error = new LessError({ message: \"Could not evaluate variable call \" + this.variable });\r\n            if (!detachedRuleset.ruleset) {\r\n                if (detachedRuleset.rules) {\r\n                    rules = detachedRuleset;\r\n                }\r\n                else if (Array.isArray(detachedRuleset)) {\r\n                    rules = new Ruleset('', detachedRuleset);\r\n                }\r\n                else if (Array.isArray(detachedRuleset.value)) {\r\n                    rules = new Ruleset('', detachedRuleset.value);\r\n                }\r\n                else {\r\n                    throw error;\r\n                }\r\n                detachedRuleset = new DetachedRuleset(rules);\r\n            }\r\n            if (detachedRuleset.ruleset) {\r\n                return detachedRuleset.callEval(context);\r\n            }\r\n            throw error;\r\n        }\r\n    });\n\n    var NamespaceValue = function (ruleCall, lookups, index, fileInfo) {\r\n        this.value = ruleCall;\r\n        this.lookups = lookups;\r\n        this._index = index;\r\n        this._fileInfo = fileInfo;\r\n    };\r\n    NamespaceValue.prototype = Object.assign(new Node(), {\r\n        type: 'NamespaceValue',\r\n        eval: function (context) {\r\n            var i, name, rules = this.value.eval(context);\r\n            for (i = 0; i < this.lookups.length; i++) {\r\n                name = this.lookups[i];\r\n                /**\r\n                 * Eval'd DRs return rulesets.\r\n                 * Eval'd mixins return rules, so let's make a ruleset if we need it.\r\n                 * We need to do this because of late parsing of values\r\n                 */\r\n                if (Array.isArray(rules)) {\r\n                    rules = new Ruleset([new Selector()], rules);\r\n                }\r\n                if (name === '') {\r\n                    rules = rules.lastDeclaration();\r\n                }\r\n                else if (name.charAt(0) === '@') {\r\n                    if (name.charAt(1) === '@') {\r\n                        name = \"@\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    if (rules.variables) {\r\n                        rules = rules.variable(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"variable \" + name + \" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                }\r\n                else {\r\n                    if (name.substring(0, 2) === '$@') {\r\n                        name = \"$\" + new Variable(name.substr(1)).eval(context).value;\r\n                    }\r\n                    else {\r\n                        name = name.charAt(0) === '$' ? name : \"$\" + name;\r\n                    }\r\n                    if (rules.properties) {\r\n                        rules = rules.property(name);\r\n                    }\r\n                    if (!rules) {\r\n                        throw { type: 'Name', message: \"property \\\"\" + name.substr(1) + \"\\\" not found\", filename: this.fileInfo().filename,\r\n                            index: this.getIndex() };\r\n                    }\r\n                    // Properties are an array of values, since a ruleset can have multiple props.\r\n                    // We pick the last one (the \"cascaded\" value)\r\n                    rules = rules[rules.length - 1];\r\n                }\r\n                if (rules.value) {\r\n                    rules = rules.eval(context).value;\r\n                }\r\n                if (rules.ruleset) {\r\n                    rules = rules.ruleset.eval(context);\r\n                }\r\n            }\r\n            return rules;\r\n        }\r\n    });\n\n    var Definition = function (name, params, rules, condition, variadic, frames, visibilityInfo) {\r\n        this.name = name || 'anonymous mixin';\r\n        this.selectors = [new Selector([new Element(null, name, false, this._index, this._fileInfo)])];\r\n        this.params = params;\r\n        this.condition = condition;\r\n        this.variadic = variadic;\r\n        this.arity = params.length;\r\n        this.rules = rules;\r\n        this._lookups = {};\r\n        var optionalParameters = [];\r\n        this.required = params.reduce(function (count, p) {\r\n            if (!p.name || (p.name && !p.value)) {\r\n                return count + 1;\r\n            }\r\n            else {\r\n                optionalParameters.push(p.name);\r\n                return count;\r\n            }\r\n        }, 0);\r\n        this.optionalParameters = optionalParameters;\r\n        this.frames = frames;\r\n        this.copyVisibilityInfo(visibilityInfo);\r\n        this.allowRoot = true;\r\n    };\r\n    Definition.prototype = Object.assign(new Ruleset(), {\r\n        type: 'MixinDefinition',\r\n        evalFirst: true,\r\n        accept: function (visitor) {\r\n            if (this.params && this.params.length) {\r\n                this.params = visitor.visitArray(this.params);\r\n            }\r\n            this.rules = visitor.visitArray(this.rules);\r\n            if (this.condition) {\r\n                this.condition = visitor.visit(this.condition);\r\n            }\r\n        },\r\n        evalParams: function (context, mixinEnv, args, evaldArguments) {\r\n            /* jshint boss:true */\r\n            var frame = new Ruleset(null, null);\r\n            var varargs;\r\n            var arg;\r\n            var params = copyArray(this.params);\r\n            var i;\r\n            var j;\r\n            var val;\r\n            var name;\r\n            var isNamedFound;\r\n            var argIndex;\r\n            var argsLength = 0;\r\n            if (mixinEnv.frames && mixinEnv.frames[0] && mixinEnv.frames[0].functionRegistry) {\r\n                frame.functionRegistry = mixinEnv.frames[0].functionRegistry.inherit();\r\n            }\r\n            mixinEnv = new contexts.Eval(mixinEnv, [frame].concat(mixinEnv.frames));\r\n            if (args) {\r\n                args = copyArray(args);\r\n                argsLength = args.length;\r\n                for (i = 0; i < argsLength; i++) {\r\n                    arg = args[i];\r\n                    if (name = (arg && arg.name)) {\r\n                        isNamedFound = false;\r\n                        for (j = 0; j < params.length; j++) {\r\n                            if (!evaldArguments[j] && name === params[j].name) {\r\n                                evaldArguments[j] = arg.value.eval(context);\r\n                                frame.prependRule(new Declaration(name, arg.value.eval(context)));\r\n                                isNamedFound = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isNamedFound) {\r\n                            args.splice(i, 1);\r\n                            i--;\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"Named argument for \" + this.name + \" \" + args[i].name + \" not found\" };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            argIndex = 0;\r\n            for (i = 0; i < params.length; i++) {\r\n                if (evaldArguments[i]) {\r\n                    continue;\r\n                }\r\n                arg = args && args[argIndex];\r\n                if (name = params[i].name) {\r\n                    if (params[i].variadic) {\r\n                        varargs = [];\r\n                        for (j = argIndex; j < argsLength; j++) {\r\n                            varargs.push(args[j].value.eval(context));\r\n                        }\r\n                        frame.prependRule(new Declaration(name, new Expression(varargs).eval(context)));\r\n                    }\r\n                    else {\r\n                        val = arg && arg.value;\r\n                        if (val) {\r\n                            // This was a mixin call, pass in a detached ruleset of it's eval'd rules\r\n                            if (Array.isArray(val)) {\r\n                                val = new DetachedRuleset(new Ruleset('', val));\r\n                            }\r\n                            else {\r\n                                val = val.eval(context);\r\n                            }\r\n                        }\r\n                        else if (params[i].value) {\r\n                            val = params[i].value.eval(mixinEnv);\r\n                            frame.resetCache();\r\n                        }\r\n                        else {\r\n                            throw { type: 'Runtime', message: \"wrong number of arguments for \" + this.name + \" (\" + argsLength + \" for \" + this.arity + \")\" };\r\n                        }\r\n                        frame.prependRule(new Declaration(name, val));\r\n                        evaldArguments[i] = val;\r\n                    }\r\n                }\r\n                if (params[i].variadic && args) {\r\n                    for (j = argIndex; j < argsLength; j++) {\r\n                        evaldArguments[j] = args[j].value.eval(context);\r\n                    }\r\n                }\r\n                argIndex++;\r\n            }\r\n            return frame;\r\n        },\r\n        makeImportant: function () {\r\n            var rules = !this.rules ? this.rules : this.rules.map(function (r) {\r\n                if (r.makeImportant) {\r\n                    return r.makeImportant(true);\r\n                }\r\n                else {\r\n                    return r;\r\n                }\r\n            });\r\n            var result = new Definition(this.name, this.params, rules, this.condition, this.variadic, this.frames);\r\n            return result;\r\n        },\r\n        eval: function (context) {\r\n            return new Definition(this.name, this.params, this.rules, this.condition, this.variadic, this.frames || copyArray(context.frames));\r\n        },\r\n        evalCall: function (context, args, important) {\r\n            var _arguments = [];\r\n            var mixinFrames = this.frames ? this.frames.concat(context.frames) : context.frames;\r\n            var frame = this.evalParams(context, new contexts.Eval(context, mixinFrames), args, _arguments);\r\n            var rules;\r\n            var ruleset;\r\n            frame.prependRule(new Declaration('@arguments', new Expression(_arguments).eval(context)));\r\n            rules = copyArray(this.rules);\r\n            ruleset = new Ruleset(null, rules);\r\n            ruleset.originalRuleset = this;\r\n            ruleset = ruleset.eval(new contexts.Eval(context, [this, frame].concat(mixinFrames)));\r\n            if (important) {\r\n                ruleset = ruleset.makeImportant();\r\n            }\r\n            return ruleset;\r\n        },\r\n        matchCondition: function (args, context) {\r\n            if (this.condition && !this.condition.eval(new contexts.Eval(context, [this.evalParams(context, /* the parameter variables */ new contexts.Eval(context, this.frames ? this.frames.concat(context.frames) : context.frames), args, [])]\r\n                .concat(this.frames || []) // the parent namespace/mixin frames\r\n                .concat(context.frames)))) { // the current environment frames\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        matchArgs: function (args, context) {\r\n            var allArgsCnt = (args && args.length) || 0;\r\n            var len;\r\n            var optionalParameters = this.optionalParameters;\r\n            var requiredArgsCnt = !args ? 0 : args.reduce(function (count, p) {\r\n                if (optionalParameters.indexOf(p.name) < 0) {\r\n                    return count + 1;\r\n                }\r\n                else {\r\n                    return count;\r\n                }\r\n            }, 0);\r\n            if (!this.variadic) {\r\n                if (requiredArgsCnt < this.required) {\r\n                    return false;\r\n                }\r\n                if (allArgsCnt > this.params.length) {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                if (requiredArgsCnt < (this.required - 1)) {\r\n                    return false;\r\n                }\r\n            }\r\n            // check patterns\r\n            len = Math.min(requiredArgsCnt, this.arity);\r\n            for (var i = 0; i < len; i++) {\r\n                if (!this.params[i].name && !this.params[i].variadic) {\r\n                    if (args[i].value.eval(context).toCSS() != this.params[i].value.eval(context).toCSS()) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    });\n\n    var MixinCall = function (elements, args, index, currentFileInfo, important) {\r\n        this.selector = new Selector(elements);\r\n        this.arguments = args || [];\r\n        this._index = index;\r\n        this._fileInfo = currentFileInfo;\r\n        this.important = important;\r\n        this.allowRoot = true;\r\n        this.setParent(this.selector, this);\r\n    };\r\n    MixinCall.prototype = Object.assign(new Node(), {\r\n        type: 'MixinCall',\r\n        accept: function (visitor) {\r\n            if (this.selector) {\r\n                this.selector = visitor.visit(this.selector);\r\n            }\r\n            if (this.arguments.length) {\r\n                this.arguments = visitor.visitArray(this.arguments);\r\n            }\r\n        },\r\n        eval: function (context) {\r\n            var mixins;\r\n            var mixin;\r\n            var mixinPath;\r\n            var args = [];\r\n            var arg;\r\n            var argValue;\r\n            var rules = [];\r\n            var match = false;\r\n            var i;\r\n            var m;\r\n            var f;\r\n            var isRecursive;\r\n            var isOneFound;\r\n            var candidates = [];\r\n            var candidate;\r\n            var conditionResult = [];\r\n            var defaultResult;\r\n            var defFalseEitherCase = -1;\r\n            var defNone = 0;\r\n            var defTrue = 1;\r\n            var defFalse = 2;\r\n            var count;\r\n            var originalRuleset;\r\n            var noArgumentsFilter;\r\n            this.selector = this.selector.eval(context);\r\n            function calcDefGroup(mixin, mixinPath) {\r\n                var f, p, namespace;\r\n                for (f = 0; f < 2; f++) {\r\n                    conditionResult[f] = true;\r\n                    defaultFunc.value(f);\r\n                    for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\r\n                        namespace = mixinPath[p];\r\n                        if (namespace.matchCondition) {\r\n                            conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\r\n                        }\r\n                    }\r\n                    if (mixin.matchCondition) {\r\n                        conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\r\n                    }\r\n                }\r\n                if (conditionResult[0] || conditionResult[1]) {\r\n                    if (conditionResult[0] != conditionResult[1]) {\r\n                        return conditionResult[1] ?\r\n                            defTrue : defFalse;\r\n                    }\r\n                    return defNone;\r\n                }\r\n                return defFalseEitherCase;\r\n            }\r\n            for (i = 0; i < this.arguments.length; i++) {\r\n                arg = this.arguments[i];\r\n                argValue = arg.value.eval(context);\r\n                if (arg.expand && Array.isArray(argValue.value)) {\r\n                    argValue = argValue.value;\r\n                    for (m = 0; m < argValue.length; m++) {\r\n                        args.push({ value: argValue[m] });\r\n                    }\r\n                }\r\n                else {\r\n                    args.push({ name: arg.name, value: argValue });\r\n                }\r\n            }\r\n            noArgumentsFilter = function (rule) { return rule.matchArgs(null, context); };\r\n            for (i = 0; i < context.frames.length; i++) {\r\n                if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\r\n                    isOneFound = true;\r\n                    // To make `default()` function independent of definition order we have two \"subpasses\" here.\r\n                    // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\r\n                    // and build candidate list with corresponding flags. Then, when we know all possible matches,\r\n                    // we make a final decision.\r\n                    for (m = 0; m < mixins.length; m++) {\r\n                        mixin = mixins[m].rule;\r\n                        mixinPath = mixins[m].path;\r\n                        isRecursive = false;\r\n                        for (f = 0; f < context.frames.length; f++) {\r\n                            if ((!(mixin instanceof Definition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\r\n                                isRecursive = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isRecursive) {\r\n                            continue;\r\n                        }\r\n                        if (mixin.matchArgs(args, context)) {\r\n                            candidate = { mixin: mixin, group: calcDefGroup(mixin, mixinPath) };\r\n                            if (candidate.group !== defFalseEitherCase) {\r\n                                candidates.push(candidate);\r\n                            }\r\n                            match = true;\r\n                        }\r\n                    }\r\n                    defaultFunc.reset();\r\n                    count = [0, 0, 0];\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        count[candidates[m].group]++;\r\n                    }\r\n                    if (count[defNone] > 0) {\r\n                        defaultResult = defFalse;\r\n                    }\r\n                    else {\r\n                        defaultResult = defTrue;\r\n                        if ((count[defTrue] + count[defFalse]) > 1) {\r\n                            throw { type: 'Runtime', message: \"Ambiguous use of `default()` found when matching for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n                        }\r\n                    }\r\n                    for (m = 0; m < candidates.length; m++) {\r\n                        candidate = candidates[m].group;\r\n                        if ((candidate === defNone) || (candidate === defaultResult)) {\r\n                            try {\r\n                                mixin = candidates[m].mixin;\r\n                                if (!(mixin instanceof Definition)) {\r\n                                    originalRuleset = mixin.originalRuleset || mixin;\r\n                                    mixin = new Definition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\r\n                                    mixin.originalRuleset = originalRuleset;\r\n                                }\r\n                                var newRules = mixin.evalCall(context, args, this.important).rules;\r\n                                this._setVisibilityToReplacement(newRules);\r\n                                Array.prototype.push.apply(rules, newRules);\r\n                            }\r\n                            catch (e) {\r\n                                throw { message: e.message, index: this.getIndex(), filename: this.fileInfo().filename, stack: e.stack };\r\n                            }\r\n                        }\r\n                    }\r\n                    if (match) {\r\n                        return rules;\r\n                    }\r\n                }\r\n            }\r\n            if (isOneFound) {\r\n                throw { type: 'Runtime', message: \"No matching definition was found for `\" + this.format(args) + \"`\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n            else {\r\n                throw { type: 'Name', message: this.selector.toCSS().trim() + \" is undefined\", index: this.getIndex(), filename: this.fileInfo().filename };\r\n            }\r\n        },\r\n        _setVisibilityToReplacement: function (replacement) {\r\n            var i, rule;\r\n            if (this.blocksVisibility()) {\r\n                for (i = 0; i < replacement.length; i++) {\r\n                    rule = replacement[i];\r\n                    rule.addVisibilityBlock();\r\n                }\r\n            }\r\n        },\r\n        format: function (args) {\r\n            return this.selector.toCSS().trim() + \"(\" + (args ? args.map(function (a) {\r\n                var argValue = '';\r\n                if (a.name) {\r\n                    argValue += a.name + \":\";\r\n                }\r\n                if (a.value.toCSS) {\r\n                    argValue += a.value.toCSS();\r\n                }\r\n                else {\r\n                    argValue += '???';\r\n                }\r\n                return argValue;\r\n            }).join(', ') : '') + \")\";\r\n        }\r\n    });\n\n    var tree = {\r\n        Node: Node, Color: Color, AtRule: AtRule, DetachedRuleset: DetachedRuleset, Operation: Operation,\r\n        Dimension: Dimension, Unit: Unit, Keyword: Keyword, Variable: Variable, Property: Property,\r\n        Ruleset: Ruleset, Element: Element, Attribute: Attribute, Combinator: Combinator, Selector: Selector,\r\n        Quoted: Quoted, Expression: Expression, Declaration: Declaration, Call: Call, URL: URL, Import: Import,\r\n        Comment: Comment, Anonymous: Anonymous, Value: Value, JavaScript: JavaScript, Assignment: Assignment,\r\n        Condition: Condition, Paren: Paren, Media: Media, UnicodeDescriptor: UnicodeDescriptor, Negative: Negative,\r\n        Extend: Extend, VariableCall: VariableCall, NamespaceValue: NamespaceValue,\r\n        mixin: {\r\n            Call: MixinCall,\r\n            Definition: Definition\r\n        }\r\n    };\n\n    var AbstractFileManager = /** @class */ (function () {\r\n        function AbstractFileManager() {\r\n        }\r\n        AbstractFileManager.prototype.getPath = function (filename) {\r\n            var j = filename.lastIndexOf('?');\r\n            if (j > 0) {\r\n                filename = filename.slice(0, j);\r\n            }\r\n            j = filename.lastIndexOf('/');\r\n            if (j < 0) {\r\n                j = filename.lastIndexOf('\\\\');\r\n            }\r\n            if (j < 0) {\r\n                return '';\r\n            }\r\n            return filename.slice(0, j + 1);\r\n        };\r\n        AbstractFileManager.prototype.tryAppendExtension = function (path, ext) {\r\n            return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\r\n        };\r\n        AbstractFileManager.prototype.tryAppendLessExtension = function (path) {\r\n            return this.tryAppendExtension(path, '.less');\r\n        };\r\n        AbstractFileManager.prototype.supportsSync = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\r\n            return false;\r\n        };\r\n        AbstractFileManager.prototype.isPathAbsolute = function (filename) {\r\n            return (/^(?:[a-z-]+:|\\/|\\\\|#)/i).test(filename);\r\n        };\r\n        // TODO: pull out / replace?\r\n        AbstractFileManager.prototype.join = function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return basePath + laterPath;\r\n        };\r\n        AbstractFileManager.prototype.pathDiff = function (url, baseUrl) {\r\n            // diff between two paths to create a relative path\r\n            var urlParts = this.extractUrlParts(url);\r\n            var baseUrlParts = this.extractUrlParts(baseUrl);\r\n            var i;\r\n            var max;\r\n            var urlDirectories;\r\n            var baseUrlDirectories;\r\n            var diff = '';\r\n            if (urlParts.hostPart !== baseUrlParts.hostPart) {\r\n                return '';\r\n            }\r\n            max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\r\n            for (i = 0; i < max; i++) {\r\n                if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\r\n                    break;\r\n                }\r\n            }\r\n            baseUrlDirectories = baseUrlParts.directories.slice(i);\r\n            urlDirectories = urlParts.directories.slice(i);\r\n            for (i = 0; i < baseUrlDirectories.length - 1; i++) {\r\n                diff += '../';\r\n            }\r\n            for (i = 0; i < urlDirectories.length - 1; i++) {\r\n                diff += urlDirectories[i] + \"/\";\r\n            }\r\n            return diff;\r\n        };\r\n        // helper function, not part of API\r\n        AbstractFileManager.prototype.extractUrlParts = function (url, baseUrl) {\r\n            // urlParts[1] = protocol://hostname/ OR /\r\n            // urlParts[2] = / if path relative to host base\r\n            // urlParts[3] = directories\r\n            // urlParts[4] = filename\r\n            // urlParts[5] = parameters\r\n            var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i;\r\n            var urlParts = url.match(urlPartsRegex);\r\n            var returner = {};\r\n            var rawDirectories = [];\r\n            var directories = [];\r\n            var i;\r\n            var baseUrlParts;\r\n            if (!urlParts) {\r\n                throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\r\n            }\r\n            // Stylesheets in IE don't always return the full path\r\n            if (baseUrl && (!urlParts[1] || urlParts[2])) {\r\n                baseUrlParts = baseUrl.match(urlPartsRegex);\r\n                if (!baseUrlParts) {\r\n                    throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\r\n                }\r\n                urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\r\n                if (!urlParts[2]) {\r\n                    urlParts[3] = baseUrlParts[3] + urlParts[3];\r\n                }\r\n            }\r\n            if (urlParts[3]) {\r\n                rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\r\n                // collapse '..' and skip '.'\r\n                for (i = 0; i < rawDirectories.length; i++) {\r\n                    if (rawDirectories[i] === '..') {\r\n                        directories.pop();\r\n                    }\r\n                    else if (rawDirectories[i] !== '.') {\r\n                        directories.push(rawDirectories[i]);\r\n                    }\r\n                }\r\n            }\r\n            returner.hostPart = urlParts[1];\r\n            returner.directories = directories;\r\n            returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\r\n            returner.path = (urlParts[1] || '') + directories.join('/');\r\n            returner.filename = urlParts[4];\r\n            returner.fileUrl = returner.path + (urlParts[4] || '');\r\n            returner.url = returner.fileUrl + (urlParts[5] || '');\r\n            return returner;\r\n        };\r\n        return AbstractFileManager;\r\n    }());\n\n    var AbstractPluginLoader = /** @class */ (function () {\r\n        function AbstractPluginLoader() {\r\n            // Implemented by Node.js plugin loader\r\n            this.require = function () {\r\n                return null;\r\n            };\r\n        }\r\n        AbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\r\n            var loader, registry, pluginObj, localModule, pluginManager, filename, result;\r\n            pluginManager = context.pluginManager;\r\n            if (fileInfo) {\r\n                if (typeof fileInfo === 'string') {\r\n                    filename = fileInfo;\r\n                }\r\n                else {\r\n                    filename = fileInfo.filename;\r\n                }\r\n            }\r\n            var shortname = (new this.less.FileManager()).extractUrlParts(filename).filename;\r\n            if (filename) {\r\n                pluginObj = pluginManager.get(filename);\r\n                if (pluginObj) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                    try {\r\n                        if (pluginObj.use) {\r\n                            pluginObj.use.call(this.context, pluginObj);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        e.message = e.message || 'Error during @plugin call';\r\n                        return new LessError(e, imports, filename);\r\n                    }\r\n                    return pluginObj;\r\n                }\r\n            }\r\n            localModule = {\r\n                exports: {},\r\n                pluginManager: pluginManager,\r\n                fileInfo: fileInfo\r\n            };\r\n            registry = functionRegistry.create();\r\n            var registerPlugin = function (obj) {\r\n                pluginObj = obj;\r\n            };\r\n            try {\r\n                loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\r\n                loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e, imports, filename);\r\n            }\r\n            if (!pluginObj) {\r\n                pluginObj = localModule.exports;\r\n            }\r\n            pluginObj = this.validatePlugin(pluginObj, filename, shortname);\r\n            if (pluginObj instanceof LessError) {\r\n                return pluginObj;\r\n            }\r\n            if (pluginObj) {\r\n                pluginObj.imports = imports;\r\n                pluginObj.filename = filename;\r\n                // For < 3.x (or unspecified minVersion) - setOptions() before install()\r\n                if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\r\n                    result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                    if (result) {\r\n                        return result;\r\n                    }\r\n                }\r\n                // Run on first load\r\n                pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\r\n                pluginObj.functions = registry.getLocalFunctions();\r\n                // Need to call setOptions again because the pluginObj might have functions\r\n                result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n                // Run every @plugin call\r\n                try {\r\n                    if (pluginObj.use) {\r\n                        pluginObj.use.call(this.context, pluginObj);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    e.message = e.message || 'Error during @plugin call';\r\n                    return new LessError(e, imports, filename);\r\n                }\r\n            }\r\n            else {\r\n                return new LessError({ message: 'Not a valid plugin' }, imports, filename);\r\n            }\r\n            return pluginObj;\r\n        };\r\n        AbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\r\n            if (options && !plugin.setOptions) {\r\n                return new LessError({\r\n                    message: \"Options have been provided but the plugin \" + name + \" does not support any options.\"\r\n                });\r\n            }\r\n            try {\r\n                plugin.setOptions && plugin.setOptions(options);\r\n            }\r\n            catch (e) {\r\n                return new LessError(e);\r\n            }\r\n        };\r\n        AbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\r\n            if (plugin) {\r\n                // support plugins being a function\r\n                // so that the plugin can be more usable programmatically\r\n                if (typeof plugin === 'function') {\r\n                    plugin = new plugin();\r\n                }\r\n                if (plugin.minVersion) {\r\n                    if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\r\n                        return new LessError({\r\n                            message: \"Plugin \" + name + \" requires version \" + this.versionToString(plugin.minVersion)\r\n                        });\r\n                    }\r\n                }\r\n                return plugin;\r\n            }\r\n            return null;\r\n        };\r\n        AbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\r\n            if (typeof aVersion === 'string') {\r\n                aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\r\n                aVersion.shift();\r\n            }\r\n            for (var i = 0; i < aVersion.length; i++) {\r\n                if (aVersion[i] !== bVersion[i]) {\r\n                    return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\r\n                }\r\n            }\r\n            return 0;\r\n        };\r\n        AbstractPluginLoader.prototype.versionToString = function (version) {\r\n            var versionString = '';\r\n            for (var i = 0; i < version.length; i++) {\r\n                versionString += (versionString ? '.' : '') + version[i];\r\n            }\r\n            return versionString;\r\n        };\r\n        AbstractPluginLoader.prototype.printUsage = function (plugins) {\r\n            for (var i = 0; i < plugins.length; i++) {\r\n                var plugin = plugins[i];\r\n                if (plugin.printUsage) {\r\n                    plugin.printUsage();\r\n                }\r\n            }\r\n        };\r\n        return AbstractPluginLoader;\r\n    }());\n\n    var _visitArgs = { visitDeeper: true };\r\n    var _hasIndexed = false;\r\n    function _noop(node) {\r\n        return node;\r\n    }\r\n    function indexNodeTypes(parent, ticker) {\r\n        // add .typeIndex to tree node types for lookup table\r\n        var key, child;\r\n        for (key in parent) {\r\n            /* eslint guard-for-in: 0 */\r\n            child = parent[key];\r\n            switch (typeof child) {\r\n                case 'function':\r\n                    // ignore bound functions directly on tree which do not have a prototype\r\n                    // or aren't nodes\r\n                    if (child.prototype && child.prototype.type) {\r\n                        child.prototype.typeIndex = ticker++;\r\n                    }\r\n                    break;\r\n                case 'object':\r\n                    ticker = indexNodeTypes(child, ticker);\r\n                    break;\r\n            }\r\n        }\r\n        return ticker;\r\n    }\r\n    var Visitor = /** @class */ (function () {\r\n        function Visitor(implementation) {\r\n            this._implementation = implementation;\r\n            this._visitInCache = {};\r\n            this._visitOutCache = {};\r\n            if (!_hasIndexed) {\r\n                indexNodeTypes(tree, 1);\r\n                _hasIndexed = true;\r\n            }\r\n        }\r\n        Visitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            var nodeTypeIndex = node.typeIndex;\r\n            if (!nodeTypeIndex) {\r\n                // MixinCall args aren't a node type?\r\n                if (node.value && node.value.typeIndex) {\r\n                    this.visit(node.value);\r\n                }\r\n                return node;\r\n            }\r\n            var impl = this._implementation;\r\n            var func = this._visitInCache[nodeTypeIndex];\r\n            var funcOut = this._visitOutCache[nodeTypeIndex];\r\n            var visitArgs = _visitArgs;\r\n            var fnName;\r\n            visitArgs.visitDeeper = true;\r\n            if (!func) {\r\n                fnName = \"visit\" + node.type;\r\n                func = impl[fnName] || _noop;\r\n                funcOut = impl[fnName + \"Out\"] || _noop;\r\n                this._visitInCache[nodeTypeIndex] = func;\r\n                this._visitOutCache[nodeTypeIndex] = funcOut;\r\n            }\r\n            if (func !== _noop) {\r\n                var newNode = func.call(impl, node, visitArgs);\r\n                if (node && impl.isReplacing) {\r\n                    node = newNode;\r\n                }\r\n            }\r\n            if (visitArgs.visitDeeper && node) {\r\n                if (node.length) {\r\n                    for (var i = 0, cnt = node.length; i < cnt; i++) {\r\n                        if (node[i].accept) {\r\n                            node[i].accept(this);\r\n                        }\r\n                    }\r\n                }\r\n                else if (node.accept) {\r\n                    node.accept(this);\r\n                }\r\n            }\r\n            if (funcOut != _noop) {\r\n                funcOut.call(impl, node);\r\n            }\r\n            return node;\r\n        };\r\n        Visitor.prototype.visitArray = function (nodes, nonReplacing) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            // Non-replacing\r\n            if (nonReplacing || !this._implementation.isReplacing) {\r\n                for (i = 0; i < cnt; i++) {\r\n                    this.visit(nodes[i]);\r\n                }\r\n                return nodes;\r\n            }\r\n            // Replacing\r\n            var out = [];\r\n            for (i = 0; i < cnt; i++) {\r\n                var evald = this.visit(nodes[i]);\r\n                if (evald === undefined) {\r\n                    continue;\r\n                }\r\n                if (!evald.splice) {\r\n                    out.push(evald);\r\n                }\r\n                else if (evald.length) {\r\n                    this.flatten(evald, out);\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        Visitor.prototype.flatten = function (arr, out) {\r\n            if (!out) {\r\n                out = [];\r\n            }\r\n            var cnt, i, item, nestedCnt, j, nestedItem;\r\n            for (i = 0, cnt = arr.length; i < cnt; i++) {\r\n                item = arr[i];\r\n                if (item === undefined) {\r\n                    continue;\r\n                }\r\n                if (!item.splice) {\r\n                    out.push(item);\r\n                    continue;\r\n                }\r\n                for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\r\n                    nestedItem = item[j];\r\n                    if (nestedItem === undefined) {\r\n                        continue;\r\n                    }\r\n                    if (!nestedItem.splice) {\r\n                        out.push(nestedItem);\r\n                    }\r\n                    else if (nestedItem.length) {\r\n                        this.flatten(nestedItem, out);\r\n                    }\r\n                }\r\n            }\r\n            return out;\r\n        };\r\n        return Visitor;\r\n    }());\n\n    var ImportSequencer = /** @class */ (function () {\r\n        function ImportSequencer(onSequencerEmpty) {\r\n            this.imports = [];\r\n            this.variableImports = [];\r\n            this._onSequencerEmpty = onSequencerEmpty;\r\n            this._currentDepth = 0;\r\n        }\r\n        ImportSequencer.prototype.addImport = function (callback) {\r\n            var importSequencer = this, importItem = {\r\n                callback: callback,\r\n                args: null,\r\n                isReady: false\r\n            };\r\n            this.imports.push(importItem);\r\n            return function () {\r\n                importItem.args = Array.prototype.slice.call(arguments, 0);\r\n                importItem.isReady = true;\r\n                importSequencer.tryRun();\r\n            };\r\n        };\r\n        ImportSequencer.prototype.addVariableImport = function (callback) {\r\n            this.variableImports.push(callback);\r\n        };\r\n        ImportSequencer.prototype.tryRun = function () {\r\n            this._currentDepth++;\r\n            try {\r\n                while (true) {\r\n                    while (this.imports.length > 0) {\r\n                        var importItem = this.imports[0];\r\n                        if (!importItem.isReady) {\r\n                            return;\r\n                        }\r\n                        this.imports = this.imports.slice(1);\r\n                        importItem.callback.apply(null, importItem.args);\r\n                    }\r\n                    if (this.variableImports.length === 0) {\r\n                        break;\r\n                    }\r\n                    var variableImport = this.variableImports[0];\r\n                    this.variableImports = this.variableImports.slice(1);\r\n                    variableImport();\r\n                }\r\n            }\r\n            finally {\r\n                this._currentDepth--;\r\n            }\r\n            if (this._currentDepth === 0 && this._onSequencerEmpty) {\r\n                this._onSequencerEmpty();\r\n            }\r\n        };\r\n        return ImportSequencer;\r\n    }());\n\n    var ImportVisitor = function (importer, finish) {\r\n        this._visitor = new Visitor(this);\r\n        this._importer = importer;\r\n        this._finish = finish;\r\n        this.context = new contexts.Eval();\r\n        this.importCount = 0;\r\n        this.onceFileDetectionMap = {};\r\n        this.recursionDetector = {};\r\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\r\n    };\r\n    ImportVisitor.prototype = {\r\n        isReplacing: false,\r\n        run: function (root) {\r\n            try {\r\n                // process the contents\r\n                this._visitor.visit(root);\r\n            }\r\n            catch (e) {\r\n                this.error = e;\r\n            }\r\n            this.isFinished = true;\r\n            this._sequencer.tryRun();\r\n        },\r\n        _onSequencerEmpty: function () {\r\n            if (!this.isFinished) {\r\n                return;\r\n            }\r\n            this._finish(this.error);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            var inlineCSS = importNode.options.inline;\r\n            if (!importNode.css || inlineCSS) {\r\n                var context = new contexts.Eval(this.context, copyArray(this.context.frames));\r\n                var importParent = context.frames[0];\r\n                this.importCount++;\r\n                if (importNode.isVariableImport()) {\r\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\r\n                }\r\n                else {\r\n                    this.processImportNode(importNode, context, importParent);\r\n                }\r\n            }\r\n            visitArgs.visitDeeper = false;\r\n        },\r\n        processImportNode: function (importNode, context, importParent) {\r\n            var evaldImportNode;\r\n            var inlineCSS = importNode.options.inline;\r\n            try {\r\n                evaldImportNode = importNode.evalForImport(context);\r\n            }\r\n            catch (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                // attempt to eval properly and treat as css\r\n                importNode.css = true;\r\n                // if that fails, this error will be thrown\r\n                importNode.error = e;\r\n            }\r\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\r\n                if (evaldImportNode.options.multiple) {\r\n                    context.importMultiple = true;\r\n                }\r\n                // try appending if we haven't determined if it is css or not\r\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\r\n                for (var i = 0; i < importParent.rules.length; i++) {\r\n                    if (importParent.rules[i] === importNode) {\r\n                        importParent.rules[i] = evaldImportNode;\r\n                        break;\r\n                    }\r\n                }\r\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\r\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\r\n            }\r\n            else {\r\n                this.importCount--;\r\n                if (this.isFinished) {\r\n                    this._sequencer.tryRun();\r\n                }\r\n            }\r\n        },\r\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\r\n            if (e) {\r\n                if (!e.filename) {\r\n                    e.index = importNode.getIndex();\r\n                    e.filename = importNode.fileInfo().filename;\r\n                }\r\n                this.error = e;\r\n            }\r\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\r\n            if (!context.importMultiple) {\r\n                if (duplicateImport) {\r\n                    importNode.skip = true;\r\n                }\r\n                else {\r\n                    importNode.skip = function () {\r\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\r\n                            return true;\r\n                        }\r\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\r\n                        return false;\r\n                    };\r\n                }\r\n            }\r\n            if (!fullPath && isOptional) {\r\n                importNode.skip = true;\r\n            }\r\n            if (root) {\r\n                importNode.root = root;\r\n                importNode.importedFilename = fullPath;\r\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\r\n                    importVisitor.recursionDetector[fullPath] = true;\r\n                    var oldContext = this.context;\r\n                    this.context = context;\r\n                    try {\r\n                        this._visitor.visit(root);\r\n                    }\r\n                    catch (e) {\r\n                        this.error = e;\r\n                    }\r\n                    this.context = oldContext;\r\n                }\r\n            }\r\n            importVisitor.importCount--;\r\n            if (importVisitor.isFinished) {\r\n                importVisitor._sequencer.tryRun();\r\n            }\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.unshift(declNode);\r\n            }\r\n            else {\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n        },\r\n        visitDeclarationOut: function (declNode) {\r\n            if (declNode.value.type === 'DetachedRuleset') {\r\n                this.context.frames.shift();\r\n            }\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            this.context.frames.unshift(atRuleNode);\r\n        },\r\n        visitAtRuleOut: function (atRuleNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\r\n            this.context.frames.unshift(mixinDefinitionNode);\r\n        },\r\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            this.context.frames.unshift(rulesetNode);\r\n        },\r\n        visitRulesetOut: function (rulesetNode) {\r\n            this.context.frames.shift();\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            this.context.frames.unshift(mediaNode.rules[0]);\r\n        },\r\n        visitMediaOut: function (mediaNode) {\r\n            this.context.frames.shift();\r\n        }\r\n    };\n\n    var SetTreeVisibilityVisitor = /** @class */ (function () {\r\n        function SetTreeVisibilityVisitor(visible) {\r\n            this.visible = visible;\r\n        }\r\n        SetTreeVisibilityVisitor.prototype.run = function (root) {\r\n            this.visit(root);\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\r\n            if (!nodes) {\r\n                return nodes;\r\n            }\r\n            var cnt = nodes.length;\r\n            var i;\r\n            for (i = 0; i < cnt; i++) {\r\n                this.visit(nodes[i]);\r\n            }\r\n            return nodes;\r\n        };\r\n        SetTreeVisibilityVisitor.prototype.visit = function (node) {\r\n            if (!node) {\r\n                return node;\r\n            }\r\n            if (node.constructor === Array) {\r\n                return this.visitArray(node);\r\n            }\r\n            if (!node.blocksVisibility || node.blocksVisibility()) {\r\n                return node;\r\n            }\r\n            if (this.visible) {\r\n                node.ensureVisibility();\r\n            }\r\n            else {\r\n                node.ensureInvisibility();\r\n            }\r\n            node.accept(this);\r\n            return node;\r\n        };\r\n        return SetTreeVisibilityVisitor;\r\n    }());\n\n    /* jshint loopfunc:true */\r\n    var ExtendFinderVisitor = /** @class */ (function () {\r\n        function ExtendFinderVisitor() {\r\n            this._visitor = new Visitor(this);\r\n            this.contexts = [];\r\n            this.allExtendsStack = [[]];\r\n        }\r\n        ExtendFinderVisitor.prototype.run = function (root) {\r\n            root = this._visitor.visit(root);\r\n            root.allExtends = this.allExtendsStack[0];\r\n            return root;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var i;\r\n            var j;\r\n            var extend;\r\n            var allSelectorsExtendList = [];\r\n            var extendList;\r\n            // get &:extend(.a); rules which apply to all selectors in this ruleset\r\n            var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\r\n            for (i = 0; i < ruleCnt; i++) {\r\n                if (rulesetNode.rules[i] instanceof tree.Extend) {\r\n                    allSelectorsExtendList.push(rules[i]);\r\n                    rulesetNode.extendOnEveryPath = true;\r\n                }\r\n            }\r\n            // now find every selector and apply the extends that apply to all extends\r\n            // and the ones which apply to an individual extend\r\n            var paths = rulesetNode.paths;\r\n            for (i = 0; i < paths.length; i++) {\r\n                var selectorPath = paths[i], selector = selectorPath[selectorPath.length - 1], selExtendList = selector.extendList;\r\n                extendList = selExtendList ? copyArray(selExtendList).concat(allSelectorsExtendList)\r\n                    : allSelectorsExtendList;\r\n                if (extendList) {\r\n                    extendList = extendList.map(function (allSelectorsExtend) {\r\n                        return allSelectorsExtend.clone();\r\n                    });\r\n                }\r\n                for (j = 0; j < extendList.length; j++) {\r\n                    this.foundExtends = true;\r\n                    extend = extendList[j];\r\n                    extend.findSelfSelectors(selectorPath);\r\n                    extend.ruleset = rulesetNode;\r\n                    if (j === 0) {\r\n                        extend.firstExtendOnThisSelectorPath = true;\r\n                    }\r\n                    this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\r\n                }\r\n            }\r\n            this.contexts.push(rulesetNode.selectors);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            if (!rulesetNode.root) {\r\n                this.contexts.length = this.contexts.length - 1;\r\n            }\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            mediaNode.allExtends = [];\r\n            this.allExtendsStack.push(mediaNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            atRuleNode.allExtends = [];\r\n            this.allExtendsStack.push(atRuleNode.allExtends);\r\n        };\r\n        ExtendFinderVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            this.allExtendsStack.length = this.allExtendsStack.length - 1;\r\n        };\r\n        return ExtendFinderVisitor;\r\n    }());\r\n    var ProcessExtendsVisitor = /** @class */ (function () {\r\n        function ProcessExtendsVisitor() {\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        ProcessExtendsVisitor.prototype.run = function (root) {\r\n            var extendFinder = new ExtendFinderVisitor();\r\n            this.extendIndices = {};\r\n            extendFinder.run(root);\r\n            if (!extendFinder.foundExtends) {\r\n                return root;\r\n            }\r\n            root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\r\n            this.allExtendsStack = [root.allExtends];\r\n            var newRoot = this._visitor.visit(root);\r\n            this.checkExtendsForNonMatched(root.allExtends);\r\n            return newRoot;\r\n        };\r\n        ProcessExtendsVisitor.prototype.checkExtendsForNonMatched = function (extendList) {\r\n            var indices = this.extendIndices;\r\n            extendList.filter(function (extend) {\r\n                return !extend.hasFoundMatches && extend.parent_ids.length == 1;\r\n            }).forEach(function (extend) {\r\n                var selector = '_unknown_';\r\n                try {\r\n                    selector = extend.selector.toCSS({});\r\n                }\r\n                catch (_) { }\r\n                if (!indices[extend.index + \" \" + selector]) {\r\n                    indices[extend.index + \" \" + selector] = true;\r\n                    logger.warn(\"extend '\" + selector + \"' has no matches\");\r\n                }\r\n            });\r\n        };\r\n        ProcessExtendsVisitor.prototype.doExtendChaining = function (extendsList, extendsListTarget, iterationCount) {\r\n            //\r\n            // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\r\n            // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\r\n            // this means this new extend can then go and alter other extends\r\n            //\r\n            // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\r\n            // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\r\n            // processed if we look at each selector at a time, as is done in visitRuleset\r\n            var extendIndex;\r\n            var targetExtendIndex;\r\n            var matches;\r\n            var extendsToAdd = [];\r\n            var newSelector;\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            var extend;\r\n            var targetExtend;\r\n            var newExtend;\r\n            iterationCount = iterationCount || 0;\r\n            // loop through comparing every extend with every target extend.\r\n            // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\r\n            // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\r\n            // and the second is the target.\r\n            // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\r\n            // case when processing media queries\r\n            for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\r\n                for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\r\n                    extend = extendsList[extendIndex];\r\n                    targetExtend = extendsListTarget[targetExtendIndex];\r\n                    // look for circular references\r\n                    if (extend.parent_ids.indexOf(targetExtend.object_id) >= 0) {\r\n                        continue;\r\n                    }\r\n                    // find a match in the target extends self selector (the bit before :extend)\r\n                    selectorPath = [targetExtend.selfSelectors[0]];\r\n                    matches = extendVisitor.findMatch(extend, selectorPath);\r\n                    if (matches.length) {\r\n                        extend.hasFoundMatches = true;\r\n                        // we found a match, so for each self selector..\r\n                        extend.selfSelectors.forEach(function (selfSelector) {\r\n                            var info = targetExtend.visibilityInfo();\r\n                            // process the extend as usual\r\n                            newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\r\n                            // but now we create a new extend from it\r\n                            newExtend = new (tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.fileInfo(), info);\r\n                            newExtend.selfSelectors = newSelector;\r\n                            // add the extend onto the list of extends for that selector\r\n                            newSelector[newSelector.length - 1].extendList = [newExtend];\r\n                            // record that we need to add it.\r\n                            extendsToAdd.push(newExtend);\r\n                            newExtend.ruleset = targetExtend.ruleset;\r\n                            // remember its parents for circular references\r\n                            newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\r\n                            // only process the selector once.. if we have :extend(.a,.b) then multiple\r\n                            // extends will look at the same selector path, so when extending\r\n                            // we know that any others will be duplicates in terms of what is added to the css\r\n                            if (targetExtend.firstExtendOnThisSelectorPath) {\r\n                                newExtend.firstExtendOnThisSelectorPath = true;\r\n                                targetExtend.ruleset.paths.push(newSelector);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            if (extendsToAdd.length) {\r\n                // try to detect circular references to stop a stack overflow.\r\n                // may no longer be needed.\r\n                this.extendChainCount++;\r\n                if (iterationCount > 100) {\r\n                    var selectorOne = '{unable to calculate}';\r\n                    var selectorTwo = '{unable to calculate}';\r\n                    try {\r\n                        selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\r\n                        selectorTwo = extendsToAdd[0].selector.toCSS();\r\n                    }\r\n                    catch (e) { }\r\n                    throw { message: \"extend circular reference detected. One of the circular extends is currently:\" + selectorOne + \":extend(\" + selectorTwo + \")\" };\r\n                }\r\n                // now process the new extends on the existing rules so that we can handle a extending b extending c extending\r\n                // d extending e...\r\n                return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\r\n            }\r\n            else {\r\n                return extendsToAdd;\r\n            }\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitDeclaration = function (ruleNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitSelector = function (selectorNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            if (rulesetNode.root) {\r\n                return;\r\n            }\r\n            var matches;\r\n            var pathIndex;\r\n            var extendIndex;\r\n            var allExtends = this.allExtendsStack[this.allExtendsStack.length - 1];\r\n            var selectorsToAdd = [];\r\n            var extendVisitor = this;\r\n            var selectorPath;\r\n            // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\r\n            for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\r\n                for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\r\n                    selectorPath = rulesetNode.paths[pathIndex];\r\n                    // extending extends happens initially, before the main pass\r\n                    if (rulesetNode.extendOnEveryPath) {\r\n                        continue;\r\n                    }\r\n                    var extendList = selectorPath[selectorPath.length - 1].extendList;\r\n                    if (extendList && extendList.length) {\r\n                        continue;\r\n                    }\r\n                    matches = this.findMatch(allExtends[extendIndex], selectorPath);\r\n                    if (matches.length) {\r\n                        allExtends[extendIndex].hasFoundMatches = true;\r\n                        allExtends[extendIndex].selfSelectors.forEach(function (selfSelector) {\r\n                            var extendedSelectors;\r\n                            extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\r\n                            selectorsToAdd.push(extendedSelectors);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\r\n        };\r\n        ProcessExtendsVisitor.prototype.findMatch = function (extend, haystackSelectorPath) {\r\n            //\r\n            // look through the haystack selector path to try and find the needle - extend.selector\r\n            // returns an array of selector matches that can then be replaced\r\n            //\r\n            var haystackSelectorIndex;\r\n            var hackstackSelector;\r\n            var hackstackElementIndex;\r\n            var haystackElement;\r\n            var targetCombinator;\r\n            var i;\r\n            var extendVisitor = this;\r\n            var needleElements = extend.selector.elements;\r\n            var potentialMatches = [];\r\n            var potentialMatch;\r\n            var matches = [];\r\n            // loop through the haystack elements\r\n            for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\r\n                hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\r\n                for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\r\n                    haystackElement = hackstackSelector.elements[hackstackElementIndex];\r\n                    // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\r\n                    if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\r\n                        potentialMatches.push({ pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\r\n                            initialCombinator: haystackElement.combinator });\r\n                    }\r\n                    for (i = 0; i < potentialMatches.length; i++) {\r\n                        potentialMatch = potentialMatches[i];\r\n                        // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\r\n                        // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\r\n                        // work out what the resulting combinator will be\r\n                        targetCombinator = haystackElement.combinator.value;\r\n                        if (targetCombinator === '' && hackstackElementIndex === 0) {\r\n                            targetCombinator = ' ';\r\n                        }\r\n                        // if we don't match, null our match to indicate failure\r\n                        if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\r\n                            (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\r\n                            potentialMatch = null;\r\n                        }\r\n                        else {\r\n                            potentialMatch.matched++;\r\n                        }\r\n                        // if we are still valid and have finished, test whether we have elements after and whether these are allowed\r\n                        if (potentialMatch) {\r\n                            potentialMatch.finished = potentialMatch.matched === needleElements.length;\r\n                            if (potentialMatch.finished &&\r\n                                (!extend.allowAfter &&\r\n                                    (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\r\n                                potentialMatch = null;\r\n                            }\r\n                        }\r\n                        // if null we remove, if not, we are still valid, so either push as a valid match or continue\r\n                        if (potentialMatch) {\r\n                            if (potentialMatch.finished) {\r\n                                potentialMatch.length = needleElements.length;\r\n                                potentialMatch.endPathIndex = haystackSelectorIndex;\r\n                                potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\r\n                                potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\r\n                                matches.push(potentialMatch);\r\n                            }\r\n                        }\r\n                        else {\r\n                            potentialMatches.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        };\r\n        ProcessExtendsVisitor.prototype.isElementValuesEqual = function (elementValue1, elementValue2) {\r\n            if (typeof elementValue1 === 'string' || typeof elementValue2 === 'string') {\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            if (elementValue1 instanceof tree.Attribute) {\r\n                if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\r\n                    return false;\r\n                }\r\n                if (!elementValue1.value || !elementValue2.value) {\r\n                    if (elementValue1.value || elementValue2.value) {\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                elementValue1 = elementValue1.value.value || elementValue1.value;\r\n                elementValue2 = elementValue2.value.value || elementValue2.value;\r\n                return elementValue1 === elementValue2;\r\n            }\r\n            elementValue1 = elementValue1.value;\r\n            elementValue2 = elementValue2.value;\r\n            if (elementValue1 instanceof tree.Selector) {\r\n                if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\r\n                    return false;\r\n                }\r\n                for (var i = 0; i < elementValue1.elements.length; i++) {\r\n                    if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\r\n                        if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        ProcessExtendsVisitor.prototype.extendSelector = function (matches, selectorPath, replacementSelector, isVisible) {\r\n            // for a set of matches, replace each match with the replacement selector\r\n            var currentSelectorPathIndex = 0, currentSelectorPathElementIndex = 0, path = [], matchIndex, selector, firstElement, match, newElements;\r\n            for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\r\n                match = matches[matchIndex];\r\n                selector = selectorPath[match.pathIndex];\r\n                firstElement = new tree.Element(match.initialCombinator, replacementSelector.elements[0].value, replacementSelector.elements[0].isVariable, replacementSelector.elements[0].getIndex(), replacementSelector.elements[0].fileInfo());\r\n                if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\r\n                    path[path.length - 1].elements = path[path.length - 1]\r\n                        .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n                newElements = selector.elements\r\n                    .slice(currentSelectorPathElementIndex, match.index)\r\n                    .concat([firstElement])\r\n                    .concat(replacementSelector.elements.slice(1));\r\n                if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\r\n                    path[path.length - 1].elements =\r\n                        path[path.length - 1].elements.concat(newElements);\r\n                }\r\n                else {\r\n                    path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\r\n                    path.push(new tree.Selector(newElements));\r\n                }\r\n                currentSelectorPathIndex = match.endPathIndex;\r\n                currentSelectorPathElementIndex = match.endPathElementIndex;\r\n                if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\r\n                    currentSelectorPathElementIndex = 0;\r\n                    currentSelectorPathIndex++;\r\n                }\r\n            }\r\n            if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\r\n                path[path.length - 1].elements = path[path.length - 1]\r\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\r\n                currentSelectorPathIndex++;\r\n            }\r\n            path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\r\n            path = path.map(function (currentValue) {\r\n                // we can re-use elements here, because the visibility property matters only for selectors\r\n                var derived = currentValue.createDerived(currentValue.elements);\r\n                if (isVisible) {\r\n                    derived.ensureVisibility();\r\n                }\r\n                else {\r\n                    derived.ensureInvisibility();\r\n                }\r\n                return derived;\r\n            });\r\n            return path;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitMediaOut = function (mediaNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var newAllExtends = atRuleNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\r\n            newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, atRuleNode.allExtends));\r\n            this.allExtendsStack.push(newAllExtends);\r\n        };\r\n        ProcessExtendsVisitor.prototype.visitAtRuleOut = function (atRuleNode) {\r\n            var lastIndex = this.allExtendsStack.length - 1;\r\n            this.allExtendsStack.length = lastIndex;\r\n        };\r\n        return ProcessExtendsVisitor;\r\n    }());\n\n    var JoinSelectorVisitor = /** @class */ (function () {\r\n        function JoinSelectorVisitor() {\r\n            this.contexts = [[]];\r\n            this._visitor = new Visitor(this);\r\n        }\r\n        JoinSelectorVisitor.prototype.run = function (root) {\r\n            return this._visitor.visit(root);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitDeclaration = function (declNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMixinDefinition = function (mixinDefinitionNode, visitArgs) {\r\n            visitArgs.visitDeeper = false;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRuleset = function (rulesetNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            var paths = [];\r\n            var selectors;\r\n            this.contexts.push(paths);\r\n            if (!rulesetNode.root) {\r\n                selectors = rulesetNode.selectors;\r\n                if (selectors) {\r\n                    selectors = selectors.filter(function (selector) { return selector.getIsOutput(); });\r\n                    rulesetNode.selectors = selectors.length ? selectors : (selectors = null);\r\n                    if (selectors) {\r\n                        rulesetNode.joinSelectors(paths, context, selectors);\r\n                    }\r\n                }\r\n                if (!selectors) {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                rulesetNode.paths = paths;\r\n            }\r\n        };\r\n        JoinSelectorVisitor.prototype.visitRulesetOut = function (rulesetNode) {\r\n            this.contexts.length = this.contexts.length - 1;\r\n        };\r\n        JoinSelectorVisitor.prototype.visitMedia = function (mediaNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            mediaNode.rules[0].root = (context.length === 0 || context[0].multiMedia);\r\n        };\r\n        JoinSelectorVisitor.prototype.visitAtRule = function (atRuleNode, visitArgs) {\r\n            var context = this.contexts[this.contexts.length - 1];\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                atRuleNode.rules[0].root = (atRuleNode.isRooted || context.length === 0 || null);\r\n            }\r\n        };\r\n        return JoinSelectorVisitor;\r\n    }());\n\n    var CSSVisitorUtils = /** @class */ (function () {\r\n        function CSSVisitorUtils(context) {\r\n            this._visitor = new Visitor(this);\r\n            this._context = context;\r\n        }\r\n        CSSVisitorUtils.prototype.containsSilentNonBlockedChild = function (bodyRules) {\r\n            var rule;\r\n            if (!bodyRules) {\r\n                return false;\r\n            }\r\n            for (var r = 0; r < bodyRules.length; r++) {\r\n                rule = bodyRules[r];\r\n                if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\r\n                    // the atrule contains something that was referenced (likely by extend)\r\n                    // therefore it needs to be shown in output too\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        CSSVisitorUtils.prototype.keepOnlyVisibleChilds = function (owner) {\r\n            if (owner && owner.rules) {\r\n                owner.rules = owner.rules.filter(function (thing) { return thing.isVisible(); });\r\n            }\r\n        };\r\n        CSSVisitorUtils.prototype.isEmpty = function (owner) {\r\n            return (owner && owner.rules)\r\n                ? (owner.rules.length === 0) : true;\r\n        };\r\n        CSSVisitorUtils.prototype.hasVisibleSelector = function (rulesetNode) {\r\n            return (rulesetNode && rulesetNode.paths)\r\n                ? (rulesetNode.paths.length > 0) : false;\r\n        };\r\n        CSSVisitorUtils.prototype.resolveVisibility = function (node, originalRules) {\r\n            if (!node.blocksVisibility()) {\r\n                if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\r\n                    return;\r\n                }\r\n                return node;\r\n            }\r\n            var compiledRulesBody = node.rules[0];\r\n            this.keepOnlyVisibleChilds(compiledRulesBody);\r\n            if (this.isEmpty(compiledRulesBody)) {\r\n                return;\r\n            }\r\n            node.ensureVisibility();\r\n            node.removeVisibilityBlock();\r\n            return node;\r\n        };\r\n        CSSVisitorUtils.prototype.isVisibleRuleset = function (rulesetNode) {\r\n            if (rulesetNode.firstRoot) {\r\n                return true;\r\n            }\r\n            if (this.isEmpty(rulesetNode)) {\r\n                return false;\r\n            }\r\n            if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        return CSSVisitorUtils;\r\n    }());\r\n    var ToCSSVisitor = function (context) {\r\n        this._visitor = new Visitor(this);\r\n        this._context = context;\r\n        this.utils = new CSSVisitorUtils(context);\r\n    };\r\n    ToCSSVisitor.prototype = {\r\n        isReplacing: true,\r\n        run: function (root) {\r\n            return this._visitor.visit(root);\r\n        },\r\n        visitDeclaration: function (declNode, visitArgs) {\r\n            if (declNode.blocksVisibility() || declNode.variable) {\r\n                return;\r\n            }\r\n            return declNode;\r\n        },\r\n        visitMixinDefinition: function (mixinNode, visitArgs) {\r\n            // mixin definitions do not get eval'd - this means they keep state\r\n            // so we have to clear that state here so it isn't used if toCSS is called twice\r\n            mixinNode.frames = [];\r\n        },\r\n        visitExtend: function (extendNode, visitArgs) {\r\n        },\r\n        visitComment: function (commentNode, visitArgs) {\r\n            if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\r\n                return;\r\n            }\r\n            return commentNode;\r\n        },\r\n        visitMedia: function (mediaNode, visitArgs) {\r\n            var originalRules = mediaNode.rules[0].rules;\r\n            mediaNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            return this.utils.resolveVisibility(mediaNode, originalRules);\r\n        },\r\n        visitImport: function (importNode, visitArgs) {\r\n            if (importNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            return importNode;\r\n        },\r\n        visitAtRule: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.rules && atRuleNode.rules.length) {\r\n                return this.visitAtRuleWithBody(atRuleNode, visitArgs);\r\n            }\r\n            else {\r\n                return this.visitAtRuleWithoutBody(atRuleNode, visitArgs);\r\n            }\r\n        },\r\n        visitAnonymous: function (anonymousNode, visitArgs) {\r\n            if (!anonymousNode.blocksVisibility()) {\r\n                anonymousNode.accept(this._visitor);\r\n                return anonymousNode;\r\n            }\r\n        },\r\n        visitAtRuleWithBody: function (atRuleNode, visitArgs) {\r\n            // if there is only one nested ruleset and that one has no path, then it is\r\n            // just fake ruleset\r\n            function hasFakeRuleset(atRuleNode) {\r\n                var bodyRules = atRuleNode.rules;\r\n                return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\r\n            }\r\n            function getBodyRules(atRuleNode) {\r\n                var nodeRules = atRuleNode.rules;\r\n                if (hasFakeRuleset(atRuleNode)) {\r\n                    return nodeRules[0].rules;\r\n                }\r\n                return nodeRules;\r\n            }\r\n            // it is still true that it is only one ruleset in array\r\n            // this is last such moment\r\n            // process childs\r\n            var originalRules = getBodyRules(atRuleNode);\r\n            atRuleNode.accept(this._visitor);\r\n            visitArgs.visitDeeper = false;\r\n            if (!this.utils.isEmpty(atRuleNode)) {\r\n                this._mergeRules(atRuleNode.rules[0].rules);\r\n            }\r\n            return this.utils.resolveVisibility(atRuleNode, originalRules);\r\n        },\r\n        visitAtRuleWithoutBody: function (atRuleNode, visitArgs) {\r\n            if (atRuleNode.blocksVisibility()) {\r\n                return;\r\n            }\r\n            if (atRuleNode.name === '@charset') {\r\n                // Only output the debug info together with subsequent @charset definitions\r\n                // a comment (or @media statement) before the actual @charset atrule would\r\n                // be considered illegal css as it has to be on the first line\r\n                if (this.charset) {\r\n                    if (atRuleNode.debugInfo) {\r\n                        var comment = new tree.Comment(\"/* \" + atRuleNode.toCSS(this._context).replace(/\\n/g, '') + \" */\\n\");\r\n                        comment.debugInfo = atRuleNode.debugInfo;\r\n                        return this._visitor.visit(comment);\r\n                    }\r\n                    return;\r\n                }\r\n                this.charset = true;\r\n            }\r\n            return atRuleNode;\r\n        },\r\n        checkValidNodes: function (rules, isRoot) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var ruleNode = rules[i];\r\n                if (isRoot && ruleNode instanceof tree.Declaration && !ruleNode.variable) {\r\n                    throw { message: 'Properties must be inside selector blocks. They cannot be in the root',\r\n                        index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode instanceof tree.Call) {\r\n                    throw { message: \"Function '\" + ruleNode.name + \"' did not return a root node\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n                if (ruleNode.type && !ruleNode.allowRoot) {\r\n                    throw { message: ruleNode.type + \" node returned by a function is not valid here\", index: ruleNode.getIndex(), filename: ruleNode.fileInfo() && ruleNode.fileInfo().filename };\r\n                }\r\n            }\r\n        },\r\n        visitRuleset: function (rulesetNode, visitArgs) {\r\n            // at this point rulesets are nested into each other\r\n            var rule;\r\n            var rulesets = [];\r\n            this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\r\n            if (!rulesetNode.root) {\r\n                // remove invisible paths\r\n                this._compileRulesetPaths(rulesetNode);\r\n                // remove rulesets from this ruleset body and compile them separately\r\n                var nodeRules = rulesetNode.rules;\r\n                var nodeRuleCnt = nodeRules ? nodeRules.length : 0;\r\n                for (var i = 0; i < nodeRuleCnt;) {\r\n                    rule = nodeRules[i];\r\n                    if (rule && rule.rules) {\r\n                        // visit because we are moving them out from being a child\r\n                        rulesets.push(this._visitor.visit(rule));\r\n                        nodeRules.splice(i, 1);\r\n                        nodeRuleCnt--;\r\n                        continue;\r\n                    }\r\n                    i++;\r\n                }\r\n                // accept the visitor to remove rules and refactor itself\r\n                // then we can decide nogw whether we want it or not\r\n                // compile body\r\n                if (nodeRuleCnt > 0) {\r\n                    rulesetNode.accept(this._visitor);\r\n                }\r\n                else {\r\n                    rulesetNode.rules = null;\r\n                }\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            else { // if (! rulesetNode.root) {\r\n                rulesetNode.accept(this._visitor);\r\n                visitArgs.visitDeeper = false;\r\n            }\r\n            if (rulesetNode.rules) {\r\n                this._mergeRules(rulesetNode.rules);\r\n                this._removeDuplicateRules(rulesetNode.rules);\r\n            }\r\n            // now decide whether we keep the ruleset\r\n            if (this.utils.isVisibleRuleset(rulesetNode)) {\r\n                rulesetNode.ensureVisibility();\r\n                rulesets.splice(0, 0, rulesetNode);\r\n            }\r\n            if (rulesets.length === 1) {\r\n                return rulesets[0];\r\n            }\r\n            return rulesets;\r\n        },\r\n        _compileRulesetPaths: function (rulesetNode) {\r\n            if (rulesetNode.paths) {\r\n                rulesetNode.paths = rulesetNode.paths\r\n                    .filter(function (p) {\r\n                    var i;\r\n                    if (p[0].elements[0].combinator.value === ' ') {\r\n                        p[0].elements[0].combinator = new (tree.Combinator)('');\r\n                    }\r\n                    for (i = 0; i < p.length; i++) {\r\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n            }\r\n        },\r\n        _removeDuplicateRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            // remove duplicates\r\n            var ruleCache = {};\r\n            var ruleList;\r\n            var rule;\r\n            var i;\r\n            for (i = rules.length - 1; i >= 0; i--) {\r\n                rule = rules[i];\r\n                if (rule instanceof tree.Declaration) {\r\n                    if (!ruleCache[rule.name]) {\r\n                        ruleCache[rule.name] = rule;\r\n                    }\r\n                    else {\r\n                        ruleList = ruleCache[rule.name];\r\n                        if (ruleList instanceof tree.Declaration) {\r\n                            ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\r\n                        }\r\n                        var ruleCSS = rule.toCSS(this._context);\r\n                        if (ruleList.indexOf(ruleCSS) !== -1) {\r\n                            rules.splice(i, 1);\r\n                        }\r\n                        else {\r\n                            ruleList.push(ruleCSS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        _mergeRules: function (rules) {\r\n            if (!rules) {\r\n                return;\r\n            }\r\n            var groups = {};\r\n            var groupsArr = [];\r\n            for (var i = 0; i < rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule.merge) {\r\n                    var key = rule.name;\r\n                    groups[key] ? rules.splice(i--, 1) :\r\n                        groupsArr.push(groups[key] = []);\r\n                    groups[key].push(rule);\r\n                }\r\n            }\r\n            groupsArr.forEach(function (group) {\r\n                if (group.length > 0) {\r\n                    var result_1 = group[0];\r\n                    var space_1 = [];\r\n                    var comma_1 = [new tree.Expression(space_1)];\r\n                    group.forEach(function (rule) {\r\n                        if ((rule.merge === '+') && (space_1.length > 0)) {\r\n                            comma_1.push(new tree.Expression(space_1 = []));\r\n                        }\r\n                        space_1.push(rule.value);\r\n                        result_1.important = result_1.important || rule.important;\r\n                    });\r\n                    result_1.value = new tree.Value(comma_1);\r\n                }\r\n            });\r\n        }\r\n    };\n\n    var visitors = {\r\n        Visitor: Visitor,\r\n        ImportVisitor: ImportVisitor,\r\n        MarkVisibleSelectorsVisitor: SetTreeVisibilityVisitor,\r\n        ExtendVisitor: ProcessExtendsVisitor,\r\n        JoinSelectorVisitor: JoinSelectorVisitor,\r\n        ToCSSVisitor: ToCSSVisitor\r\n    };\n\n    // Split the input into chunks.\r\n    function chunker (input, fail) {\r\n        var len = input.length;\r\n        var level = 0;\r\n        var parenLevel = 0;\r\n        var lastOpening;\r\n        var lastOpeningParen;\r\n        var lastMultiComment;\r\n        var lastMultiCommentEndBrace;\r\n        var chunks = [];\r\n        var emitFrom = 0;\r\n        var chunkerCurrentIndex;\r\n        var currentChunkStartIndex;\r\n        var cc;\r\n        var cc2;\r\n        var matched;\r\n        function emitChunk(force) {\r\n            var len = chunkerCurrentIndex - emitFrom;\r\n            if (((len < 512) && !force) || !len) {\r\n                return;\r\n            }\r\n            chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\r\n            emitFrom = chunkerCurrentIndex + 1;\r\n        }\r\n        for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n            cc = input.charCodeAt(chunkerCurrentIndex);\r\n            if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\r\n                // a-z or whitespace\r\n                continue;\r\n            }\r\n            switch (cc) {\r\n                case 40: // (\r\n                    parenLevel++;\r\n                    lastOpeningParen = chunkerCurrentIndex;\r\n                    continue;\r\n                case 41: // )\r\n                    if (--parenLevel < 0) {\r\n                        return fail('missing opening `(`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n                case 59: // ;\r\n                    if (!parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 123: // {\r\n                    level++;\r\n                    lastOpening = chunkerCurrentIndex;\r\n                    continue;\r\n                case 125: // }\r\n                    if (--level < 0) {\r\n                        return fail('missing opening `{`', chunkerCurrentIndex);\r\n                    }\r\n                    if (!level && !parenLevel) {\r\n                        emitChunk();\r\n                    }\r\n                    continue;\r\n                case 92: // \\\r\n                    if (chunkerCurrentIndex < len - 1) {\r\n                        chunkerCurrentIndex++;\r\n                        continue;\r\n                    }\r\n                    return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                case 34:\r\n                case 39:\r\n                case 96: // \", ' and `\r\n                    matched = 0;\r\n                    currentChunkStartIndex = chunkerCurrentIndex;\r\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                        if (cc2 > 96) {\r\n                            continue;\r\n                        }\r\n                        if (cc2 == cc) {\r\n                            matched = 1;\r\n                            break;\r\n                        }\r\n                        if (cc2 == 92) { // \\\r\n                            if (chunkerCurrentIndex == len - 1) {\r\n                                return fail('unescaped `\\\\`', chunkerCurrentIndex);\r\n                            }\r\n                            chunkerCurrentIndex++;\r\n                        }\r\n                    }\r\n                    if (matched) {\r\n                        continue;\r\n                    }\r\n                    return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\r\n                case 47: // /, check for comment\r\n                    if (parenLevel || (chunkerCurrentIndex == len - 1)) {\r\n                        continue;\r\n                    }\r\n                    cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\r\n                    if (cc2 == 47) {\r\n                        // //, find lnfeed\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (cc2 == 42) {\r\n                        // /*, find */\r\n                        lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\r\n                        for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\r\n                            cc2 = input.charCodeAt(chunkerCurrentIndex);\r\n                            if (cc2 == 125) {\r\n                                lastMultiCommentEndBrace = chunkerCurrentIndex;\r\n                            }\r\n                            if (cc2 != 42) {\r\n                                continue;\r\n                            }\r\n                            if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (chunkerCurrentIndex == len - 1) {\r\n                            return fail('missing closing `*/`', currentChunkStartIndex);\r\n                        }\r\n                        chunkerCurrentIndex++;\r\n                    }\r\n                    continue;\r\n                case 42: // *, check for unmatched */\r\n                    if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\r\n                        return fail('unmatched `/*`', chunkerCurrentIndex);\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        if (level !== 0) {\r\n            if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\r\n                return fail('missing closing `}` or `*/`', lastOpening);\r\n            }\r\n            else {\r\n                return fail('missing closing `}`', lastOpening);\r\n            }\r\n        }\r\n        else if (parenLevel !== 0) {\r\n            return fail('missing closing `)`', lastOpeningParen);\r\n        }\r\n        emitChunk(true);\r\n        return chunks;\r\n    }\n\n    var getParserInput = (function () {\r\n        var // Less input string\r\n        input;\r\n        var // current chunk\r\n        j;\r\n        var // holds state for backtracking\r\n        saveStack = [];\r\n        var // furthest index the parser has gone to\r\n        furthest;\r\n        var // if this is furthest we got to, this is the probably cause\r\n        furthestPossibleErrorMessage;\r\n        var // chunkified input\r\n        chunks;\r\n        var // current chunk\r\n        current;\r\n        var // index of current chunk, in `input`\r\n        currentPos;\r\n        var parserInput = {};\r\n        var CHARCODE_SPACE = 32;\r\n        var CHARCODE_TAB = 9;\r\n        var CHARCODE_LF = 10;\r\n        var CHARCODE_CR = 13;\r\n        var CHARCODE_PLUS = 43;\r\n        var CHARCODE_COMMA = 44;\r\n        var CHARCODE_FORWARD_SLASH = 47;\r\n        var CHARCODE_9 = 57;\r\n        function skipWhitespace(length) {\r\n            var oldi = parserInput.i;\r\n            var oldj = j;\r\n            var curr = parserInput.i - currentPos;\r\n            var endIndex = parserInput.i + current.length - curr;\r\n            var mem = (parserInput.i += length);\r\n            var inp = input;\r\n            var c;\r\n            var nextChar;\r\n            var comment;\r\n            for (; parserInput.i < endIndex; parserInput.i++) {\r\n                c = inp.charCodeAt(parserInput.i);\r\n                if (parserInput.autoCommentAbsorb && c === CHARCODE_FORWARD_SLASH) {\r\n                    nextChar = inp.charAt(parserInput.i + 1);\r\n                    if (nextChar === '/') {\r\n                        comment = { index: parserInput.i, isLineComment: true };\r\n                        var nextNewLine = inp.indexOf('\\n', parserInput.i + 2);\r\n                        if (nextNewLine < 0) {\r\n                            nextNewLine = endIndex;\r\n                        }\r\n                        parserInput.i = nextNewLine;\r\n                        comment.text = inp.substr(comment.index, parserInput.i - comment.index);\r\n                        parserInput.commentStore.push(comment);\r\n                        continue;\r\n                    }\r\n                    else if (nextChar === '*') {\r\n                        var nextStarSlash = inp.indexOf('*/', parserInput.i + 2);\r\n                        if (nextStarSlash >= 0) {\r\n                            comment = {\r\n                                index: parserInput.i,\r\n                                text: inp.substr(parserInput.i, nextStarSlash + 2 - parserInput.i),\r\n                                isLineComment: false\r\n                            };\r\n                            parserInput.i += comment.text.length - 1;\r\n                            parserInput.commentStore.push(comment);\r\n                            continue;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                if ((c !== CHARCODE_SPACE) && (c !== CHARCODE_LF) && (c !== CHARCODE_TAB) && (c !== CHARCODE_CR)) {\r\n                    break;\r\n                }\r\n            }\r\n            current = current.slice(length + parserInput.i - mem + curr);\r\n            currentPos = parserInput.i;\r\n            if (!current.length) {\r\n                if (j < chunks.length - 1) {\r\n                    current = chunks[++j];\r\n                    skipWhitespace(0); // skip space at the beginning of a chunk\r\n                    return true; // things changed\r\n                }\r\n                parserInput.finished = true;\r\n            }\r\n            return oldi !== parserInput.i || oldj !== j;\r\n        }\r\n        parserInput.save = function () {\r\n            currentPos = parserInput.i;\r\n            saveStack.push({ current: current, i: parserInput.i, j: j });\r\n        };\r\n        parserInput.restore = function (possibleErrorMessage) {\r\n            if (parserInput.i > furthest || (parserInput.i === furthest && possibleErrorMessage && !furthestPossibleErrorMessage)) {\r\n                furthest = parserInput.i;\r\n                furthestPossibleErrorMessage = possibleErrorMessage;\r\n            }\r\n            var state = saveStack.pop();\r\n            current = state.current;\r\n            currentPos = parserInput.i = state.i;\r\n            j = state.j;\r\n        };\r\n        parserInput.forget = function () {\r\n            saveStack.pop();\r\n        };\r\n        parserInput.isWhitespace = function (offset) {\r\n            var pos = parserInput.i + (offset || 0);\r\n            var code = input.charCodeAt(pos);\r\n            return (code === CHARCODE_SPACE || code === CHARCODE_CR || code === CHARCODE_TAB || code === CHARCODE_LF);\r\n        };\r\n        // Specialization of $(tok)\r\n        parserInput.$re = function (tok) {\r\n            if (parserInput.i > currentPos) {\r\n                current = current.slice(parserInput.i - currentPos);\r\n                currentPos = parserInput.i;\r\n            }\r\n            var m = tok.exec(current);\r\n            if (!m) {\r\n                return null;\r\n            }\r\n            skipWhitespace(m[0].length);\r\n            if (typeof m === 'string') {\r\n                return m;\r\n            }\r\n            return m.length === 1 ? m[0] : m;\r\n        };\r\n        parserInput.$char = function (tok) {\r\n            if (input.charAt(parserInput.i) !== tok) {\r\n                return null;\r\n            }\r\n            skipWhitespace(1);\r\n            return tok;\r\n        };\r\n        parserInput.$str = function (tok) {\r\n            var tokLength = tok.length;\r\n            // https://jsperf.com/string-startswith/21\r\n            for (var i = 0; i < tokLength; i++) {\r\n                if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                    return null;\r\n                }\r\n            }\r\n            skipWhitespace(tokLength);\r\n            return tok;\r\n        };\r\n        parserInput.$quoted = function (loc) {\r\n            var pos = loc || parserInput.i;\r\n            var startChar = input.charAt(pos);\r\n            if (startChar !== '\\'' && startChar !== '\"') {\r\n                return;\r\n            }\r\n            var length = input.length;\r\n            var currentPosition = pos;\r\n            for (var i = 1; i + currentPosition < length; i++) {\r\n                var nextChar = input.charAt(i + currentPosition);\r\n                switch (nextChar) {\r\n                    case '\\\\':\r\n                        i++;\r\n                        continue;\r\n                    case '\\r':\r\n                    case '\\n':\r\n                        break;\r\n                    case startChar:\r\n                        var str = input.substr(currentPosition, i + 1);\r\n                        if (!loc && loc !== 0) {\r\n                            skipWhitespace(i + 1);\r\n                            return str;\r\n                        }\r\n                        return [startChar, str];\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Permissive parsing. Ignores everything except matching {} [] () and quotes\r\n         * until matching token (outside of blocks)\r\n         */\r\n        parserInput.$parseUntil = function (tok) {\r\n            var quote = '';\r\n            var returnVal = null;\r\n            var inComment = false;\r\n            var blockDepth = 0;\r\n            var blockStack = [];\r\n            var parseGroups = [];\r\n            var length = input.length;\r\n            var startPos = parserInput.i;\r\n            var lastPos = parserInput.i;\r\n            var i = parserInput.i;\r\n            var loop = true;\r\n            var testChar;\r\n            if (typeof tok === 'string') {\r\n                testChar = function (char) { return char === tok; };\r\n            }\r\n            else {\r\n                testChar = function (char) { return tok.test(char); };\r\n            }\r\n            do {\r\n                var nextChar = input.charAt(i);\r\n                if (blockDepth === 0 && testChar(nextChar)) {\r\n                    returnVal = input.substr(lastPos, i - lastPos);\r\n                    if (returnVal) {\r\n                        parseGroups.push(returnVal);\r\n                    }\r\n                    else {\r\n                        parseGroups.push(' ');\r\n                    }\r\n                    returnVal = parseGroups;\r\n                    skipWhitespace(i - startPos);\r\n                    loop = false;\r\n                }\r\n                else {\r\n                    if (inComment) {\r\n                        if (nextChar === '*' &&\r\n                            input.charAt(i + 1) === '/') {\r\n                            i++;\r\n                            blockDepth--;\r\n                            inComment = false;\r\n                        }\r\n                        i++;\r\n                        continue;\r\n                    }\r\n                    switch (nextChar) {\r\n                        case '\\\\':\r\n                            i++;\r\n                            nextChar = input.charAt(i);\r\n                            parseGroups.push(input.substr(lastPos, i - lastPos + 1));\r\n                            lastPos = i + 1;\r\n                            break;\r\n                        case '/':\r\n                            if (input.charAt(i + 1) === '*') {\r\n                                i++;\r\n                                inComment = true;\r\n                                blockDepth++;\r\n                            }\r\n                            break;\r\n                        case '\\'':\r\n                        case '\"':\r\n                            quote = parserInput.$quoted(i);\r\n                            if (quote) {\r\n                                parseGroups.push(input.substr(lastPos, i - lastPos), quote);\r\n                                i += quote[1].length - 1;\r\n                                lastPos = i + 1;\r\n                            }\r\n                            else {\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = nextChar;\r\n                                loop = false;\r\n                            }\r\n                            break;\r\n                        case '{':\r\n                            blockStack.push('}');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '(':\r\n                            blockStack.push(')');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '[':\r\n                            blockStack.push(']');\r\n                            blockDepth++;\r\n                            break;\r\n                        case '}':\r\n                        case ')':\r\n                        case ']':\r\n                            var expected = blockStack.pop();\r\n                            if (nextChar === expected) {\r\n                                blockDepth--;\r\n                            }\r\n                            else {\r\n                                // move the parser to the error and return expected\r\n                                skipWhitespace(i - startPos);\r\n                                returnVal = expected;\r\n                                loop = false;\r\n                            }\r\n                    }\r\n                    i++;\r\n                    if (i > length) {\r\n                        loop = false;\r\n                    }\r\n                }\r\n            } while (loop);\r\n            return returnVal ? returnVal : null;\r\n        };\r\n        parserInput.autoCommentAbsorb = true;\r\n        parserInput.commentStore = [];\r\n        parserInput.finished = false;\r\n        // Same as $(), but don't change the state of the parser,\r\n        // just return the match.\r\n        parserInput.peek = function (tok) {\r\n            if (typeof tok === 'string') {\r\n                // https://jsperf.com/string-startswith/21\r\n                for (var i = 0; i < tok.length; i++) {\r\n                    if (input.charAt(parserInput.i + i) !== tok.charAt(i)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n            else {\r\n                return tok.test(current);\r\n            }\r\n        };\r\n        // Specialization of peek()\r\n        // TODO remove or change some currentChar calls to peekChar\r\n        parserInput.peekChar = function (tok) { return input.charAt(parserInput.i) === tok; };\r\n        parserInput.currentChar = function () { return input.charAt(parserInput.i); };\r\n        parserInput.prevChar = function () { return input.charAt(parserInput.i - 1); };\r\n        parserInput.getInput = function () { return input; };\r\n        parserInput.peekNotNumeric = function () {\r\n            var c = input.charCodeAt(parserInput.i);\r\n            // Is the first char of the dimension 0-9, '.', '+' or '-'\r\n            return (c > CHARCODE_9 || c < CHARCODE_PLUS) || c === CHARCODE_FORWARD_SLASH || c === CHARCODE_COMMA;\r\n        };\r\n        parserInput.start = function (str, chunkInput, failFunction) {\r\n            input = str;\r\n            parserInput.i = j = currentPos = furthest = 0;\r\n            // chunking apparently makes things quicker (but my tests indicate\r\n            // it might actually make things slower in node at least)\r\n            // and it is a non-perfect parse - it can't recognise\r\n            // unquoted urls, meaning it can't distinguish comments\r\n            // meaning comments with quotes or {}() in them get 'counted'\r\n            // and then lead to parse errors.\r\n            // In addition if the chunking chunks in the wrong place we might\r\n            // not be able to parse a parser statement in one go\r\n            // this is officially deprecated but can be switched on via an option\r\n            // in the case it causes too much performance issues.\r\n            if (chunkInput) {\r\n                chunks = chunker(str, failFunction);\r\n            }\r\n            else {\r\n                chunks = [str];\r\n            }\r\n            current = chunks[0];\r\n            skipWhitespace(0);\r\n        };\r\n        parserInput.end = function () {\r\n            var message;\r\n            var isFinished = parserInput.i >= input.length;\r\n            if (parserInput.i < furthest) {\r\n                message = furthestPossibleErrorMessage;\r\n                parserInput.i = furthest;\r\n            }\r\n            return {\r\n                isFinished: isFinished,\r\n                furthest: parserInput.i,\r\n                furthestPossibleErrorMessage: message,\r\n                furthestReachedEnd: parserInput.i >= input.length - 1,\r\n                furthestChar: input[parserInput.i]\r\n            };\r\n        };\r\n        return parserInput;\r\n    });\n\n    //\r\n    // less.js - parser\r\n    //\r\n    //    A relatively straight-forward predictive parser.\r\n    //    There is no tokenization/lexing stage, the input is parsed\r\n    //    in one sweep.\r\n    //\r\n    //    To make the parser fast enough to run in the browser, several\r\n    //    optimization had to be made:\r\n    //\r\n    //    - Matching and slicing on a huge input is often cause of slowdowns.\r\n    //      The solution is to chunkify the input into smaller strings.\r\n    //      The chunks are stored in the `chunks` var,\r\n    //      `j` holds the current chunk index, and `currentPos` holds\r\n    //      the index of the current chunk in relation to `input`.\r\n    //      This gives us an almost 4x speed-up.\r\n    //\r\n    //    - In many cases, we don't need to match individual tokens;\r\n    //      for example, if a value doesn't hold any variables, operations\r\n    //      or dynamic references, the parser can effectively 'skip' it,\r\n    //      treating it as a literal.\r\n    //      An example would be '1px solid #000' - which evaluates to itself,\r\n    //      we don't need to know what the individual components are.\r\n    //      The drawback, of course is that you don't get the benefits of\r\n    //      syntax-checking on the CSS. This gives us a 50% speed-up in the parser,\r\n    //      and a smaller speed-up in the code-gen.\r\n    //\r\n    //\r\n    //    Token matching is done with the `$` function, which either takes\r\n    //    a terminal string or regexp, or a non-terminal function to call.\r\n    //    It also takes care of moving all the indices forwards.\r\n    //\r\n    var Parser = function Parser(context, imports, fileInfo) {\r\n        var parsers;\r\n        var parserInput = getParserInput();\r\n        function error(msg, type) {\r\n            throw new LessError({\r\n                index: parserInput.i,\r\n                filename: fileInfo.filename,\r\n                type: type || 'Syntax',\r\n                message: msg\r\n            }, imports);\r\n        }\r\n        function expect(arg, msg) {\r\n            // some older browsers return typeof 'function' for RegExp\r\n            var result = (arg instanceof Function) ? arg.call(parsers) : parserInput.$re(arg);\r\n            if (result) {\r\n                return result;\r\n            }\r\n            error(msg || (typeof arg === 'string'\r\n                ? \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\"\r\n                : 'unexpected token'));\r\n        }\r\n        // Specialization of expect()\r\n        function expectChar(arg, msg) {\r\n            if (parserInput.$char(arg)) {\r\n                return arg;\r\n            }\r\n            error(msg || \"expected '\" + arg + \"' got '\" + parserInput.currentChar() + \"'\");\r\n        }\r\n        function getDebugInfo(index) {\r\n            var filename = fileInfo.filename;\r\n            return {\r\n                lineNumber: getLocation(index, parserInput.getInput()).line + 1,\r\n                fileName: filename\r\n            };\r\n        }\r\n        /**\r\n         *  Used after initial parsing to create nodes on the fly\r\n         *\r\n         *  @param {String} str          - string to parse\r\n         *  @param {Array}  parseList    - array of parsers to run input through e.g. [\"value\", \"important\"]\r\n         *  @param {Number} currentIndex - start number to begin indexing\r\n         *  @param {Object} fileInfo     - fileInfo to attach to created nodes\r\n         */\r\n        function parseNode(str, parseList, currentIndex, fileInfo, callback) {\r\n            var result;\r\n            var returnNodes = [];\r\n            var parser = parserInput;\r\n            try {\r\n                parser.start(str, false, function fail(msg, index) {\r\n                    callback({\r\n                        message: msg,\r\n                        index: index + currentIndex\r\n                    });\r\n                });\r\n                for (var x = 0, p = void 0, i = void 0; (p = parseList[x]); x++) {\r\n                    i = parser.i;\r\n                    result = parsers[p]();\r\n                    if (result) {\r\n                        try {\r\n                            result._index = i + currentIndex;\r\n                            result._fileInfo = fileInfo;\r\n                        }\r\n                        catch (e) { }\r\n                        returnNodes.push(result);\r\n                    }\r\n                    else {\r\n                        returnNodes.push(null);\r\n                    }\r\n                }\r\n                var endInfo = parser.end();\r\n                if (endInfo.isFinished) {\r\n                    callback(null, returnNodes);\r\n                }\r\n                else {\r\n                    callback(true, null);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw new LessError({\r\n                    index: e.index + currentIndex,\r\n                    message: e.message\r\n                }, imports, fileInfo.filename);\r\n            }\r\n        }\r\n        //\r\n        // The Parser\r\n        //\r\n        return {\r\n            parserInput: parserInput,\r\n            imports: imports,\r\n            fileInfo: fileInfo,\r\n            parseNode: parseNode,\r\n            //\r\n            // Parse an input string into an abstract syntax tree,\r\n            // @param str A string containing 'less' markup\r\n            // @param callback call `callback` when done.\r\n            // @param [additionalData] An optional map which can contains vars - a map (key, value) of variables to apply\r\n            //\r\n            parse: function (str, callback, additionalData) {\r\n                var root;\r\n                var error = null;\r\n                var globalVars;\r\n                var modifyVars;\r\n                var ignored;\r\n                var preText = '';\r\n                globalVars = (additionalData && additionalData.globalVars) ? Parser.serializeVars(additionalData.globalVars) + \"\\n\" : '';\r\n                modifyVars = (additionalData && additionalData.modifyVars) ? \"\\n\" + Parser.serializeVars(additionalData.modifyVars) : '';\r\n                if (context.pluginManager) {\r\n                    var preProcessors = context.pluginManager.getPreProcessors();\r\n                    for (var i = 0; i < preProcessors.length; i++) {\r\n                        str = preProcessors[i].process(str, { context: context, imports: imports, fileInfo: fileInfo });\r\n                    }\r\n                }\r\n                if (globalVars || (additionalData && additionalData.banner)) {\r\n                    preText = ((additionalData && additionalData.banner) ? additionalData.banner : '') + globalVars;\r\n                    ignored = imports.contentsIgnoredChars;\r\n                    ignored[fileInfo.filename] = ignored[fileInfo.filename] || 0;\r\n                    ignored[fileInfo.filename] += preText.length;\r\n                }\r\n                str = str.replace(/\\r\\n?/g, '\\n');\r\n                // Remove potential UTF Byte Order Mark\r\n                str = preText + str.replace(/^\\uFEFF/, '') + modifyVars;\r\n                imports.contents[fileInfo.filename] = str;\r\n                // Start with the primary rule.\r\n                // The whole syntax tree is held under a Ruleset node,\r\n                // with the `root` property set to true, so no `{}` are\r\n                // output. The callback is called when the input is parsed.\r\n                try {\r\n                    parserInput.start(str, context.chunkInput, function fail(msg, index) {\r\n                        throw new LessError({\r\n                            index: index,\r\n                            type: 'Parse',\r\n                            message: msg,\r\n                            filename: fileInfo.filename\r\n                        }, imports);\r\n                    });\r\n                    tree.Node.prototype.parse = this;\r\n                    root = new tree.Ruleset(null, this.parsers.primary());\r\n                    tree.Node.prototype.rootNode = root;\r\n                    root.root = true;\r\n                    root.firstRoot = true;\r\n                    root.functionRegistry = functionRegistry.inherit();\r\n                }\r\n                catch (e) {\r\n                    return callback(new LessError(e, imports, fileInfo.filename));\r\n                }\r\n                // If `i` is smaller than the `input.length - 1`,\r\n                // it means the parser wasn't able to parse the whole\r\n                // string, so we've got a parsing error.\r\n                //\r\n                // We try to extract a \\n delimited string,\r\n                // showing the line where the parse error occurred.\r\n                // We split it up into two parts (the part which parsed,\r\n                // and the part which didn't), so we can color them differently.\r\n                var endInfo = parserInput.end();\r\n                if (!endInfo.isFinished) {\r\n                    var message = endInfo.furthestPossibleErrorMessage;\r\n                    if (!message) {\r\n                        message = 'Unrecognised input';\r\n                        if (endInfo.furthestChar === '}') {\r\n                            message += '. Possibly missing opening \\'{\\'';\r\n                        }\r\n                        else if (endInfo.furthestChar === ')') {\r\n                            message += '. Possibly missing opening \\'(\\'';\r\n                        }\r\n                        else if (endInfo.furthestReachedEnd) {\r\n                            message += '. Possibly missing something';\r\n                        }\r\n                    }\r\n                    error = new LessError({\r\n                        type: 'Parse',\r\n                        message: message,\r\n                        index: endInfo.furthest,\r\n                        filename: fileInfo.filename\r\n                    }, imports);\r\n                }\r\n                var finish = function (e) {\r\n                    e = error || e || imports.error;\r\n                    if (e) {\r\n                        if (!(e instanceof LessError)) {\r\n                            e = new LessError(e, imports, fileInfo.filename);\r\n                        }\r\n                        return callback(e);\r\n                    }\r\n                    else {\r\n                        return callback(null, root);\r\n                    }\r\n                };\r\n                if (context.processImports !== false) {\r\n                    new visitors.ImportVisitor(imports, finish)\r\n                        .run(root);\r\n                }\r\n                else {\r\n                    return finish();\r\n                }\r\n            },\r\n            //\r\n            // Here in, the parsing rules/functions\r\n            //\r\n            // The basic structure of the syntax tree generated is as follows:\r\n            //\r\n            //   Ruleset ->  Declaration -> Value -> Expression -> Entity\r\n            //\r\n            // Here's some Less code:\r\n            //\r\n            //    .class {\r\n            //      color: #fff;\r\n            //      border: 1px solid #000;\r\n            //      width: @w + 4px;\r\n            //      > .child {...}\r\n            //    }\r\n            //\r\n            // And here's what the parse tree might look like:\r\n            //\r\n            //     Ruleset (Selector '.class', [\r\n            //         Declaration (\"color\",  Value ([Expression [Color #fff]]))\r\n            //         Declaration (\"border\", Value ([Expression [Dimension 1px][Keyword \"solid\"][Color #000]]))\r\n            //         Declaration (\"width\",  Value ([Expression [Operation \" + \" [Variable \"@w\"][Dimension 4px]]]))\r\n            //         Ruleset (Selector [Element '>', '.child'], [...])\r\n            //     ])\r\n            //\r\n            //  In general, most rules will try to parse a token with the `$re()` function, and if the return\r\n            //  value is truly, will return a new node, of the relevant type. Sometimes, we need to check\r\n            //  first, before parsing, that's when we use `peek()`.\r\n            //\r\n            parsers: parsers = {\r\n                //\r\n                // The `primary` rule is the *entry* and *exit* point of the parser.\r\n                // The rules here can appear at any level of the parse tree.\r\n                //\r\n                // The recursive nature of the grammar is an interplay between the `block`\r\n                // rule, which represents `{ ... }`, the `ruleset` rule, and this `primary` rule,\r\n                // as represented by this simplified grammar:\r\n                //\r\n                //     primary  →  (ruleset | declaration)+\r\n                //     ruleset  →  selector+ block\r\n                //     block    →  '{' primary '}'\r\n                //\r\n                // Only at one point is the primary rule not called from the\r\n                // block rule: at the root level.\r\n                //\r\n                primary: function () {\r\n                    var mixin = this.mixin;\r\n                    var root = [];\r\n                    var node;\r\n                    while (true) {\r\n                        while (true) {\r\n                            node = this.comment();\r\n                            if (!node) {\r\n                                break;\r\n                            }\r\n                            root.push(node);\r\n                        }\r\n                        // always process comments before deciding if finished\r\n                        if (parserInput.finished) {\r\n                            break;\r\n                        }\r\n                        if (parserInput.peek('}')) {\r\n                            break;\r\n                        }\r\n                        node = this.extendRule();\r\n                        if (node) {\r\n                            root = root.concat(node);\r\n                            continue;\r\n                        }\r\n                        node = mixin.definition() || this.declaration() || mixin.call(false, false) ||\r\n                            this.ruleset() || this.variableCall() || this.entities.call() || this.atrule();\r\n                        if (node) {\r\n                            root.push(node);\r\n                        }\r\n                        else {\r\n                            var foundSemiColon = false;\r\n                            while (parserInput.$char(';')) {\r\n                                foundSemiColon = true;\r\n                            }\r\n                            if (!foundSemiColon) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    return root;\r\n                },\r\n                // comments are collected by the main parsing mechanism and then assigned to nodes\r\n                // where the current structure allows it\r\n                comment: function () {\r\n                    if (parserInput.commentStore.length) {\r\n                        var comment = parserInput.commentStore.shift();\r\n                        return new (tree.Comment)(comment.text, comment.isLineComment, comment.index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Entities are tokens which can be found inside an Expression\r\n                //\r\n                entities: {\r\n                    mixinLookup: function () {\r\n                        return parsers.mixin.call(true, true);\r\n                    },\r\n                    //\r\n                    // A string, which supports escaping \" and '\r\n                    //\r\n                    //     \"milky way\" 'he\\'s the one!'\r\n                    //\r\n                    quoted: function (forceEscaped) {\r\n                        var str;\r\n                        var index = parserInput.i;\r\n                        var isEscaped = false;\r\n                        parserInput.save();\r\n                        if (parserInput.$char('~')) {\r\n                            isEscaped = true;\r\n                        }\r\n                        else if (forceEscaped) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        str = parserInput.$quoted();\r\n                        if (!str) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Quoted)(str.charAt(0), str.substr(1, str.length - 2), isEscaped, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A catch-all word, such as:\r\n                    //\r\n                    //     black border-collapse\r\n                    //\r\n                    keyword: function () {\r\n                        var k = parserInput.$char('%') || parserInput.$re(/^\\[?(?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+\\]?/);\r\n                        if (k) {\r\n                            return tree.Color.fromKeyword(k) || new (tree.Keyword)(k);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A function call\r\n                    //\r\n                    //     rgb(255, 0, 255)\r\n                    //\r\n                    // The arguments are parsed with the `entities.arguments` parser.\r\n                    //\r\n                    call: function () {\r\n                        var name;\r\n                        var args;\r\n                        var func;\r\n                        var index = parserInput.i;\r\n                        // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                        if (parserInput.peek(/^url\\(/i)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        name = parserInput.$re(/^([\\w-]+|%|~|progid:[\\w\\.]+)\\(/);\r\n                        if (!name) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        name = name[1];\r\n                        func = this.customFuncCall(name);\r\n                        if (func) {\r\n                            args = func.parse();\r\n                            if (args && func.stop) {\r\n                                parserInput.forget();\r\n                                return args;\r\n                            }\r\n                        }\r\n                        args = this.arguments(args);\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore('Could not parse call arguments or missing \\')\\'');\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return new (tree.Call)(name, args, index, fileInfo);\r\n                    },\r\n                    //\r\n                    // Parsing rules for functions with non-standard args, e.g.:\r\n                    //\r\n                    //     boolean(not(2 > 1))\r\n                    //\r\n                    //     This is a quick prototype, to be modified/improved when\r\n                    //     more custom-parsed funcs come (e.g. `selector(...)`)\r\n                    //\r\n                    customFuncCall: function (name) {\r\n                        /* Ideally the table is to be moved out of here for faster perf.,\r\n                           but it's quite tricky since it relies on all these `parsers`\r\n                           and `expect` available only here */\r\n                        return {\r\n                            alpha: f(parsers.ieAlpha, true),\r\n                            boolean: f(condition),\r\n                            'if': f(condition)\r\n                        }[name.toLowerCase()];\r\n                        function f(parse, stop) {\r\n                            return {\r\n                                parse: parse,\r\n                                stop: stop // when true - stop after parse() and return its result, \r\n                                // otherwise continue for plain args\r\n                            };\r\n                        }\r\n                        function condition() {\r\n                            return [expect(parsers.condition, 'expected condition')];\r\n                        }\r\n                    },\r\n                    arguments: function (prevArgs) {\r\n                        var argsComma = prevArgs || [];\r\n                        var argsSemiColon = [];\r\n                        var isSemiColonSeparated;\r\n                        var value;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (prevArgs) {\r\n                                prevArgs = false;\r\n                            }\r\n                            else {\r\n                                value = parsers.detachedRuleset() || this.assignment() || parsers.expression();\r\n                                if (!value) {\r\n                                    break;\r\n                                }\r\n                                if (value.value && value.value.length == 1) {\r\n                                    value = value.value[0];\r\n                                }\r\n                                argsComma.push(value);\r\n                            }\r\n                            if (parserInput.$char(',')) {\r\n                                continue;\r\n                            }\r\n                            if (parserInput.$char(';') || isSemiColonSeparated) {\r\n                                isSemiColonSeparated = true;\r\n                                value = (argsComma.length < 1) ? argsComma[0]\r\n                                    : new tree.Value(argsComma);\r\n                                argsSemiColon.push(value);\r\n                                argsComma = [];\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                    },\r\n                    literal: function () {\r\n                        return this.dimension() ||\r\n                            this.color() ||\r\n                            this.quoted() ||\r\n                            this.unicodeDescriptor();\r\n                    },\r\n                    // Assignments are argument entities for calls.\r\n                    // They are present in ie filter properties as shown below.\r\n                    //\r\n                    //     filter: progid:DXImageTransform.Microsoft.Alpha( *opacity=50* )\r\n                    //\r\n                    assignment: function () {\r\n                        var key;\r\n                        var value;\r\n                        parserInput.save();\r\n                        key = parserInput.$re(/^\\w+(?=\\s?=)/i);\r\n                        if (!key) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char('=')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        value = parsers.entity();\r\n                        if (value) {\r\n                            parserInput.forget();\r\n                            return new (tree.Assignment)(key, value);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    //\r\n                    // Parse url() tokens\r\n                    //\r\n                    // We use a specific rule for urls, because they don't really behave like\r\n                    // standard function calls. The difference is that the argument doesn't have\r\n                    // to be enclosed within a string, so it can't be parsed as an Expression.\r\n                    //\r\n                    url: function () {\r\n                        var value;\r\n                        var index = parserInput.i;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        if (!parserInput.$str('url(')) {\r\n                            parserInput.autoCommentAbsorb = true;\r\n                            return;\r\n                        }\r\n                        value = this.quoted() || this.variable() || this.property() ||\r\n                            parserInput.$re(/^(?:(?:\\\\[\\(\\)'\"])|[^\\(\\)'\"])+/) || '';\r\n                        parserInput.autoCommentAbsorb = true;\r\n                        expectChar(')');\r\n                        return new (tree.URL)((value.value != null ||\r\n                            value instanceof tree.Variable ||\r\n                            value instanceof tree.Property) ?\r\n                            value : new (tree.Anonymous)(value, index), index, fileInfo);\r\n                    },\r\n                    //\r\n                    // A Variable entity, such as `@fink`, in\r\n                    //\r\n                    //     width: @fink + 2px\r\n                    //\r\n                    // We use a different parser for variable definitions,\r\n                    // see `parsers.variable`.\r\n                    //\r\n                    variable: function () {\r\n                        var ch;\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^@@?[\\w-]+/))) {\r\n                            ch = parserInput.currentChar();\r\n                            if (ch === '(' || ch === '[' && !parserInput.prevChar().match(/^\\s/)) {\r\n                                // this may be a VariableCall lookup\r\n                                var result = parsers.variableCall(name);\r\n                                if (result) {\r\n                                    parserInput.forget();\r\n                                    return result;\r\n                                }\r\n                            }\r\n                            parserInput.forget();\r\n                            return new (tree.Variable)(name, index, fileInfo);\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    // A variable entity using the protective {} e.g. @{var}\r\n                    variableCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '@' && (curly = parserInput.$re(/^@\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Variable)(\"@\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Property accessor, such as `$color`, in\r\n                    //\r\n                    //     background-color: $color\r\n                    //\r\n                    property: function () {\r\n                        var name;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (name = parserInput.$re(/^\\$[\\w-]+/))) {\r\n                            return new (tree.Property)(name, index, fileInfo);\r\n                        }\r\n                    },\r\n                    // A property entity useing the protective {} e.g. ${prop}\r\n                    propertyCurly: function () {\r\n                        var curly;\r\n                        var index = parserInput.i;\r\n                        if (parserInput.currentChar() === '$' && (curly = parserInput.$re(/^\\$\\{([\\w-]+)\\}/))) {\r\n                            return new (tree.Property)(\"$\" + curly[1], index, fileInfo);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Hexadecimal color\r\n                    //\r\n                    //     #4F3C2F\r\n                    //\r\n                    // `rgb` and `hsl` colors are parsed through the `entities.call` parser.\r\n                    //\r\n                    color: function () {\r\n                        var rgb;\r\n                        parserInput.save();\r\n                        if (parserInput.currentChar() === '#' && (rgb = parserInput.$re(/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})([\\w.#\\[])?/))) {\r\n                            if (!rgb[2]) {\r\n                                parserInput.forget();\r\n                                return new (tree.Color)(rgb[1], undefined, rgb[0]);\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    colorKeyword: function () {\r\n                        parserInput.save();\r\n                        var autoCommentAbsorb = parserInput.autoCommentAbsorb;\r\n                        parserInput.autoCommentAbsorb = false;\r\n                        var k = parserInput.$re(/^[_A-Za-z-][_A-Za-z0-9-]+/);\r\n                        parserInput.autoCommentAbsorb = autoCommentAbsorb;\r\n                        if (!k) {\r\n                            parserInput.forget();\r\n                            return;\r\n                        }\r\n                        parserInput.restore();\r\n                        var color = tree.Color.fromKeyword(k);\r\n                        if (color) {\r\n                            parserInput.$str(k);\r\n                            return color;\r\n                        }\r\n                    },\r\n                    //\r\n                    // A Dimension, that is, a number and a unit\r\n                    //\r\n                    //     0.5em 95%\r\n                    //\r\n                    dimension: function () {\r\n                        if (parserInput.peekNotNumeric()) {\r\n                            return;\r\n                        }\r\n                        var value = parserInput.$re(/^([+-]?\\d*\\.?\\d+)(%|[a-z_]+)?/i);\r\n                        if (value) {\r\n                            return new (tree.Dimension)(value[1], value[2]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // A unicode descriptor, as is used in unicode-range\r\n                    //\r\n                    // U+0??  or U+00A1-00A9\r\n                    //\r\n                    unicodeDescriptor: function () {\r\n                        var ud;\r\n                        ud = parserInput.$re(/^U\\+[0-9a-fA-F?]+(\\-[0-9a-fA-F?]+)?/);\r\n                        if (ud) {\r\n                            return new (tree.UnicodeDescriptor)(ud[0]);\r\n                        }\r\n                    },\r\n                    //\r\n                    // JavaScript code to be evaluated\r\n                    //\r\n                    //     `window.location.href`\r\n                    //\r\n                    javascript: function () {\r\n                        var js;\r\n                        var index = parserInput.i;\r\n                        parserInput.save();\r\n                        var escape = parserInput.$char('~');\r\n                        var jsQuote = parserInput.$char('`');\r\n                        if (!jsQuote) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        js = parserInput.$re(/^[^`]*`/);\r\n                        if (js) {\r\n                            parserInput.forget();\r\n                            return new (tree.JavaScript)(js.substr(0, js.length - 1), Boolean(escape), index, fileInfo);\r\n                        }\r\n                        parserInput.restore('invalid javascript definition');\r\n                    }\r\n                },\r\n                //\r\n                // The variable part of a variable definition. Used in the `rule` parser\r\n                //\r\n                //     @fink:\r\n                //\r\n                variable: function () {\r\n                    var name;\r\n                    if (parserInput.currentChar() === '@' && (name = parserInput.$re(/^(@[\\w-]+)\\s*:/))) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                //\r\n                // Call a variable value to retrieve a detached ruleset\r\n                // or a value from a detached ruleset's rules.\r\n                //\r\n                //     @fink();\r\n                //     @fink;\r\n                //     color: @fink[@color];\r\n                //\r\n                variableCall: function (parsedName) {\r\n                    var lookups;\r\n                    var i = parserInput.i;\r\n                    var inValue = !!parsedName;\r\n                    var name = parsedName;\r\n                    parserInput.save();\r\n                    if (name || (parserInput.currentChar() === '@'\r\n                        && (name = parserInput.$re(/^(@[\\w-]+)(\\(\\s*\\))?/)))) {\r\n                        lookups = this.mixin.ruleLookups();\r\n                        if (!lookups && ((inValue && parserInput.$str('()') !== '()') || (name[2] !== '()'))) {\r\n                            parserInput.restore('Missing \\'[...]\\' lookup in variable call');\r\n                            return;\r\n                        }\r\n                        if (!inValue) {\r\n                            name = name[1];\r\n                        }\r\n                        var call = new tree.VariableCall(name, i, fileInfo);\r\n                        if (!inValue && parsers.end()) {\r\n                            parserInput.forget();\r\n                            return call;\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                            return new tree.NamespaceValue(call, lookups, i, fileInfo);\r\n                        }\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // extend syntax - used to extend selectors\r\n                //\r\n                extend: function (isRule) {\r\n                    var elements;\r\n                    var e;\r\n                    var index = parserInput.i;\r\n                    var option;\r\n                    var extendList;\r\n                    var extend;\r\n                    if (!parserInput.$str(isRule ? '&:extend(' : ':extend(')) {\r\n                        return;\r\n                    }\r\n                    do {\r\n                        option = null;\r\n                        elements = null;\r\n                        while (!(option = parserInput.$re(/^(all)(?=\\s*(\\)|,))/))) {\r\n                            e = this.element();\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                        }\r\n                        option = option && option[1];\r\n                        if (!elements) {\r\n                            error('Missing target selector for :extend().');\r\n                        }\r\n                        extend = new (tree.Extend)(new (tree.Selector)(elements), option, index, fileInfo);\r\n                        if (extendList) {\r\n                            extendList.push(extend);\r\n                        }\r\n                        else {\r\n                            extendList = [extend];\r\n                        }\r\n                    } while (parserInput.$char(','));\r\n                    expect(/^\\)/);\r\n                    if (isRule) {\r\n                        expect(/^;/);\r\n                    }\r\n                    return extendList;\r\n                },\r\n                //\r\n                // extendRule - used in a rule to extend all the parent selectors\r\n                //\r\n                extendRule: function () {\r\n                    return this.extend(true);\r\n                },\r\n                //\r\n                // Mixins\r\n                //\r\n                mixin: {\r\n                    //\r\n                    // A Mixin call, with an optional argument list\r\n                    //\r\n                    //     #mixins > .square(#fff);\r\n                    //     #mixins.square(#fff);\r\n                    //     .rounded(4px, black);\r\n                    //     .button;\r\n                    //\r\n                    // We can lookup / return a value using the lookup syntax:\r\n                    //\r\n                    //     color: #mixin.square(#fff)[@color];\r\n                    //\r\n                    // The `while` loop is there because mixins can be\r\n                    // namespaced, but we only support the child and descendant\r\n                    // selector for now.\r\n                    //\r\n                    call: function (inValue, getLookup) {\r\n                        var s = parserInput.currentChar();\r\n                        var important = false;\r\n                        var lookups;\r\n                        var index = parserInput.i;\r\n                        var elements;\r\n                        var args;\r\n                        var hasParens;\r\n                        if (s !== '.' && s !== '#') {\r\n                            return;\r\n                        }\r\n                        parserInput.save(); // stop us absorbing part of an invalid selector\r\n                        elements = this.elements();\r\n                        if (elements) {\r\n                            if (parserInput.$char('(')) {\r\n                                args = this.args(true).args;\r\n                                expectChar(')');\r\n                                hasParens = true;\r\n                            }\r\n                            if (getLookup !== false) {\r\n                                lookups = this.ruleLookups();\r\n                            }\r\n                            if (getLookup === true && !lookups) {\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (inValue && !lookups && !hasParens) {\r\n                                // This isn't a valid in-value mixin call\r\n                                parserInput.restore();\r\n                                return;\r\n                            }\r\n                            if (!inValue && parsers.important()) {\r\n                                important = true;\r\n                            }\r\n                            if (inValue || parsers.end()) {\r\n                                parserInput.forget();\r\n                                var mixin = new (tree.mixin.Call)(elements, args, index, fileInfo, !lookups && important);\r\n                                if (lookups) {\r\n                                    return new tree.NamespaceValue(mixin, lookups);\r\n                                }\r\n                                else {\r\n                                    return mixin;\r\n                                }\r\n                            }\r\n                        }\r\n                        parserInput.restore();\r\n                    },\r\n                    /**\r\n                     * Matching elements for mixins\r\n                     * (Start with . or # and can have > )\r\n                     */\r\n                    elements: function () {\r\n                        var elements;\r\n                        var e;\r\n                        var c;\r\n                        var elem;\r\n                        var elemIndex;\r\n                        var re = /^[#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/;\r\n                        while (true) {\r\n                            elemIndex = parserInput.i;\r\n                            e = parserInput.$re(re);\r\n                            if (!e) {\r\n                                break;\r\n                            }\r\n                            elem = new (tree.Element)(c, e, false, elemIndex, fileInfo);\r\n                            if (elements) {\r\n                                elements.push(elem);\r\n                            }\r\n                            else {\r\n                                elements = [elem];\r\n                            }\r\n                            c = parserInput.$char('>');\r\n                        }\r\n                        return elements;\r\n                    },\r\n                    args: function (isCall) {\r\n                        var entities = parsers.entities;\r\n                        var returner = { args: null, variadic: false };\r\n                        var expressions = [];\r\n                        var argsSemiColon = [];\r\n                        var argsComma = [];\r\n                        var isSemiColonSeparated;\r\n                        var expressionContainsNamed;\r\n                        var name;\r\n                        var nameLoop;\r\n                        var value;\r\n                        var arg;\r\n                        var expand;\r\n                        var hasSep = true;\r\n                        parserInput.save();\r\n                        while (true) {\r\n                            if (isCall) {\r\n                                arg = parsers.detachedRuleset() || parsers.expression();\r\n                            }\r\n                            else {\r\n                                parserInput.commentStore.length = 0;\r\n                                if (parserInput.$str('...')) {\r\n                                    returner.variadic = true;\r\n                                    if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                        isSemiColonSeparated = true;\r\n                                    }\r\n                                    (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                        .push({ variadic: true });\r\n                                    break;\r\n                                }\r\n                                arg = entities.variable() || entities.property() || entities.literal() || entities.keyword() || this.call(true);\r\n                            }\r\n                            if (!arg || !hasSep) {\r\n                                break;\r\n                            }\r\n                            nameLoop = null;\r\n                            if (arg.throwAwayComments) {\r\n                                arg.throwAwayComments();\r\n                            }\r\n                            value = arg;\r\n                            var val = null;\r\n                            if (isCall) {\r\n                                // Variable\r\n                                if (arg.value && arg.value.length == 1) {\r\n                                    val = arg.value[0];\r\n                                }\r\n                            }\r\n                            else {\r\n                                val = arg;\r\n                            }\r\n                            if (val && (val instanceof tree.Variable || val instanceof tree.Property)) {\r\n                                if (parserInput.$char(':')) {\r\n                                    if (expressions.length > 0) {\r\n                                        if (isSemiColonSeparated) {\r\n                                            error('Cannot mix ; and , as delimiter types');\r\n                                        }\r\n                                        expressionContainsNamed = true;\r\n                                    }\r\n                                    value = parsers.detachedRuleset() || parsers.expression();\r\n                                    if (!value) {\r\n                                        if (isCall) {\r\n                                            error('could not understand value for named argument');\r\n                                        }\r\n                                        else {\r\n                                            parserInput.restore();\r\n                                            returner.args = [];\r\n                                            return returner;\r\n                                        }\r\n                                    }\r\n                                    nameLoop = (name = val.name);\r\n                                }\r\n                                else if (parserInput.$str('...')) {\r\n                                    if (!isCall) {\r\n                                        returner.variadic = true;\r\n                                        if (parserInput.$char(';') && !isSemiColonSeparated) {\r\n                                            isSemiColonSeparated = true;\r\n                                        }\r\n                                        (isSemiColonSeparated ? argsSemiColon : argsComma)\r\n                                            .push({ name: arg.name, variadic: true });\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        expand = true;\r\n                                    }\r\n                                }\r\n                                else if (!isCall) {\r\n                                    name = nameLoop = val.name;\r\n                                    value = null;\r\n                                }\r\n                            }\r\n                            if (value) {\r\n                                expressions.push(value);\r\n                            }\r\n                            argsComma.push({ name: nameLoop, value: value, expand: expand });\r\n                            if (parserInput.$char(',')) {\r\n                                hasSep = true;\r\n                                continue;\r\n                            }\r\n                            hasSep = parserInput.$char(';') === ';';\r\n                            if (hasSep || isSemiColonSeparated) {\r\n                                if (expressionContainsNamed) {\r\n                                    error('Cannot mix ; and , as delimiter types');\r\n                                }\r\n                                isSemiColonSeparated = true;\r\n                                if (expressions.length > 1) {\r\n                                    value = new (tree.Value)(expressions);\r\n                                }\r\n                                argsSemiColon.push({ name: name, value: value, expand: expand });\r\n                                name = null;\r\n                                expressions = [];\r\n                                expressionContainsNamed = false;\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        returner.args = isSemiColonSeparated ? argsSemiColon : argsComma;\r\n                        return returner;\r\n                    },\r\n                    //\r\n                    // A Mixin definition, with a list of parameters\r\n                    //\r\n                    //     .rounded (@radius: 2px, @color) {\r\n                    //        ...\r\n                    //     }\r\n                    //\r\n                    // Until we have a finer grained state-machine, we have to\r\n                    // do a look-ahead, to make sure we don't have a mixin call.\r\n                    // See the `rule` function for more information.\r\n                    //\r\n                    // We start by matching `.rounded (`, and then proceed on to\r\n                    // the argument list, which has optional default values.\r\n                    // We store the parameters in `params`, with a `value` key,\r\n                    // if there is a value, such as in the case of `@radius`.\r\n                    //\r\n                    // Once we've got our params list, and a closing `)`, we parse\r\n                    // the `{...}` block.\r\n                    //\r\n                    definition: function () {\r\n                        var name;\r\n                        var params = [];\r\n                        var match;\r\n                        var ruleset;\r\n                        var cond;\r\n                        var variadic = false;\r\n                        if ((parserInput.currentChar() !== '.' && parserInput.currentChar() !== '#') ||\r\n                            parserInput.peek(/^[^{]*\\}/)) {\r\n                            return;\r\n                        }\r\n                        parserInput.save();\r\n                        match = parserInput.$re(/^([#.](?:[\\w-]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+)\\s*\\(/);\r\n                        if (match) {\r\n                            name = match[1];\r\n                            var argInfo = this.args(false);\r\n                            params = argInfo.args;\r\n                            variadic = argInfo.variadic;\r\n                            // .mixincall(\"@{a}\");\r\n                            // looks a bit like a mixin definition..\r\n                            // also\r\n                            // .mixincall(@a: {rule: set;});\r\n                            // so we have to be nice and restore\r\n                            if (!parserInput.$char(')')) {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                                return;\r\n                            }\r\n                            parserInput.commentStore.length = 0;\r\n                            if (parserInput.$str('when')) { // Guard\r\n                                cond = expect(parsers.conditions, 'expected condition');\r\n                            }\r\n                            ruleset = parsers.block();\r\n                            if (ruleset) {\r\n                                parserInput.forget();\r\n                                return new (tree.mixin.Definition)(name, params, ruleset, cond, variadic);\r\n                            }\r\n                            else {\r\n                                parserInput.restore();\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    },\r\n                    ruleLookups: function () {\r\n                        var rule;\r\n                        var lookups = [];\r\n                        if (parserInput.currentChar() !== '[') {\r\n                            return;\r\n                        }\r\n                        while (true) {\r\n                            parserInput.save();\r\n                            rule = this.lookupValue();\r\n                            if (!rule && rule !== '') {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            lookups.push(rule);\r\n                            parserInput.forget();\r\n                        }\r\n                        if (lookups.length > 0) {\r\n                            return lookups;\r\n                        }\r\n                    },\r\n                    lookupValue: function () {\r\n                        parserInput.save();\r\n                        if (!parserInput.$char('[')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        var name = parserInput.$re(/^(?:[@$]{0,2})[_a-zA-Z0-9-]*/);\r\n                        if (!parserInput.$char(']')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (name || name === '') {\r\n                            parserInput.forget();\r\n                            return name;\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                //\r\n                // Entities are the smallest recognized token,\r\n                // and can be found inside a rule's value.\r\n                //\r\n                entity: function () {\r\n                    var entities = this.entities;\r\n                    return this.comment() || entities.literal() || entities.variable() || entities.url() ||\r\n                        entities.property() || entities.call() || entities.keyword() || this.mixin.call(true) ||\r\n                        entities.javascript();\r\n                },\r\n                //\r\n                // A Declaration terminator. Note that we use `peek()` to check for '}',\r\n                // because the `block` rule will be expecting it, but we still need to make sure\r\n                // it's there, if ';' was omitted.\r\n                //\r\n                end: function () {\r\n                    return parserInput.$char(';') || parserInput.peek('}');\r\n                },\r\n                //\r\n                // IE's alpha function\r\n                //\r\n                //     alpha(opacity=88)\r\n                //\r\n                ieAlpha: function () {\r\n                    var value;\r\n                    // http://jsperf.com/case-insensitive-regex-vs-strtolower-then-regex/18\r\n                    if (!parserInput.$re(/^opacity=/i)) {\r\n                        return;\r\n                    }\r\n                    value = parserInput.$re(/^\\d+/);\r\n                    if (!value) {\r\n                        value = expect(parsers.entities.variable, 'Could not parse alpha');\r\n                        value = \"@{\" + value.name.slice(1) + \"}\";\r\n                    }\r\n                    expectChar(')');\r\n                    return new tree.Quoted('', \"alpha(opacity=\" + value + \")\");\r\n                },\r\n                //\r\n                // A Selector Element\r\n                //\r\n                //     div\r\n                //     + h1\r\n                //     #socks\r\n                //     input[type=\"text\"]\r\n                //\r\n                // Elements are the building blocks for Selectors,\r\n                // they are made out of a `Combinator` (see combinator rule),\r\n                // and an element name, such as a tag a class, or `*`.\r\n                //\r\n                element: function () {\r\n                    var e;\r\n                    var c;\r\n                    var v;\r\n                    var index = parserInput.i;\r\n                    c = this.combinator();\r\n                    e = parserInput.$re(/^(?:\\d+\\.\\d+|\\d+)%/) ||\r\n                        parserInput.$re(/^(?:[.#]?|:*)(?:[\\w-]|[^\\x00-\\x9f]|\\\\(?:[A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9]))+/) ||\r\n                        parserInput.$char('*') || parserInput.$char('&') || this.attribute() ||\r\n                        parserInput.$re(/^\\([^&()@]+\\)/) || parserInput.$re(/^[\\.#:](?=@)/) ||\r\n                        this.entities.variableCurly();\r\n                    if (!e) {\r\n                        parserInput.save();\r\n                        if (parserInput.$char('(')) {\r\n                            if ((v = this.selector(false)) && parserInput.$char(')')) {\r\n                                e = new (tree.Paren)(v);\r\n                                parserInput.forget();\r\n                            }\r\n                            else {\r\n                                parserInput.restore('Missing closing \\')\\'');\r\n                            }\r\n                        }\r\n                        else {\r\n                            parserInput.forget();\r\n                        }\r\n                    }\r\n                    if (e) {\r\n                        return new (tree.Element)(c, e, e instanceof tree.Variable, index, fileInfo);\r\n                    }\r\n                },\r\n                //\r\n                // Combinators combine elements together, in a Selector.\r\n                //\r\n                // Because our parser isn't white-space sensitive, special care\r\n                // has to be taken, when parsing the descendant combinator, ` `,\r\n                // as it's an empty space. We have to check the previous character\r\n                // in the input, to see if it's a ` ` character. More info on how\r\n                // we deal with this in *combinator.js*.\r\n                //\r\n                combinator: function () {\r\n                    var c = parserInput.currentChar();\r\n                    if (c === '/') {\r\n                        parserInput.save();\r\n                        var slashedCombinator = parserInput.$re(/^\\/[a-z]+\\//i);\r\n                        if (slashedCombinator) {\r\n                            parserInput.forget();\r\n                            return new (tree.Combinator)(slashedCombinator);\r\n                        }\r\n                        parserInput.restore();\r\n                    }\r\n                    if (c === '>' || c === '+' || c === '~' || c === '|' || c === '^') {\r\n                        parserInput.i++;\r\n                        if (c === '^' && parserInput.currentChar() === '^') {\r\n                            c = '^^';\r\n                            parserInput.i++;\r\n                        }\r\n                        while (parserInput.isWhitespace()) {\r\n                            parserInput.i++;\r\n                        }\r\n                        return new (tree.Combinator)(c);\r\n                    }\r\n                    else if (parserInput.isWhitespace(-1)) {\r\n                        return new (tree.Combinator)(' ');\r\n                    }\r\n                    else {\r\n                        return new (tree.Combinator)(null);\r\n                    }\r\n                },\r\n                //\r\n                // A CSS Selector\r\n                // with less extensions e.g. the ability to extend and guard\r\n                //\r\n                //     .class > div + h1\r\n                //     li a:hover\r\n                //\r\n                // Selectors are made out of one or more Elements, see above.\r\n                //\r\n                selector: function (isLess) {\r\n                    var index = parserInput.i;\r\n                    var elements;\r\n                    var extendList;\r\n                    var c;\r\n                    var e;\r\n                    var allExtends;\r\n                    var when;\r\n                    var condition;\r\n                    isLess = isLess !== false;\r\n                    while ((isLess && (extendList = this.extend())) || (isLess && (when = parserInput.$str('when'))) || (e = this.element())) {\r\n                        if (when) {\r\n                            condition = expect(this.conditions, 'expected condition');\r\n                        }\r\n                        else if (condition) {\r\n                            error('CSS guard can only be used at the end of selector');\r\n                        }\r\n                        else if (extendList) {\r\n                            if (allExtends) {\r\n                                allExtends = allExtends.concat(extendList);\r\n                            }\r\n                            else {\r\n                                allExtends = extendList;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (allExtends) {\r\n                                error('Extend can only be used at the end of selector');\r\n                            }\r\n                            c = parserInput.currentChar();\r\n                            if (elements) {\r\n                                elements.push(e);\r\n                            }\r\n                            else {\r\n                                elements = [e];\r\n                            }\r\n                            e = null;\r\n                        }\r\n                        if (c === '{' || c === '}' || c === ';' || c === ',' || c === ')') {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (elements) {\r\n                        return new (tree.Selector)(elements, allExtends, condition, index, fileInfo);\r\n                    }\r\n                    if (allExtends) {\r\n                        error('Extend must be used to extend a selector, it cannot be used on its own');\r\n                    }\r\n                },\r\n                selectors: function () {\r\n                    var s;\r\n                    var selectors;\r\n                    while (true) {\r\n                        s = this.selector();\r\n                        if (!s) {\r\n                            break;\r\n                        }\r\n                        if (selectors) {\r\n                            selectors.push(s);\r\n                        }\r\n                        else {\r\n                            selectors = [s];\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (s.condition && selectors.length > 1) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        if (!parserInput.$char(',')) {\r\n                            break;\r\n                        }\r\n                        if (s.condition) {\r\n                            error(\"Guards are only currently allowed on a single selector.\");\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                    }\r\n                    return selectors;\r\n                },\r\n                attribute: function () {\r\n                    if (!parserInput.$char('[')) {\r\n                        return;\r\n                    }\r\n                    var entities = this.entities;\r\n                    var key;\r\n                    var val;\r\n                    var op;\r\n                    if (!(key = entities.variableCurly())) {\r\n                        key = expect(/^(?:[_A-Za-z0-9-\\*]*\\|)?(?:[_A-Za-z0-9-]|\\\\.)+/);\r\n                    }\r\n                    op = parserInput.$re(/^[|~*$^]?=/);\r\n                    if (op) {\r\n                        val = entities.quoted() || parserInput.$re(/^[0-9]+%/) || parserInput.$re(/^[\\w-]+/) || entities.variableCurly();\r\n                    }\r\n                    expectChar(']');\r\n                    return new (tree.Attribute)(key, op, val);\r\n                },\r\n                //\r\n                // The `block` rule is used by `ruleset` and `mixin.definition`.\r\n                // It's a wrapper around the `primary` rule, with added `{}`.\r\n                //\r\n                block: function () {\r\n                    var content;\r\n                    if (parserInput.$char('{') && (content = this.primary()) && parserInput.$char('}')) {\r\n                        return content;\r\n                    }\r\n                },\r\n                blockRuleset: function () {\r\n                    var block = this.block();\r\n                    if (block) {\r\n                        block = new tree.Ruleset(null, block);\r\n                    }\r\n                    return block;\r\n                },\r\n                detachedRuleset: function () {\r\n                    var argInfo;\r\n                    var params;\r\n                    var variadic;\r\n                    parserInput.save();\r\n                    if (parserInput.$re(/^[.#]\\(/)) {\r\n                        /**\r\n                         * DR args currently only implemented for each() function, and not\r\n                         * yet settable as `@dr: #(@arg) {}`\r\n                         * This should be done when DRs are merged with mixins.\r\n                         * See: https://github.com/less/less-meta/issues/16\r\n                         */\r\n                        argInfo = this.mixin.args(false);\r\n                        params = argInfo.args;\r\n                        variadic = argInfo.variadic;\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                    }\r\n                    var blockRuleset = this.blockRuleset();\r\n                    if (blockRuleset) {\r\n                        parserInput.forget();\r\n                        if (params) {\r\n                            return new tree.mixin.Definition(null, params, blockRuleset, null, variadic);\r\n                        }\r\n                        return new tree.DetachedRuleset(blockRuleset);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // div, .class, body > p {...}\r\n                //\r\n                ruleset: function () {\r\n                    var selectors;\r\n                    var rules;\r\n                    var debugInfo;\r\n                    parserInput.save();\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(parserInput.i);\r\n                    }\r\n                    selectors = this.selectors();\r\n                    if (selectors && (rules = this.block())) {\r\n                        parserInput.forget();\r\n                        var ruleset = new (tree.Ruleset)(selectors, rules, context.strictImports);\r\n                        if (context.dumpLineNumbers) {\r\n                            ruleset.debugInfo = debugInfo;\r\n                        }\r\n                        return ruleset;\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                declaration: function () {\r\n                    var name;\r\n                    var value;\r\n                    var index = parserInput.i;\r\n                    var hasDR;\r\n                    var c = parserInput.currentChar();\r\n                    var important;\r\n                    var merge;\r\n                    var isVariable;\r\n                    if (c === '.' || c === '#' || c === '&' || c === ':') {\r\n                        return;\r\n                    }\r\n                    parserInput.save();\r\n                    name = this.variable() || this.ruleProperty();\r\n                    if (name) {\r\n                        isVariable = typeof name === 'string';\r\n                        if (isVariable) {\r\n                            value = this.detachedRuleset();\r\n                            if (value) {\r\n                                hasDR = true;\r\n                            }\r\n                        }\r\n                        parserInput.commentStore.length = 0;\r\n                        if (!value) {\r\n                            // a name returned by this.ruleProperty() is always an array of the form:\r\n                            // [string-1, ..., string-n, \"\"] or [string-1, ..., string-n, \"+\"]\r\n                            // where each item is a tree.Keyword or tree.Variable\r\n                            merge = !isVariable && name.length > 1 && name.pop().value;\r\n                            // Custom property values get permissive parsing\r\n                            if (name[0].value && name[0].value.slice(0, 2) === '--') {\r\n                                value = this.permissiveValue();\r\n                            }\r\n                            // Try to store values as anonymous\r\n                            // If we need the value later we'll re-parse it in ruleset.parseValue\r\n                            else {\r\n                                value = this.anonymousValue();\r\n                            }\r\n                            if (value) {\r\n                                parserInput.forget();\r\n                                // anonymous values absorb the end ';' which is required for them to work\r\n                                return new (tree.Declaration)(name, value, false, merge, index, fileInfo);\r\n                            }\r\n                            if (!value) {\r\n                                value = this.value();\r\n                            }\r\n                            if (value) {\r\n                                important = this.important();\r\n                            }\r\n                            else if (isVariable) {\r\n                                // As a last resort, try permissiveValue\r\n                                value = this.permissiveValue();\r\n                            }\r\n                        }\r\n                        if (value && (this.end() || hasDR)) {\r\n                            parserInput.forget();\r\n                            return new (tree.Declaration)(name, value, important, merge, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.restore();\r\n                        }\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                    }\r\n                },\r\n                anonymousValue: function () {\r\n                    var index = parserInput.i;\r\n                    var match = parserInput.$re(/^([^.#@\\$+\\/'\"*`(;{}-]*);/);\r\n                    if (match) {\r\n                        return new (tree.Anonymous)(match[1], index);\r\n                    }\r\n                },\r\n                /**\r\n                 * Used for custom properties, at-rules, and variables (as fallback)\r\n                 * Parses almost anything inside of {} [] () \"\" blocks\r\n                 * until it reaches outer-most tokens.\r\n                 *\r\n                 * First, it will try to parse comments and entities to reach\r\n                 * the end. This is mostly like the Expression parser except no\r\n                 * math is allowed.\r\n                 */\r\n                permissiveValue: function (untilTokens) {\r\n                    var i;\r\n                    var e;\r\n                    var done;\r\n                    var value;\r\n                    var tok = untilTokens || ';';\r\n                    var index = parserInput.i;\r\n                    var result = [];\r\n                    function testCurrentChar() {\r\n                        var char = parserInput.currentChar();\r\n                        if (typeof tok === 'string') {\r\n                            return char === tok;\r\n                        }\r\n                        else {\r\n                            return tok.test(char);\r\n                        }\r\n                    }\r\n                    if (testCurrentChar()) {\r\n                        return;\r\n                    }\r\n                    value = [];\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            value.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.entity();\r\n                        if (e) {\r\n                            value.push(e);\r\n                        }\r\n                    } while (e);\r\n                    done = testCurrentChar();\r\n                    if (value.length > 0) {\r\n                        value = new (tree.Expression)(value);\r\n                        if (done) {\r\n                            return value;\r\n                        }\r\n                        else {\r\n                            result.push(value);\r\n                        }\r\n                        // Preserve space before $parseUntil as it will not\r\n                        if (parserInput.prevChar() === ' ') {\r\n                            result.push(new tree.Anonymous(' ', index));\r\n                        }\r\n                    }\r\n                    parserInput.save();\r\n                    value = parserInput.$parseUntil(tok);\r\n                    if (value) {\r\n                        if (typeof value === 'string') {\r\n                            error(\"Expected '\" + value + \"'\", 'Parse');\r\n                        }\r\n                        if (value.length === 1 && value[0] === ' ') {\r\n                            parserInput.forget();\r\n                            return new tree.Anonymous('', index);\r\n                        }\r\n                        var item = void 0;\r\n                        for (i = 0; i < value.length; i++) {\r\n                            item = value[i];\r\n                            if (Array.isArray(item)) {\r\n                                // Treat actual quotes as normal quoted values\r\n                                result.push(new tree.Quoted(item[0], item[1], true, index, fileInfo));\r\n                            }\r\n                            else {\r\n                                if (i === value.length - 1) {\r\n                                    item = item.trim();\r\n                                }\r\n                                // Treat like quoted values, but replace vars like unquoted expressions\r\n                                var quote = new tree.Quoted('\\'', item, true, index, fileInfo);\r\n                                quote.variableRegex = /@([\\w-]+)/g;\r\n                                quote.propRegex = /\\$([\\w-]+)/g;\r\n                                result.push(quote);\r\n                            }\r\n                        }\r\n                        parserInput.forget();\r\n                        return new tree.Expression(result, true);\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // An @import atrule\r\n                //\r\n                //     @import \"lib\";\r\n                //\r\n                // Depending on our environment, importing is done differently:\r\n                // In the browser, it's an XHR request, in Node, it would be a\r\n                // file-system operation. The function used for importing is\r\n                // stored in `import`, which we pass to the Import constructor.\r\n                //\r\n                'import': function () {\r\n                    var path;\r\n                    var features;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@import?\\s+/);\r\n                    if (dir) {\r\n                        var options = (dir ? this.importOptions() : null) || {};\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            features = this.mediaFeatures();\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon or unrecognised media features on import');\r\n                            }\r\n                            features = features && new (tree.Value)(features);\r\n                            return new (tree.Import)(path, features, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed import statement');\r\n                        }\r\n                    }\r\n                },\r\n                importOptions: function () {\r\n                    var o;\r\n                    var options = {};\r\n                    var optionName;\r\n                    var value;\r\n                    // list of options, surrounded by parens\r\n                    if (!parserInput.$char('(')) {\r\n                        return null;\r\n                    }\r\n                    do {\r\n                        o = this.importOption();\r\n                        if (o) {\r\n                            optionName = o;\r\n                            value = true;\r\n                            switch (optionName) {\r\n                                case 'css':\r\n                                    optionName = 'less';\r\n                                    value = false;\r\n                                    break;\r\n                                case 'once':\r\n                                    optionName = 'multiple';\r\n                                    value = false;\r\n                                    break;\r\n                            }\r\n                            options[optionName] = value;\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (o);\r\n                    expectChar(')');\r\n                    return options;\r\n                },\r\n                importOption: function () {\r\n                    var opt = parserInput.$re(/^(less|css|multiple|once|inline|reference|optional)/);\r\n                    if (opt) {\r\n                        return opt[1];\r\n                    }\r\n                },\r\n                mediaFeature: function () {\r\n                    var entities = this.entities;\r\n                    var nodes = [];\r\n                    var e;\r\n                    var p;\r\n                    parserInput.save();\r\n                    do {\r\n                        e = entities.keyword() || entities.variable() || entities.mixinLookup();\r\n                        if (e) {\r\n                            nodes.push(e);\r\n                        }\r\n                        else if (parserInput.$char('(')) {\r\n                            p = this.property();\r\n                            e = this.value();\r\n                            if (parserInput.$char(')')) {\r\n                                if (p && e) {\r\n                                    nodes.push(new (tree.Paren)(new (tree.Declaration)(p, e, null, null, parserInput.i, fileInfo, true)));\r\n                                }\r\n                                else if (e) {\r\n                                    nodes.push(new (tree.Paren)(e));\r\n                                }\r\n                                else {\r\n                                    error('badly formed media feature definition');\r\n                                }\r\n                            }\r\n                            else {\r\n                                error('Missing closing \\')\\'', 'Parse');\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    parserInput.forget();\r\n                    if (nodes.length > 0) {\r\n                        return new (tree.Expression)(nodes);\r\n                    }\r\n                },\r\n                mediaFeatures: function () {\r\n                    var entities = this.entities;\r\n                    var features = [];\r\n                    var e;\r\n                    do {\r\n                        e = this.mediaFeature();\r\n                        if (e) {\r\n                            features.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            e = entities.variable() || entities.mixinLookup();\r\n                            if (e) {\r\n                                features.push(e);\r\n                                if (!parserInput.$char(',')) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    return features.length > 0 ? features : null;\r\n                },\r\n                media: function () {\r\n                    var features;\r\n                    var rules;\r\n                    var media;\r\n                    var debugInfo;\r\n                    var index = parserInput.i;\r\n                    if (context.dumpLineNumbers) {\r\n                        debugInfo = getDebugInfo(index);\r\n                    }\r\n                    parserInput.save();\r\n                    if (parserInput.$str('@media')) {\r\n                        features = this.mediaFeatures();\r\n                        rules = this.block();\r\n                        if (!rules) {\r\n                            error('media definitions require block statements after any features');\r\n                        }\r\n                        parserInput.forget();\r\n                        media = new (tree.Media)(rules, features, index, fileInfo);\r\n                        if (context.dumpLineNumbers) {\r\n                            media.debugInfo = debugInfo;\r\n                        }\r\n                        return media;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                //\r\n                // A @plugin directive, used to import plugins dynamically.\r\n                //\r\n                //     @plugin (args) \"lib\";\r\n                //\r\n                plugin: function () {\r\n                    var path;\r\n                    var args;\r\n                    var options;\r\n                    var index = parserInput.i;\r\n                    var dir = parserInput.$re(/^@plugin?\\s+/);\r\n                    if (dir) {\r\n                        args = this.pluginArgs();\r\n                        if (args) {\r\n                            options = {\r\n                                pluginArgs: args,\r\n                                isPlugin: true\r\n                            };\r\n                        }\r\n                        else {\r\n                            options = { isPlugin: true };\r\n                        }\r\n                        if ((path = this.entities.quoted() || this.entities.url())) {\r\n                            if (!parserInput.$char(';')) {\r\n                                parserInput.i = index;\r\n                                error('missing semi-colon on @plugin');\r\n                            }\r\n                            return new (tree.Import)(path, null, options, index, fileInfo);\r\n                        }\r\n                        else {\r\n                            parserInput.i = index;\r\n                            error('malformed @plugin statement');\r\n                        }\r\n                    }\r\n                },\r\n                pluginArgs: function () {\r\n                    // list of options, surrounded by parens\r\n                    parserInput.save();\r\n                    if (!parserInput.$char('(')) {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                    var args = parserInput.$re(/^\\s*([^\\);]+)\\)\\s*/);\r\n                    if (args[1]) {\r\n                        parserInput.forget();\r\n                        return args[1].trim();\r\n                    }\r\n                    else {\r\n                        parserInput.restore();\r\n                        return null;\r\n                    }\r\n                },\r\n                //\r\n                // A CSS AtRule\r\n                //\r\n                //     @charset \"utf-8\";\r\n                //\r\n                atrule: function () {\r\n                    var index = parserInput.i;\r\n                    var name;\r\n                    var value;\r\n                    var rules;\r\n                    var nonVendorSpecificName;\r\n                    var hasIdentifier;\r\n                    var hasExpression;\r\n                    var hasUnknown;\r\n                    var hasBlock = true;\r\n                    var isRooted = true;\r\n                    if (parserInput.currentChar() !== '@') {\r\n                        return;\r\n                    }\r\n                    value = this['import']() || this.plugin() || this.media();\r\n                    if (value) {\r\n                        return value;\r\n                    }\r\n                    parserInput.save();\r\n                    name = parserInput.$re(/^@[a-z-]+/);\r\n                    if (!name) {\r\n                        return;\r\n                    }\r\n                    nonVendorSpecificName = name;\r\n                    if (name.charAt(1) == '-' && name.indexOf('-', 2) > 0) {\r\n                        nonVendorSpecificName = \"@\" + name.slice(name.indexOf('-', 2) + 1);\r\n                    }\r\n                    switch (nonVendorSpecificName) {\r\n                        case '@charset':\r\n                            hasIdentifier = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@namespace':\r\n                            hasExpression = true;\r\n                            hasBlock = false;\r\n                            break;\r\n                        case '@keyframes':\r\n                        case '@counter-style':\r\n                            hasIdentifier = true;\r\n                            break;\r\n                        case '@document':\r\n                        case '@supports':\r\n                            hasUnknown = true;\r\n                            isRooted = false;\r\n                            break;\r\n                        default:\r\n                            hasUnknown = true;\r\n                            break;\r\n                    }\r\n                    parserInput.commentStore.length = 0;\r\n                    if (hasIdentifier) {\r\n                        value = this.entity();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" identifier\");\r\n                        }\r\n                    }\r\n                    else if (hasExpression) {\r\n                        value = this.expression();\r\n                        if (!value) {\r\n                            error(\"expected \" + name + \" expression\");\r\n                        }\r\n                    }\r\n                    else if (hasUnknown) {\r\n                        value = this.permissiveValue(/^[{;]/);\r\n                        hasBlock = (parserInput.currentChar() === '{');\r\n                        if (!value) {\r\n                            if (!hasBlock && parserInput.currentChar() !== ';') {\r\n                                error(name + \" rule is missing block or ending semi-colon\");\r\n                            }\r\n                        }\r\n                        else if (!value.value) {\r\n                            value = null;\r\n                        }\r\n                    }\r\n                    if (hasBlock) {\r\n                        rules = this.blockRuleset();\r\n                    }\r\n                    if (rules || (!hasBlock && value && parserInput.$char(';'))) {\r\n                        parserInput.forget();\r\n                        return new (tree.AtRule)(name, value, rules, index, fileInfo, context.dumpLineNumbers ? getDebugInfo(index) : null, isRooted);\r\n                    }\r\n                    parserInput.restore('at-rule options not recognised');\r\n                },\r\n                //\r\n                // A Value is a comma-delimited list of Expressions\r\n                //\r\n                //     font-family: Baskerville, Georgia, serif;\r\n                //\r\n                // In a Rule, a Value represents everything after the `:`,\r\n                // and before the `;`.\r\n                //\r\n                value: function () {\r\n                    var e;\r\n                    var expressions = [];\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.expression();\r\n                        if (e) {\r\n                            expressions.push(e);\r\n                            if (!parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (expressions.length > 0) {\r\n                        return new (tree.Value)(expressions, index);\r\n                    }\r\n                },\r\n                important: function () {\r\n                    if (parserInput.currentChar() === '!') {\r\n                        return parserInput.$re(/^! *important/);\r\n                    }\r\n                },\r\n                sub: function () {\r\n                    var a;\r\n                    var e;\r\n                    parserInput.save();\r\n                    if (parserInput.$char('(')) {\r\n                        a = this.addition();\r\n                        if (a && parserInput.$char(')')) {\r\n                            parserInput.forget();\r\n                            e = new (tree.Expression)([a]);\r\n                            e.parens = true;\r\n                            return e;\r\n                        }\r\n                        parserInput.restore('Expected \\')\\'');\r\n                        return;\r\n                    }\r\n                    parserInput.restore();\r\n                },\r\n                multiplication: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.operand();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            if (parserInput.peek(/^\\/[*\\/]/)) {\r\n                                break;\r\n                            }\r\n                            parserInput.save();\r\n                            op = parserInput.$char('/') || parserInput.$char('*') || parserInput.$str('./');\r\n                            if (!op) {\r\n                                parserInput.forget();\r\n                                break;\r\n                            }\r\n                            a = this.operand();\r\n                            if (!a) {\r\n                                parserInput.restore();\r\n                                break;\r\n                            }\r\n                            parserInput.forget();\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                addition: function () {\r\n                    var m;\r\n                    var a;\r\n                    var op;\r\n                    var operation;\r\n                    var isSpaced;\r\n                    m = this.multiplication();\r\n                    if (m) {\r\n                        isSpaced = parserInput.isWhitespace(-1);\r\n                        while (true) {\r\n                            op = parserInput.$re(/^[-+]\\s+/) || (!isSpaced && (parserInput.$char('+') || parserInput.$char('-')));\r\n                            if (!op) {\r\n                                break;\r\n                            }\r\n                            a = this.multiplication();\r\n                            if (!a) {\r\n                                break;\r\n                            }\r\n                            m.parensInOp = true;\r\n                            a.parensInOp = true;\r\n                            operation = new (tree.Operation)(op, [operation || m, a], isSpaced);\r\n                            isSpaced = parserInput.isWhitespace(-1);\r\n                        }\r\n                        return operation || m;\r\n                    }\r\n                },\r\n                conditions: function () {\r\n                    var a;\r\n                    var b;\r\n                    var index = parserInput.i;\r\n                    var condition;\r\n                    a = this.condition(true);\r\n                    if (a) {\r\n                        while (true) {\r\n                            if (!parserInput.peek(/^,\\s*(not\\s*)?\\(/) || !parserInput.$char(',')) {\r\n                                break;\r\n                            }\r\n                            b = this.condition(true);\r\n                            if (!b) {\r\n                                break;\r\n                            }\r\n                            condition = new (tree.Condition)('or', condition || a, b, index);\r\n                        }\r\n                        return condition || a;\r\n                    }\r\n                },\r\n                condition: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    function or() {\r\n                        return parserInput.$str('or');\r\n                    }\r\n                    result = this.conditionAnd(needsParens);\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = or();\r\n                    if (logical) {\r\n                        next = this.condition(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                conditionAnd: function (needsParens) {\r\n                    var result;\r\n                    var logical;\r\n                    var next;\r\n                    var self = this;\r\n                    function insideCondition() {\r\n                        var cond = self.negatedCondition(needsParens) || self.parenthesisCondition(needsParens);\r\n                        if (!cond && !needsParens) {\r\n                            return self.atomicCondition(needsParens);\r\n                        }\r\n                        return cond;\r\n                    }\r\n                    function and() {\r\n                        return parserInput.$str('and');\r\n                    }\r\n                    result = insideCondition();\r\n                    if (!result) {\r\n                        return;\r\n                    }\r\n                    logical = and();\r\n                    if (logical) {\r\n                        next = this.conditionAnd(needsParens);\r\n                        if (next) {\r\n                            result = new (tree.Condition)(logical, result, next);\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    return result;\r\n                },\r\n                negatedCondition: function (needsParens) {\r\n                    if (parserInput.$str('not')) {\r\n                        var result = this.parenthesisCondition(needsParens);\r\n                        if (result) {\r\n                            result.negate = !result.negate;\r\n                        }\r\n                        return result;\r\n                    }\r\n                },\r\n                parenthesisCondition: function (needsParens) {\r\n                    function tryConditionFollowedByParenthesis(me) {\r\n                        var body;\r\n                        parserInput.save();\r\n                        body = me.condition(needsParens);\r\n                        if (!body) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        if (!parserInput.$char(')')) {\r\n                            parserInput.restore();\r\n                            return;\r\n                        }\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    var body;\r\n                    parserInput.save();\r\n                    if (!parserInput.$str('(')) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    body = tryConditionFollowedByParenthesis(this);\r\n                    if (body) {\r\n                        parserInput.forget();\r\n                        return body;\r\n                    }\r\n                    body = this.atomicCondition(needsParens);\r\n                    if (!body) {\r\n                        parserInput.restore();\r\n                        return;\r\n                    }\r\n                    if (!parserInput.$char(')')) {\r\n                        parserInput.restore(\"expected ')' got '\" + parserInput.currentChar() + \"'\");\r\n                        return;\r\n                    }\r\n                    parserInput.forget();\r\n                    return body;\r\n                },\r\n                atomicCondition: function (needsParens) {\r\n                    var entities = this.entities;\r\n                    var index = parserInput.i;\r\n                    var a;\r\n                    var b;\r\n                    var c;\r\n                    var op;\r\n                    function cond() {\r\n                        return this.addition() || entities.keyword() || entities.quoted() || entities.mixinLookup();\r\n                    }\r\n                    cond = cond.bind(this);\r\n                    a = cond();\r\n                    if (a) {\r\n                        if (parserInput.$char('>')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '>=';\r\n                            }\r\n                            else {\r\n                                op = '>';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('<')) {\r\n                            if (parserInput.$char('=')) {\r\n                                op = '<=';\r\n                            }\r\n                            else {\r\n                                op = '<';\r\n                            }\r\n                        }\r\n                        else if (parserInput.$char('=')) {\r\n                            if (parserInput.$char('>')) {\r\n                                op = '=>';\r\n                            }\r\n                            else if (parserInput.$char('<')) {\r\n                                op = '=<';\r\n                            }\r\n                            else {\r\n                                op = '=';\r\n                            }\r\n                        }\r\n                        if (op) {\r\n                            b = cond();\r\n                            if (b) {\r\n                                c = new (tree.Condition)(op, a, b, index, false);\r\n                            }\r\n                            else {\r\n                                error('expected expression');\r\n                            }\r\n                        }\r\n                        else {\r\n                            c = new (tree.Condition)('=', a, new (tree.Keyword)('true'), index, false);\r\n                        }\r\n                        return c;\r\n                    }\r\n                },\r\n                //\r\n                // An operand is anything that can be part of an operation,\r\n                // such as a Color, or a Variable\r\n                //\r\n                operand: function () {\r\n                    var entities = this.entities;\r\n                    var negate;\r\n                    if (parserInput.peek(/^-[@\\$\\(]/)) {\r\n                        negate = parserInput.$char('-');\r\n                    }\r\n                    var o = this.sub() || entities.dimension() ||\r\n                        entities.color() || entities.variable() ||\r\n                        entities.property() || entities.call() ||\r\n                        entities.quoted(true) || entities.colorKeyword() ||\r\n                        entities.mixinLookup();\r\n                    if (negate) {\r\n                        o.parensInOp = true;\r\n                        o = new (tree.Negative)(o);\r\n                    }\r\n                    return o;\r\n                },\r\n                //\r\n                // Expressions either represent mathematical operations,\r\n                // or white-space delimited Entities.\r\n                //\r\n                //     1px solid black\r\n                //     @var * 2\r\n                //\r\n                expression: function () {\r\n                    var entities = [];\r\n                    var e;\r\n                    var delim;\r\n                    var index = parserInput.i;\r\n                    do {\r\n                        e = this.comment();\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            continue;\r\n                        }\r\n                        e = this.addition() || this.entity();\r\n                        if (e instanceof tree.Comment) {\r\n                            e = null;\r\n                        }\r\n                        if (e) {\r\n                            entities.push(e);\r\n                            // operations do not allow keyword \"/\" dimension (e.g. small/20px) so we support that here\r\n                            if (!parserInput.peek(/^\\/[\\/*]/)) {\r\n                                delim = parserInput.$char('/');\r\n                                if (delim) {\r\n                                    entities.push(new (tree.Anonymous)(delim, index));\r\n                                }\r\n                            }\r\n                        }\r\n                    } while (e);\r\n                    if (entities.length > 0) {\r\n                        return new (tree.Expression)(entities);\r\n                    }\r\n                },\r\n                property: function () {\r\n                    var name = parserInput.$re(/^(\\*?-?[_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (name) {\r\n                        return name[1];\r\n                    }\r\n                },\r\n                ruleProperty: function () {\r\n                    var name = [];\r\n                    var index = [];\r\n                    var s;\r\n                    var k;\r\n                    parserInput.save();\r\n                    var simpleProperty = parserInput.$re(/^([_a-zA-Z0-9-]+)\\s*:/);\r\n                    if (simpleProperty) {\r\n                        name = [new (tree.Keyword)(simpleProperty[1])];\r\n                        parserInput.forget();\r\n                        return name;\r\n                    }\r\n                    function match(re) {\r\n                        var i = parserInput.i;\r\n                        var chunk = parserInput.$re(re);\r\n                        if (chunk) {\r\n                            index.push(i);\r\n                            return name.push(chunk[1]);\r\n                        }\r\n                    }\r\n                    match(/^(\\*?)/);\r\n                    while (true) {\r\n                        if (!match(/^((?:[\\w-]+)|(?:[@\\$]\\{[\\w-]+\\}))/)) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if ((name.length > 1) && match(/^((?:\\+_|\\+)?)\\s*:/)) {\r\n                        parserInput.forget();\r\n                        // at last, we have the complete match now. move forward,\r\n                        // convert name particles to tree objects and return:\r\n                        if (name[0] === '') {\r\n                            name.shift();\r\n                            index.shift();\r\n                        }\r\n                        for (k = 0; k < name.length; k++) {\r\n                            s = name[k];\r\n                            name[k] = (s.charAt(0) !== '@' && s.charAt(0) !== '$') ?\r\n                                new (tree.Keyword)(s) :\r\n                                (s.charAt(0) === '@' ?\r\n                                    new (tree.Variable)(\"@\" + s.slice(2, -1), index[k], fileInfo) :\r\n                                    new (tree.Property)(\"$\" + s.slice(2, -1), index[k], fileInfo));\r\n                        }\r\n                        return name;\r\n                    }\r\n                    parserInput.restore();\r\n                }\r\n            }\r\n        };\r\n    };\r\n    Parser.serializeVars = function (vars) {\r\n        var s = '';\r\n        for (var name_1 in vars) {\r\n            if (Object.hasOwnProperty.call(vars, name_1)) {\r\n                var value = vars[name_1];\r\n                s += ((name_1[0] === '@') ? '' : '@') + name_1 + \": \" + value + ((String(value).slice(-1) === ';') ? '' : ';');\r\n            }\r\n        }\r\n        return s;\r\n    };\n\n    function boolean(condition) {\r\n        return condition ? Keyword.True : Keyword.False;\r\n    }\r\n    /**\r\n     * Functions with evalArgs set to false are sent context\r\n     * as the first argument.\r\n     */\r\n    function If(context, condition, trueValue, falseValue) {\r\n        return condition.eval(context) ? trueValue.eval(context)\r\n            : (falseValue ? falseValue.eval(context) : new Anonymous);\r\n    }\r\n    If.evalArgs = false;\r\n    function isdefined(context, variable) {\r\n        try {\r\n            variable.eval(context);\r\n            return Keyword.True;\r\n        }\r\n        catch (e) {\r\n            return Keyword.False;\r\n        }\r\n    }\r\n    isdefined.evalArgs = false;\r\n    var boolean$1 = { isdefined: isdefined, boolean: boolean, 'if': If };\n\n    var colorFunctions;\r\n    function clamp$1(val) {\r\n        return Math.min(1, Math.max(0, val));\r\n    }\r\n    function hsla(origColor, hsl) {\r\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\r\n        if (color) {\r\n            if (origColor.value &&\r\n                /^(rgb|hsl)/.test(origColor.value)) {\r\n                color.value = origColor.value;\r\n            }\r\n            else {\r\n                color.value = 'rgb';\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n    function toHSL(color) {\r\n        if (color.toHSL) {\r\n            return color.toHSL();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function toHSV(color) {\r\n        if (color.toHSV) {\r\n            return color.toHSV();\r\n        }\r\n        else {\r\n            throw new Error('Argument cannot be evaluated to a color');\r\n        }\r\n    }\r\n    function number(n) {\r\n        if (n instanceof Dimension) {\r\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\r\n        }\r\n        else if (typeof n === 'number') {\r\n            return n;\r\n        }\r\n        else {\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'color functions take numbers as parameters'\r\n            };\r\n        }\r\n    }\r\n    function scaled(n, size) {\r\n        if (n instanceof Dimension && n.unit.is('%')) {\r\n            return parseFloat(n.value * size / 100);\r\n        }\r\n        else {\r\n            return number(n);\r\n        }\r\n    }\r\n    colorFunctions = {\r\n        rgb: function (r, g, b) {\r\n            var a = 1;\r\n            /**\r\n             * Comma-less syntax\r\n             *   e.g. rgb(0 128 255 / 50%)\r\n             */\r\n            if (r instanceof Expression) {\r\n                var val = r.value;\r\n                r = val[0];\r\n                g = val[1];\r\n                b = val[2];\r\n                /**\r\n                 * @todo - should this be normalized in\r\n                 *   function caller? Or parsed differently?\r\n                 */\r\n                if (b instanceof Operation) {\r\n                    var op = b;\r\n                    b = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.rgba(r, g, b, a);\r\n            if (color) {\r\n                color.value = 'rgb';\r\n                return color;\r\n            }\r\n        },\r\n        rgba: function (r, g, b, a) {\r\n            try {\r\n                if (r instanceof Color) {\r\n                    if (g) {\r\n                        a = number(g);\r\n                    }\r\n                    else {\r\n                        a = r.alpha;\r\n                    }\r\n                    return new Color(r.rgb, a, 'rgba');\r\n                }\r\n                var rgb = [r, g, b].map(function (c) { return scaled(c, 255); });\r\n                a = number(a);\r\n                return new Color(rgb, a, 'rgba');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsl: function (h, s, l) {\r\n            var a = 1;\r\n            if (h instanceof Expression) {\r\n                var val = h.value;\r\n                h = val[0];\r\n                s = val[1];\r\n                l = val[2];\r\n                if (l instanceof Operation) {\r\n                    var op = l;\r\n                    l = op.operands[0];\r\n                    a = op.operands[1];\r\n                }\r\n            }\r\n            var color = colorFunctions.hsla(h, s, l, a);\r\n            if (color) {\r\n                color.value = 'hsl';\r\n                return color;\r\n            }\r\n        },\r\n        hsla: function (h, s, l, a) {\r\n            try {\r\n                if (h instanceof Color) {\r\n                    if (s) {\r\n                        a = number(s);\r\n                    }\r\n                    else {\r\n                        a = h.alpha;\r\n                    }\r\n                    return new Color(h.rgb, a, 'hsla');\r\n                }\r\n                var m1_1;\r\n                var m2_1;\r\n                function hue(h) {\r\n                    h = h < 0 ? h + 1 : (h > 1 ? h - 1 : h);\r\n                    if (h * 6 < 1) {\r\n                        return m1_1 + (m2_1 - m1_1) * h * 6;\r\n                    }\r\n                    else if (h * 2 < 1) {\r\n                        return m2_1;\r\n                    }\r\n                    else if (h * 3 < 2) {\r\n                        return m1_1 + (m2_1 - m1_1) * (2 / 3 - h) * 6;\r\n                    }\r\n                    else {\r\n                        return m1_1;\r\n                    }\r\n                }\r\n                h = (number(h) % 360) / 360;\r\n                s = clamp$1(number(s));\r\n                l = clamp$1(number(l));\r\n                a = clamp$1(number(a));\r\n                m2_1 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n                m1_1 = l * 2 - m2_1;\r\n                var rgb = [\r\n                    hue(h + 1 / 3) * 255,\r\n                    hue(h) * 255,\r\n                    hue(h - 1 / 3) * 255\r\n                ];\r\n                a = number(a);\r\n                return new Color(rgb, a, 'hsla');\r\n            }\r\n            catch (e) { }\r\n        },\r\n        hsv: function (h, s, v) {\r\n            return colorFunctions.hsva(h, s, v, 1.0);\r\n        },\r\n        hsva: function (h, s, v, a) {\r\n            h = ((number(h) % 360) / 360) * 360;\r\n            s = number(s);\r\n            v = number(v);\r\n            a = number(a);\r\n            var i;\r\n            var f;\r\n            i = Math.floor((h / 60) % 6);\r\n            f = (h / 60) - i;\r\n            var vs = [v,\r\n                v * (1 - s),\r\n                v * (1 - f * s),\r\n                v * (1 - (1 - f) * s)];\r\n            var perm = [[0, 3, 1],\r\n                [2, 0, 1],\r\n                [1, 0, 3],\r\n                [1, 2, 0],\r\n                [3, 1, 0],\r\n                [0, 1, 2]];\r\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\r\n        },\r\n        hue: function (color) {\r\n            return new Dimension(toHSL(color).h);\r\n        },\r\n        saturation: function (color) {\r\n            return new Dimension(toHSL(color).s * 100, '%');\r\n        },\r\n        lightness: function (color) {\r\n            return new Dimension(toHSL(color).l * 100, '%');\r\n        },\r\n        hsvhue: function (color) {\r\n            return new Dimension(toHSV(color).h);\r\n        },\r\n        hsvsaturation: function (color) {\r\n            return new Dimension(toHSV(color).s * 100, '%');\r\n        },\r\n        hsvvalue: function (color) {\r\n            return new Dimension(toHSV(color).v * 100, '%');\r\n        },\r\n        red: function (color) {\r\n            return new Dimension(color.rgb[0]);\r\n        },\r\n        green: function (color) {\r\n            return new Dimension(color.rgb[1]);\r\n        },\r\n        blue: function (color) {\r\n            return new Dimension(color.rgb[2]);\r\n        },\r\n        alpha: function (color) {\r\n            return new Dimension(toHSL(color).a);\r\n        },\r\n        luma: function (color) {\r\n            return new Dimension(color.luma() * color.alpha * 100, '%');\r\n        },\r\n        luminance: function (color) {\r\n            var luminance = (0.2126 * color.rgb[0] / 255) +\r\n                (0.7152 * color.rgb[1] / 255) +\r\n                (0.0722 * color.rgb[2] / 255);\r\n            return new Dimension(luminance * color.alpha * 100, '%');\r\n        },\r\n        saturate: function (color, amount, method) {\r\n            // filter: saturate(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s += hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s += amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        desaturate: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.s -= hsl.s * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.s -= amount.value / 100;\r\n            }\r\n            hsl.s = clamp$1(hsl.s);\r\n            return hsla(color, hsl);\r\n        },\r\n        lighten: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l += hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l += amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        darken: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.l -= hsl.l * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.l -= amount.value / 100;\r\n            }\r\n            hsl.l = clamp$1(hsl.l);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadein: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a += hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a += amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fadeout: function (color, amount, method) {\r\n            var hsl = toHSL(color);\r\n            if (typeof method !== 'undefined' && method.value === 'relative') {\r\n                hsl.a -= hsl.a * amount.value / 100;\r\n            }\r\n            else {\r\n                hsl.a -= amount.value / 100;\r\n            }\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        fade: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            hsl.a = amount.value / 100;\r\n            hsl.a = clamp$1(hsl.a);\r\n            return hsla(color, hsl);\r\n        },\r\n        spin: function (color, amount) {\r\n            var hsl = toHSL(color);\r\n            var hue = (hsl.h + amount.value) % 360;\r\n            hsl.h = hue < 0 ? 360 + hue : hue;\r\n            return hsla(color, hsl);\r\n        },\r\n        //\r\n        // Copyright (c) 2006-2009 Hampton Catlin, Natalie Weizenbaum, and Chris Eppstein\r\n        // http://sass-lang.com\r\n        //\r\n        mix: function (color1, color2, weight) {\r\n            if (!weight) {\r\n                weight = new Dimension(50);\r\n            }\r\n            var p = weight.value / 100.0;\r\n            var w = p * 2 - 1;\r\n            var a = toHSL(color1).a - toHSL(color2).a;\r\n            var w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n            var w2 = 1 - w1;\r\n            var rgb = [color1.rgb[0] * w1 + color2.rgb[0] * w2,\r\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\r\n                color1.rgb[2] * w1 + color2.rgb[2] * w2];\r\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\r\n            return new Color(rgb, alpha);\r\n        },\r\n        greyscale: function (color) {\r\n            return colorFunctions.desaturate(color, new Dimension(100));\r\n        },\r\n        contrast: function (color, dark, light, threshold) {\r\n            // filter: contrast(3.2);\r\n            // should be kept as is, so check for color\r\n            if (!color.rgb) {\r\n                return null;\r\n            }\r\n            if (typeof light === 'undefined') {\r\n                light = colorFunctions.rgba(255, 255, 255, 1.0);\r\n            }\r\n            if (typeof dark === 'undefined') {\r\n                dark = colorFunctions.rgba(0, 0, 0, 1.0);\r\n            }\r\n            // Figure out which is actually light and dark:\r\n            if (dark.luma() > light.luma()) {\r\n                var t = light;\r\n                light = dark;\r\n                dark = t;\r\n            }\r\n            if (typeof threshold === 'undefined') {\r\n                threshold = 0.43;\r\n            }\r\n            else {\r\n                threshold = number(threshold);\r\n            }\r\n            if (color.luma() < threshold) {\r\n                return light;\r\n            }\r\n            else {\r\n                return dark;\r\n            }\r\n        },\r\n        // Changes made in 2.7.0 - Reverted in 3.0.0\r\n        // contrast: function (color, color1, color2, threshold) {\r\n        //     // Return which of `color1` and `color2` has the greatest contrast with `color`\r\n        //     // according to the standard WCAG contrast ratio calculation.\r\n        //     // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n        //     // The threshold param is no longer used, in line with SASS.\r\n        //     // filter: contrast(3.2);\r\n        //     // should be kept as is, so check for color\r\n        //     if (!color.rgb) {\r\n        //         return null;\r\n        //     }\r\n        //     if (typeof color1 === 'undefined') {\r\n        //         color1 = colorFunctions.rgba(0, 0, 0, 1.0);\r\n        //     }\r\n        //     if (typeof color2 === 'undefined') {\r\n        //         color2 = colorFunctions.rgba(255, 255, 255, 1.0);\r\n        //     }\r\n        //     var contrast1, contrast2;\r\n        //     var luma = color.luma();\r\n        //     var luma1 = color1.luma();\r\n        //     var luma2 = color2.luma();\r\n        //     // Calculate contrast ratios for each color\r\n        //     if (luma > luma1) {\r\n        //         contrast1 = (luma + 0.05) / (luma1 + 0.05);\r\n        //     } else {\r\n        //         contrast1 = (luma1 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (luma > luma2) {\r\n        //         contrast2 = (luma + 0.05) / (luma2 + 0.05);\r\n        //     } else {\r\n        //         contrast2 = (luma2 + 0.05) / (luma + 0.05);\r\n        //     }\r\n        //     if (contrast1 > contrast2) {\r\n        //         return color1;\r\n        //     } else {\r\n        //         return color2;\r\n        //     }\r\n        // },\r\n        argb: function (color) {\r\n            return new Anonymous(color.toARGB());\r\n        },\r\n        color: function (c) {\r\n            if ((c instanceof Quoted) &&\r\n                (/^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value))) {\r\n                var val = c.value.slice(1);\r\n                return new Color(val, undefined, \"#\" + val);\r\n            }\r\n            if ((c instanceof Color) || (c = Color.fromKeyword(c.value))) {\r\n                c.value = undefined;\r\n                return c;\r\n            }\r\n            throw {\r\n                type: 'Argument',\r\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\r\n            };\r\n        },\r\n        tint: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\r\n        },\r\n        shade: function (color, amount) {\r\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\r\n        }\r\n    };\r\n    var color = colorFunctions;\n\n    // Color Blending\r\n    // ref: http://www.w3.org/TR/compositing-1\r\n    function colorBlend(mode, color1, color2) {\r\n        var ab = color1.alpha; // result\r\n        var // backdrop\r\n        cb;\r\n        var as = color2.alpha;\r\n        var // source\r\n        cs;\r\n        var ar;\r\n        var cr;\r\n        var r = [];\r\n        ar = as + ab * (1 - as);\r\n        for (var i = 0; i < 3; i++) {\r\n            cb = color1.rgb[i] / 255;\r\n            cs = color2.rgb[i] / 255;\r\n            cr = mode(cb, cs);\r\n            if (ar) {\r\n                cr = (as * cs + ab * (cb -\r\n                    as * (cb + cs - cr))) / ar;\r\n            }\r\n            r[i] = cr * 255;\r\n        }\r\n        return new Color(r, ar);\r\n    }\r\n    var colorBlendModeFunctions = {\r\n        multiply: function (cb, cs) {\r\n            return cb * cs;\r\n        },\r\n        screen: function (cb, cs) {\r\n            return cb + cs - cb * cs;\r\n        },\r\n        overlay: function (cb, cs) {\r\n            cb *= 2;\r\n            return (cb <= 1) ?\r\n                colorBlendModeFunctions.multiply(cb, cs) :\r\n                colorBlendModeFunctions.screen(cb - 1, cs);\r\n        },\r\n        softlight: function (cb, cs) {\r\n            var d = 1;\r\n            var e = cb;\r\n            if (cs > 0.5) {\r\n                e = 1;\r\n                d = (cb > 0.25) ? Math.sqrt(cb)\r\n                    : ((16 * cb - 12) * cb + 4) * cb;\r\n            }\r\n            return cb - (1 - 2 * cs) * e * (d - cb);\r\n        },\r\n        hardlight: function (cb, cs) {\r\n            return colorBlendModeFunctions.overlay(cs, cb);\r\n        },\r\n        difference: function (cb, cs) {\r\n            return Math.abs(cb - cs);\r\n        },\r\n        exclusion: function (cb, cs) {\r\n            return cb + cs - 2 * cb * cs;\r\n        },\r\n        // non-w3c functions:\r\n        average: function (cb, cs) {\r\n            return (cb + cs) / 2;\r\n        },\r\n        negation: function (cb, cs) {\r\n            return 1 - Math.abs(cb + cs - 1);\r\n        }\r\n    };\r\n    for (var f in colorBlendModeFunctions) {\r\n        if (colorBlendModeFunctions.hasOwnProperty(f)) {\r\n            colorBlend[f] = colorBlend.bind(null, colorBlendModeFunctions[f]);\r\n        }\r\n    }\n\n    var dataUri = (function (environment) {\r\n        var fallback = function (functionThis, node) { return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context); };\r\n        return { 'data-uri': function (mimetypeNode, filePathNode) {\r\n                if (!filePathNode) {\r\n                    filePathNode = mimetypeNode;\r\n                    mimetypeNode = null;\r\n                }\r\n                var mimetype = mimetypeNode && mimetypeNode.value;\r\n                var filePath = filePathNode.value;\r\n                var currentFileInfo = this.currentFileInfo;\r\n                var currentDirectory = currentFileInfo.rewriteUrls ?\r\n                    currentFileInfo.currentDirectory : currentFileInfo.entryPath;\r\n                var fragmentStart = filePath.indexOf('#');\r\n                var fragment = '';\r\n                if (fragmentStart !== -1) {\r\n                    fragment = filePath.slice(fragmentStart);\r\n                    filePath = filePath.slice(0, fragmentStart);\r\n                }\r\n                var context = clone(this.context);\r\n                context.rawBuffer = true;\r\n                var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\r\n                if (!fileManager) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                var useBase64 = false;\r\n                // detect the mimetype if not given\r\n                if (!mimetypeNode) {\r\n                    mimetype = environment.mimeLookup(filePath);\r\n                    if (mimetype === 'image/svg+xml') {\r\n                        useBase64 = false;\r\n                    }\r\n                    else {\r\n                        // use base 64 unless it's an ASCII or UTF-8 format\r\n                        var charset = environment.charsetLookup(mimetype);\r\n                        useBase64 = ['US-ASCII', 'UTF-8'].indexOf(charset) < 0;\r\n                    }\r\n                    if (useBase64) {\r\n                        mimetype += ';base64';\r\n                    }\r\n                }\r\n                else {\r\n                    useBase64 = /;base64$/.test(mimetype);\r\n                }\r\n                var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\r\n                if (!fileSync.contents) {\r\n                    logger.warn(\"Skipped data-uri embedding of \" + filePath + \" because file not found\");\r\n                    return fallback(this, filePathNode || mimetypeNode);\r\n                }\r\n                var buf = fileSync.contents;\r\n                if (useBase64 && !environment.encodeBase64) {\r\n                    return fallback(this, filePathNode);\r\n                }\r\n                buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\r\n                var uri = \"data:\" + mimetype + \",\" + buf + fragment;\r\n                return new URL(new Quoted(\"\\\"\" + uri + \"\\\"\", uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var getItemsFromNode = function (node) {\r\n        // handle non-array values as an array of length 1\r\n        // return 'undefined' if index is invalid\r\n        var items = Array.isArray(node.value) ?\r\n            node.value : Array(node);\r\n        return items;\r\n    };\r\n    var list = {\r\n        _SELF: function (n) {\r\n            return n;\r\n        },\r\n        '~': function () {\r\n            var expr = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                expr[_i] = arguments[_i];\r\n            }\r\n            if (expr.length === 1) {\r\n                return expr[0];\r\n            }\r\n            return new Value(expr);\r\n        },\r\n        extract: function (values, index) {\r\n            // (1-based index)\r\n            index = index.value - 1;\r\n            return getItemsFromNode(values)[index];\r\n        },\r\n        length: function (values) {\r\n            return new Dimension(getItemsFromNode(values).length);\r\n        },\r\n        /**\r\n         * Creates a Less list of incremental values.\r\n         * Modeled after Lodash's range function, also exists natively in PHP\r\n         *\r\n         * @param {Dimension} [start=1]\r\n         * @param {Dimension} end  - e.g. 10 or 10px - unit is added to output\r\n         * @param {Dimension} [step=1]\r\n         */\r\n        range: function (start, end, step) {\r\n            var from;\r\n            var to;\r\n            var stepValue = 1;\r\n            var list = [];\r\n            if (end) {\r\n                to = end;\r\n                from = start.value;\r\n                if (step) {\r\n                    stepValue = step.value;\r\n                }\r\n            }\r\n            else {\r\n                from = 1;\r\n                to = start;\r\n            }\r\n            for (var i = from; i <= to.value; i += stepValue) {\r\n                list.push(new Dimension(i, to.unit));\r\n            }\r\n            return new Expression(list);\r\n        },\r\n        each: function (list, rs) {\r\n            var _this = this;\r\n            var rules = [];\r\n            var newRules;\r\n            var iterator;\r\n            var tryEval = function (val) {\r\n                if (val instanceof Node) {\r\n                    return val.eval(_this.context);\r\n                }\r\n                return val;\r\n            };\r\n            if (list.value && !(list instanceof Quoted)) {\r\n                if (Array.isArray(list.value)) {\r\n                    iterator = list.value.map(tryEval);\r\n                }\r\n                else {\r\n                    iterator = [tryEval(list.value)];\r\n                }\r\n            }\r\n            else if (list.ruleset) {\r\n                iterator = tryEval(list.ruleset).rules;\r\n            }\r\n            else if (list.rules) {\r\n                iterator = list.rules.map(tryEval);\r\n            }\r\n            else if (Array.isArray(list)) {\r\n                iterator = list.map(tryEval);\r\n            }\r\n            else {\r\n                iterator = [tryEval(list)];\r\n            }\r\n            var valueName = '@value';\r\n            var keyName = '@key';\r\n            var indexName = '@index';\r\n            if (rs.params) {\r\n                valueName = rs.params[0] && rs.params[0].name;\r\n                keyName = rs.params[1] && rs.params[1].name;\r\n                indexName = rs.params[2] && rs.params[2].name;\r\n                rs = rs.rules;\r\n            }\r\n            else {\r\n                rs = rs.ruleset;\r\n            }\r\n            for (var i = 0; i < iterator.length; i++) {\r\n                var key = void 0;\r\n                var value = void 0;\r\n                var item = iterator[i];\r\n                if (item instanceof Declaration) {\r\n                    key = typeof item.name === 'string' ? item.name : item.name[0].value;\r\n                    value = item.value;\r\n                }\r\n                else {\r\n                    key = new Dimension(i + 1);\r\n                    value = item;\r\n                }\r\n                if (item instanceof Comment) {\r\n                    continue;\r\n                }\r\n                newRules = rs.rules.slice(0);\r\n                if (valueName) {\r\n                    newRules.push(new Declaration(valueName, value, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (indexName) {\r\n                    newRules.push(new Declaration(indexName, new Dimension(i + 1), false, false, this.index, this.currentFileInfo));\r\n                }\r\n                if (keyName) {\r\n                    newRules.push(new Declaration(keyName, key, false, false, this.index, this.currentFileInfo));\r\n                }\r\n                rules.push(new Ruleset([new (Selector)([new Element(\"\", '&')])], newRules, rs.strictImports, rs.visibilityInfo()));\r\n            }\r\n            return new Ruleset([new (Selector)([new Element(\"\", '&')])], rules, rs.strictImports, rs.visibilityInfo()).eval(this.context);\r\n        }\r\n    };\n\n    var MathHelper = function (fn, unit, n) {\r\n        if (!(n instanceof Dimension)) {\r\n            throw { type: 'Argument', message: 'argument must be a number' };\r\n        }\r\n        if (unit == null) {\r\n            unit = n.unit;\r\n        }\r\n        else {\r\n            n = n.unify();\r\n        }\r\n        return new Dimension(fn(parseFloat(n.value)), unit);\r\n    };\n\n    var mathFunctions = {\r\n        // name,  unit\r\n        ceil: null,\r\n        floor: null,\r\n        sqrt: null,\r\n        abs: null,\r\n        tan: '',\r\n        sin: '',\r\n        cos: '',\r\n        atan: 'rad',\r\n        asin: 'rad',\r\n        acos: 'rad'\r\n    };\r\n    for (var f$1 in mathFunctions) {\r\n        if (mathFunctions.hasOwnProperty(f$1)) {\r\n            mathFunctions[f$1] = MathHelper.bind(null, Math[f$1], mathFunctions[f$1]);\r\n        }\r\n    }\r\n    mathFunctions.round = function (n, f) {\r\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\r\n        return MathHelper(function (num) { return num.toFixed(fraction); }, null, n);\r\n    };\n\n    var minMax = function (isMin, args) {\r\n        args = Array.prototype.slice.call(args);\r\n        switch (args.length) {\r\n            case 0: throw { type: 'Argument', message: 'one or more arguments required' };\r\n        }\r\n        var i; // key is the unit.toString() for unified Dimension values,\r\n        var j;\r\n        var current;\r\n        var currentUnified;\r\n        var referenceUnified;\r\n        var unit;\r\n        var unitStatic;\r\n        var unitClone;\r\n        var // elems only contains original argument values.\r\n        order = [];\r\n        var values = {};\r\n        // value is the index into the order array.\r\n        for (i = 0; i < args.length; i++) {\r\n            current = args[i];\r\n            if (!(current instanceof Dimension)) {\r\n                if (Array.isArray(args[i].value)) {\r\n                    Array.prototype.push.apply(args, Array.prototype.slice.call(args[i].value));\r\n                }\r\n                continue;\r\n            }\r\n            currentUnified = current.unit.toString() === '' && unitClone !== undefined ? new Dimension(current.value, unitClone).unify() : current.unify();\r\n            unit = currentUnified.unit.toString() === '' && unitStatic !== undefined ? unitStatic : currentUnified.unit.toString();\r\n            unitStatic = unit !== '' && unitStatic === undefined || unit !== '' && order[0].unify().unit.toString() === '' ? unit : unitStatic;\r\n            unitClone = unit !== '' && unitClone === undefined ? current.unit.toString() : unitClone;\r\n            j = values[''] !== undefined && unit !== '' && unit === unitStatic ? values[''] : values[unit];\r\n            if (j === undefined) {\r\n                if (unitStatic !== undefined && unit !== unitStatic) {\r\n                    throw { type: 'Argument', message: 'incompatible types' };\r\n                }\r\n                values[unit] = order.length;\r\n                order.push(current);\r\n                continue;\r\n            }\r\n            referenceUnified = order[j].unit.toString() === '' && unitClone !== undefined ? new Dimension(order[j].value, unitClone).unify() : order[j].unify();\r\n            if (isMin && currentUnified.value < referenceUnified.value ||\r\n                !isMin && currentUnified.value > referenceUnified.value) {\r\n                order[j] = current;\r\n            }\r\n        }\r\n        if (order.length == 1) {\r\n            return order[0];\r\n        }\r\n        args = order.map(function (a) { return a.toCSS(this.context); }).join(this.context.compress ? ',' : ', ');\r\n        return new Anonymous((isMin ? 'min' : 'max') + \"(\" + args + \")\");\r\n    };\r\n    var number$1 = {\r\n        min: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(true, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        max: function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            try {\r\n                return minMax(false, args);\r\n            }\r\n            catch (e) { }\r\n        },\r\n        convert: function (val, unit) {\r\n            return val.convertTo(unit.value);\r\n        },\r\n        pi: function () {\r\n            return new Dimension(Math.PI);\r\n        },\r\n        mod: function (a, b) {\r\n            return new Dimension(a.value % b.value, a.unit);\r\n        },\r\n        pow: function (x, y) {\r\n            if (typeof x === 'number' && typeof y === 'number') {\r\n                x = new Dimension(x);\r\n                y = new Dimension(y);\r\n            }\r\n            else if (!(x instanceof Dimension) || !(y instanceof Dimension)) {\r\n                throw { type: 'Argument', message: 'arguments must be numbers' };\r\n            }\r\n            return new Dimension(Math.pow(x.value, y.value), x.unit);\r\n        },\r\n        percentage: function (n) {\r\n            var result = MathHelper(function (num) { return num * 100; }, '%', n);\r\n            return result;\r\n        }\r\n    };\n\n    var string = {\r\n        e: function (str) {\r\n            return new Quoted('\"', str instanceof JavaScript ? str.evaluated : str.value, true);\r\n        },\r\n        escape: function (str) {\r\n            return new Anonymous(encodeURI(str.value).replace(/=/g, '%3D').replace(/:/g, '%3A').replace(/#/g, '%23').replace(/;/g, '%3B')\r\n                .replace(/\\(/g, '%28').replace(/\\)/g, '%29'));\r\n        },\r\n        replace: function (string, pattern, replacement, flags) {\r\n            var result = string.value;\r\n            replacement = (replacement.type === 'Quoted') ?\r\n                replacement.value : replacement.toCSS();\r\n            result = result.replace(new RegExp(pattern.value, flags ? flags.value : ''), replacement);\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        },\r\n        '%': function (string /* arg, arg, ... */) {\r\n            var args = Array.prototype.slice.call(arguments, 1);\r\n            var result = string.value;\r\n            var _loop_1 = function (i) {\r\n                /* jshint loopfunc:true */\r\n                result = result.replace(/%[sda]/i, function (token) {\r\n                    var value = ((args[i].type === 'Quoted') &&\r\n                        token.match(/s/i)) ? args[i].value : args[i].toCSS();\r\n                    return token.match(/[A-Z]$/) ? encodeURIComponent(value) : value;\r\n                });\r\n            };\r\n            for (var i = 0; i < args.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            result = result.replace(/%%/g, '%');\r\n            return new Quoted(string.quote || '', result, string.escaped);\r\n        }\r\n    };\n\n    var svg = (function (environment) {\r\n        return { 'svg-gradient': function (direction) {\r\n                var stops;\r\n                var gradientDirectionSvg;\r\n                var gradientType = 'linear';\r\n                var rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"';\r\n                var renderEnv = { compress: false };\r\n                var returner;\r\n                var directionValue = direction.toCSS(renderEnv);\r\n                var i;\r\n                var color;\r\n                var position;\r\n                var positionValue;\r\n                var alpha;\r\n                function throwArgumentDescriptor() {\r\n                    throw { type: 'Argument',\r\n                        message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' +\r\n                            ' end_color [end_position] or direction, color list' };\r\n                }\r\n                if (arguments.length == 2) {\r\n                    if (arguments[1].value.length < 2) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    stops = arguments[1].value;\r\n                }\r\n                else if (arguments.length < 3) {\r\n                    throwArgumentDescriptor();\r\n                }\r\n                else {\r\n                    stops = Array.prototype.slice.call(arguments, 1);\r\n                }\r\n                switch (directionValue) {\r\n                    case 'to bottom':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'to bottom right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\r\n                        break;\r\n                    case 'to top right':\r\n                        gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\r\n                        break;\r\n                    case 'ellipse':\r\n                    case 'ellipse at center':\r\n                        gradientType = 'radial';\r\n                        gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\r\n                        rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\r\n                        break;\r\n                    default:\r\n                        throw { type: 'Argument', message: 'svg-gradient direction must be \\'to bottom\\', \\'to right\\',' +\r\n                                ' \\'to bottom right\\', \\'to top right\\' or \\'ellipse at center\\'' };\r\n                }\r\n                returner = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 1 1\\\"><\" + gradientType + \"Gradient id=\\\"g\\\" \" + gradientDirectionSvg + \">\";\r\n                for (i = 0; i < stops.length; i += 1) {\r\n                    if (stops[i] instanceof Expression) {\r\n                        color = stops[i].value[0];\r\n                        position = stops[i].value[1];\r\n                    }\r\n                    else {\r\n                        color = stops[i];\r\n                        position = undefined;\r\n                    }\r\n                    if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\r\n                        throwArgumentDescriptor();\r\n                    }\r\n                    positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\r\n                    alpha = color.alpha;\r\n                    returner += \"<stop offset=\\\"\" + positionValue + \"\\\" stop-color=\\\"\" + color.toRGB() + \"\\\"\" + (alpha < 1 ? \" stop-opacity=\\\"\" + alpha + \"\\\"\" : '') + \"/>\";\r\n                }\r\n                returner += \"</\" + gradientType + \"Gradient><rect \" + rectangleDimension + \" fill=\\\"url(#g)\\\" /></svg>\";\r\n                returner = encodeURIComponent(returner);\r\n                returner = \"data:image/svg+xml,\" + returner;\r\n                return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\r\n            } };\r\n    });\n\n    var isa = function (n, Type) { return (n instanceof Type) ? Keyword.True : Keyword.False; };\r\n    var isunit = function (n, unit) {\r\n        if (unit === undefined) {\r\n            throw { type: 'Argument', message: 'missing the required second argument to isunit.' };\r\n        }\r\n        unit = typeof unit.value === 'string' ? unit.value : unit;\r\n        if (typeof unit !== 'string') {\r\n            throw { type: 'Argument', message: 'Second argument to isunit should be a unit or a string.' };\r\n        }\r\n        return (n instanceof Dimension) && n.unit.is(unit) ? Keyword.True : Keyword.False;\r\n    };\r\n    var types = {\r\n        isruleset: function (n) {\r\n            return isa(n, DetachedRuleset);\r\n        },\r\n        iscolor: function (n) {\r\n            return isa(n, Color);\r\n        },\r\n        isnumber: function (n) {\r\n            return isa(n, Dimension);\r\n        },\r\n        isstring: function (n) {\r\n            return isa(n, Quoted);\r\n        },\r\n        iskeyword: function (n) {\r\n            return isa(n, Keyword);\r\n        },\r\n        isurl: function (n) {\r\n            return isa(n, URL);\r\n        },\r\n        ispixel: function (n) {\r\n            return isunit(n, 'px');\r\n        },\r\n        ispercentage: function (n) {\r\n            return isunit(n, '%');\r\n        },\r\n        isem: function (n) {\r\n            return isunit(n, 'em');\r\n        },\r\n        isunit: isunit,\r\n        unit: function (val, unit) {\r\n            if (!(val instanceof Dimension)) {\r\n                throw { type: 'Argument', message: \"the first argument to unit must be a number\" + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '') };\r\n            }\r\n            if (unit) {\r\n                if (unit instanceof Keyword) {\r\n                    unit = unit.value;\r\n                }\r\n                else {\r\n                    unit = unit.toCSS();\r\n                }\r\n            }\r\n            else {\r\n                unit = '';\r\n            }\r\n            return new Dimension(val.value, unit);\r\n        },\r\n        'get-unit': function (n) {\r\n            return new Anonymous(n.unit);\r\n        }\r\n    };\n\n    var functions = (function (environment) {\r\n        var functions = { functionRegistry: functionRegistry, functionCaller: functionCaller };\r\n        // register functions\r\n        functionRegistry.addMultiple(boolean$1);\r\n        functionRegistry.add('default', defaultFunc.eval.bind(defaultFunc));\r\n        functionRegistry.addMultiple(color);\r\n        functionRegistry.addMultiple(colorBlend);\r\n        functionRegistry.addMultiple(dataUri(environment));\r\n        functionRegistry.addMultiple(list);\r\n        functionRegistry.addMultiple(mathFunctions);\r\n        functionRegistry.addMultiple(number$1);\r\n        functionRegistry.addMultiple(string);\r\n        functionRegistry.addMultiple(svg());\r\n        functionRegistry.addMultiple(types);\r\n        return functions;\r\n    });\n\n    function transformTree (root, options) {\r\n        options = options || {};\r\n        var evaldRoot;\r\n        var variables = options.variables;\r\n        var evalEnv = new contexts.Eval(options);\r\n        //\r\n        // Allows setting variables with a hash, so:\r\n        //\r\n        //   `{ color: new tree.Color('#f01') }` will become:\r\n        //\r\n        //   new tree.Declaration('@color',\r\n        //     new tree.Value([\r\n        //       new tree.Expression([\r\n        //         new tree.Color('#f01')\r\n        //       ])\r\n        //     ])\r\n        //   )\r\n        //\r\n        if (typeof variables === 'object' && !Array.isArray(variables)) {\r\n            variables = Object.keys(variables).map(function (k) {\r\n                var value = variables[k];\r\n                if (!(value instanceof tree.Value)) {\r\n                    if (!(value instanceof tree.Expression)) {\r\n                        value = new tree.Expression([value]);\r\n                    }\r\n                    value = new tree.Value([value]);\r\n                }\r\n                return new tree.Declaration(\"@\" + k, value, false, null, 0);\r\n            });\r\n            evalEnv.frames = [new tree.Ruleset(null, variables)];\r\n        }\r\n        var visitors$1 = [\r\n            new visitors.JoinSelectorVisitor(),\r\n            new visitors.MarkVisibleSelectorsVisitor(true),\r\n            new visitors.ExtendVisitor(),\r\n            new visitors.ToCSSVisitor({ compress: Boolean(options.compress) })\r\n        ];\r\n        var preEvalVisitors = [];\r\n        var v;\r\n        var visitorIterator;\r\n        /**\r\n         * first() / get() allows visitors to be added while visiting\r\n         *\r\n         * @todo Add scoping for visitors just like functions for @plugin; right now they're global\r\n         */\r\n        if (options.pluginManager) {\r\n            visitorIterator = options.pluginManager.visitor();\r\n            for (var i = 0; i < 2; i++) {\r\n                visitorIterator.first();\r\n                while ((v = visitorIterator.get())) {\r\n                    if (v.isPreEvalVisitor) {\r\n                        if (i === 0 || preEvalVisitors.indexOf(v) === -1) {\r\n                            preEvalVisitors.push(v);\r\n                            v.run(root);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (i === 0 || visitors$1.indexOf(v) === -1) {\r\n                            if (v.isPreVisitor) {\r\n                                visitors$1.unshift(v);\r\n                            }\r\n                            else {\r\n                                visitors$1.push(v);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        evaldRoot = root.eval(evalEnv);\r\n        for (var i = 0; i < visitors$1.length; i++) {\r\n            visitors$1[i].run(evaldRoot);\r\n        }\r\n        // Run any remaining visitors added after eval pass\r\n        if (options.pluginManager) {\r\n            visitorIterator.first();\r\n            while ((v = visitorIterator.get())) {\r\n                if (visitors$1.indexOf(v) === -1 && preEvalVisitors.indexOf(v) === -1) {\r\n                    v.run(evaldRoot);\r\n                }\r\n            }\r\n        }\r\n        return evaldRoot;\r\n    }\n\n    /**\r\n     * Plugin Manager\r\n     */\r\n    var PluginManager = /** @class */ (function () {\r\n        function PluginManager(less) {\r\n            this.less = less;\r\n            this.visitors = [];\r\n            this.preProcessors = [];\r\n            this.postProcessors = [];\r\n            this.installedPlugins = [];\r\n            this.fileManagers = [];\r\n            this.iterator = -1;\r\n            this.pluginCache = {};\r\n            this.Loader = new less.PluginLoader(less);\r\n        }\r\n        /**\r\n         * Adds all the plugins in the array\r\n         * @param {Array} plugins\r\n         */\r\n        PluginManager.prototype.addPlugins = function (plugins) {\r\n            if (plugins) {\r\n                for (var i = 0; i < plugins.length; i++) {\r\n                    this.addPlugin(plugins[i]);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param plugin\r\n         * @param {String} filename\r\n         */\r\n        PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\r\n            this.installedPlugins.push(plugin);\r\n            if (filename) {\r\n                this.pluginCache[filename] = plugin;\r\n            }\r\n            if (plugin.install) {\r\n                plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param filename\r\n         */\r\n        PluginManager.prototype.get = function (filename) {\r\n            return this.pluginCache[filename];\r\n        };\r\n        /**\r\n         * Adds a visitor. The visitor object has options on itself to determine\r\n         * when it should run.\r\n         * @param visitor\r\n         */\r\n        PluginManager.prototype.addVisitor = function (visitor) {\r\n            this.visitors.push(visitor);\r\n        };\r\n        /**\r\n         * Adds a pre processor object\r\n         * @param {object} preProcessor\r\n         * @param {number} priority - guidelines 1 = before import, 1000 = import, 2000 = after import\r\n         */\r\n        PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\r\n                if (this.preProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.preProcessors.splice(indexToInsertAt, 0, { preProcessor: preProcessor, priority: priority });\r\n        };\r\n        /**\r\n         * Adds a post processor object\r\n         * @param {object} postProcessor\r\n         * @param {number} priority - guidelines 1 = before compression, 1000 = compression, 2000 = after compression\r\n         */\r\n        PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\r\n            var indexToInsertAt;\r\n            for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\r\n                if (this.postProcessors[indexToInsertAt].priority >= priority) {\r\n                    break;\r\n                }\r\n            }\r\n            this.postProcessors.splice(indexToInsertAt, 0, { postProcessor: postProcessor, priority: priority });\r\n        };\r\n        /**\r\n         *\r\n         * @param manager\r\n         */\r\n        PluginManager.prototype.addFileManager = function (manager) {\r\n            this.fileManagers.push(manager);\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPreProcessors = function () {\r\n            var preProcessors = [];\r\n            for (var i = 0; i < this.preProcessors.length; i++) {\r\n                preProcessors.push(this.preProcessors[i].preProcessor);\r\n            }\r\n            return preProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getPostProcessors = function () {\r\n            var postProcessors = [];\r\n            for (var i = 0; i < this.postProcessors.length; i++) {\r\n                postProcessors.push(this.postProcessors[i].postProcessor);\r\n            }\r\n            return postProcessors;\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getVisitors = function () {\r\n            return this.visitors;\r\n        };\r\n        PluginManager.prototype.visitor = function () {\r\n            var self = this;\r\n            return {\r\n                first: function () {\r\n                    self.iterator = -1;\r\n                    return self.visitors[self.iterator];\r\n                },\r\n                get: function () {\r\n                    self.iterator += 1;\r\n                    return self.visitors[self.iterator];\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         *\r\n         * @returns {Array}\r\n         * @private\r\n         */\r\n        PluginManager.prototype.getFileManagers = function () {\r\n            return this.fileManagers;\r\n        };\r\n        return PluginManager;\r\n    }());\r\n    var pm;\r\n    var PluginManagerFactory = function (less, newFactory) {\r\n        if (newFactory || !pm) {\r\n            pm = new PluginManager(less);\r\n        }\r\n        return pm;\r\n    };\n\n    function SourceMapOutput (environment) {\r\n        var SourceMapOutput = /** @class */ (function () {\r\n            function SourceMapOutput(options) {\r\n                this._css = [];\r\n                this._rootNode = options.rootNode;\r\n                this._contentsMap = options.contentsMap;\r\n                this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\r\n                if (options.sourceMapFilename) {\r\n                    this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\r\n                }\r\n                this._outputFilename = options.outputFilename;\r\n                this.sourceMapURL = options.sourceMapURL;\r\n                if (options.sourceMapBasepath) {\r\n                    this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\r\n                }\r\n                if (options.sourceMapRootpath) {\r\n                    this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\r\n                    if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\r\n                        this._sourceMapRootpath += '/';\r\n                    }\r\n                }\r\n                else {\r\n                    this._sourceMapRootpath = '';\r\n                }\r\n                this._outputSourceFiles = options.outputSourceFiles;\r\n                this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\r\n                this._lineNumber = 0;\r\n                this._column = 0;\r\n            }\r\n            SourceMapOutput.prototype.removeBasepath = function (path) {\r\n                if (this._sourceMapBasepath && path.indexOf(this._sourceMapBasepath) === 0) {\r\n                    path = path.substring(this._sourceMapBasepath.length);\r\n                    if (path.charAt(0) === '\\\\' || path.charAt(0) === '/') {\r\n                        path = path.substring(1);\r\n                    }\r\n                }\r\n                return path;\r\n            };\r\n            SourceMapOutput.prototype.normalizeFilename = function (filename) {\r\n                filename = filename.replace(/\\\\/g, '/');\r\n                filename = this.removeBasepath(filename);\r\n                return (this._sourceMapRootpath || '') + filename;\r\n            };\r\n            SourceMapOutput.prototype.add = function (chunk, fileInfo, index, mapLines) {\r\n                // ignore adding empty strings\r\n                if (!chunk) {\r\n                    return;\r\n                }\r\n                var lines, sourceLines, columns, sourceColumns, i;\r\n                if (fileInfo && fileInfo.filename) {\r\n                    var inputSource = this._contentsMap[fileInfo.filename];\r\n                    // remove vars/banner added to the top of the file\r\n                    if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\r\n                        // adjust the index\r\n                        index -= this._contentsIgnoredCharsMap[fileInfo.filename];\r\n                        if (index < 0) {\r\n                            index = 0;\r\n                        }\r\n                        // adjust the source\r\n                        inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\r\n                    }\r\n                    /**\r\n                     * ignore empty content, or failsafe\r\n                     * if contents map is incorrect\r\n                     */\r\n                    if (inputSource === undefined) {\r\n                        this._css.push(chunk);\r\n                        return;\r\n                    }\r\n                    inputSource = inputSource.substring(0, index);\r\n                    sourceLines = inputSource.split('\\n');\r\n                    sourceColumns = sourceLines[sourceLines.length - 1];\r\n                }\r\n                lines = chunk.split('\\n');\r\n                columns = lines[lines.length - 1];\r\n                if (fileInfo && fileInfo.filename) {\r\n                    if (!mapLines) {\r\n                        this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column },\r\n                            original: { line: sourceLines.length, column: sourceColumns.length },\r\n                            source: this.normalizeFilename(fileInfo.filename) });\r\n                    }\r\n                    else {\r\n                        for (i = 0; i < lines.length; i++) {\r\n                            this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0 },\r\n                                original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0 },\r\n                                source: this.normalizeFilename(fileInfo.filename) });\r\n                        }\r\n                    }\r\n                }\r\n                if (lines.length === 1) {\r\n                    this._column += columns.length;\r\n                }\r\n                else {\r\n                    this._lineNumber += lines.length - 1;\r\n                    this._column = columns.length;\r\n                }\r\n                this._css.push(chunk);\r\n            };\r\n            SourceMapOutput.prototype.isEmpty = function () {\r\n                return this._css.length === 0;\r\n            };\r\n            SourceMapOutput.prototype.toCSS = function (context) {\r\n                this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\r\n                if (this._outputSourceFiles) {\r\n                    for (var filename in this._contentsMap) {\r\n                        if (this._contentsMap.hasOwnProperty(filename)) {\r\n                            var source = this._contentsMap[filename];\r\n                            if (this._contentsIgnoredCharsMap[filename]) {\r\n                                source = source.slice(this._contentsIgnoredCharsMap[filename]);\r\n                            }\r\n                            this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\r\n                        }\r\n                    }\r\n                }\r\n                this._rootNode.genCSS(context, this);\r\n                if (this._css.length > 0) {\r\n                    var sourceMapURL = void 0;\r\n                    var sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\r\n                    if (this.sourceMapURL) {\r\n                        sourceMapURL = this.sourceMapURL;\r\n                    }\r\n                    else if (this._sourceMapFilename) {\r\n                        sourceMapURL = this._sourceMapFilename;\r\n                    }\r\n                    this.sourceMapURL = sourceMapURL;\r\n                    this.sourceMap = sourceMapContent;\r\n                }\r\n                return this._css.join('');\r\n            };\r\n            return SourceMapOutput;\r\n        }());\r\n        return SourceMapOutput;\r\n    }\n\n    function SourceMapBuilder (SourceMapOutput, environment) {\r\n        var SourceMapBuilder = /** @class */ (function () {\r\n            function SourceMapBuilder(options) {\r\n                this.options = options;\r\n            }\r\n            SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\r\n                var sourceMapOutput = new SourceMapOutput({\r\n                    contentsIgnoredCharsMap: imports.contentsIgnoredChars,\r\n                    rootNode: rootNode,\r\n                    contentsMap: imports.contents,\r\n                    sourceMapFilename: this.options.sourceMapFilename,\r\n                    sourceMapURL: this.options.sourceMapURL,\r\n                    outputFilename: this.options.sourceMapOutputFilename,\r\n                    sourceMapBasepath: this.options.sourceMapBasepath,\r\n                    sourceMapRootpath: this.options.sourceMapRootpath,\r\n                    outputSourceFiles: this.options.outputSourceFiles,\r\n                    sourceMapGenerator: this.options.sourceMapGenerator,\r\n                    sourceMapFileInline: this.options.sourceMapFileInline,\r\n                    disableSourcemapAnnotation: this.options.disableSourcemapAnnotation\r\n                });\r\n                var css = sourceMapOutput.toCSS(options);\r\n                this.sourceMap = sourceMapOutput.sourceMap;\r\n                this.sourceMapURL = sourceMapOutput.sourceMapURL;\r\n                if (this.options.sourceMapInputFilename) {\r\n                    this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\r\n                }\r\n                if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\r\n                    this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\r\n                }\r\n                return css + this.getCSSAppendage();\r\n            };\r\n            SourceMapBuilder.prototype.getCSSAppendage = function () {\r\n                var sourceMapURL = this.sourceMapURL;\r\n                if (this.options.sourceMapFileInline) {\r\n                    if (this.sourceMap === undefined) {\r\n                        return '';\r\n                    }\r\n                    sourceMapURL = \"data:application/json;base64,\" + environment.encodeBase64(this.sourceMap);\r\n                }\r\n                if (this.options.disableSourcemapAnnotation) {\r\n                    return '';\r\n                }\r\n                if (sourceMapURL) {\r\n                    return \"/*# sourceMappingURL=\" + sourceMapURL + \" */\";\r\n                }\r\n                return '';\r\n            };\r\n            SourceMapBuilder.prototype.getExternalSourceMap = function () {\r\n                return this.sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\r\n                this.sourceMap = sourceMap;\r\n            };\r\n            SourceMapBuilder.prototype.isInline = function () {\r\n                return this.options.sourceMapFileInline;\r\n            };\r\n            SourceMapBuilder.prototype.getSourceMapURL = function () {\r\n                return this.sourceMapURL;\r\n            };\r\n            SourceMapBuilder.prototype.getOutputFilename = function () {\r\n                return this.options.sourceMapOutputFilename;\r\n            };\r\n            SourceMapBuilder.prototype.getInputFilename = function () {\r\n                return this.sourceMapInputFilename;\r\n            };\r\n            return SourceMapBuilder;\r\n        }());\r\n        return SourceMapBuilder;\r\n    }\n\n    function ParseTree (SourceMapBuilder) {\r\n        var ParseTree = /** @class */ (function () {\r\n            function ParseTree(root, imports) {\r\n                this.root = root;\r\n                this.imports = imports;\r\n            }\r\n            ParseTree.prototype.toCSS = function (options) {\r\n                var evaldRoot;\r\n                var result = {};\r\n                var sourceMapBuilder;\r\n                try {\r\n                    evaldRoot = transformTree(this.root, options);\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                try {\r\n                    var compress = Boolean(options.compress);\r\n                    if (compress) {\r\n                        logger.warn('The compress option has been deprecated. ' +\r\n                            'We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.');\r\n                    }\r\n                    var toCSSOptions = {\r\n                        compress: compress,\r\n                        dumpLineNumbers: options.dumpLineNumbers,\r\n                        strictUnits: Boolean(options.strictUnits),\r\n                        numPrecision: 8\r\n                    };\r\n                    if (options.sourceMap) {\r\n                        sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\r\n                        result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\r\n                    }\r\n                    else {\r\n                        result.css = evaldRoot.toCSS(toCSSOptions);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    throw new LessError(e, this.imports);\r\n                }\r\n                if (options.pluginManager) {\r\n                    var postProcessors = options.pluginManager.getPostProcessors();\r\n                    for (var i = 0; i < postProcessors.length; i++) {\r\n                        result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\r\n                    }\r\n                }\r\n                if (options.sourceMap) {\r\n                    result.map = sourceMapBuilder.getExternalSourceMap();\r\n                }\r\n                result.imports = [];\r\n                for (var file in this.imports.files) {\r\n                    if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\r\n                        result.imports.push(file);\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            return ParseTree;\r\n        }());\r\n        return ParseTree;\r\n    }\n\n    function ImportManager (environment) {\r\n        // FileInfo = {\r\n        //  'rewriteUrls' - option - whether to adjust URL's to be relative\r\n        //  'filename' - full resolved filename of current file\r\n        //  'rootpath' - path to append to normal URLs for this node\r\n        //  'currentDirectory' - path to the current file, absolute\r\n        //  'rootFilename' - filename of the base file\r\n        //  'entryPath' - absolute path to the entry file\r\n        //  'reference' - whether the file should not be output and only output parts that are referenced\r\n        var ImportManager = /** @class */ (function () {\r\n            function ImportManager(less, context, rootFileInfo) {\r\n                this.less = less;\r\n                this.rootFilename = rootFileInfo.filename;\r\n                this.paths = context.paths || []; // Search paths, when importing\r\n                this.contents = {}; // map - filename to contents of all the files\r\n                this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\r\n                this.mime = context.mime;\r\n                this.error = null;\r\n                this.context = context;\r\n                // Deprecated? Unused outside of here, could be useful.\r\n                this.queue = []; // Files which haven't been imported yet\r\n                this.files = {}; // Holds the imported parse trees.\r\n            }\r\n            /**\r\n             * Add an import to be imported\r\n             * @param path - the raw path\r\n             * @param tryAppendExtension - whether to try appending a file extension (.less or .js if the path has no extension)\r\n             * @param currentFileInfo - the current file info (used for instance to work out relative paths)\r\n             * @param importOptions - import options\r\n             * @param callback - callback for when it is imported\r\n             */\r\n            ImportManager.prototype.push = function (path, tryAppendExtension, currentFileInfo, importOptions, callback) {\r\n                var importManager = this, pluginLoader = this.context.pluginManager.Loader;\r\n                this.queue.push(path);\r\n                var fileParsedFunc = function (e, root, fullPath) {\r\n                    importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\r\n                    var importedEqualsRoot = fullPath === importManager.rootFilename;\r\n                    if (importOptions.optional && e) {\r\n                        callback(null, { rules: [] }, false, null);\r\n                        logger.info(\"The file \" + fullPath + \" was skipped because it was not found and the import was marked optional.\");\r\n                    }\r\n                    else {\r\n                        // Inline imports aren't cached here.\r\n                        // If we start to cache them, please make sure they won't conflict with non-inline imports of the\r\n                        // same name as they used to do before this comment and the condition below have been added.\r\n                        if (!importManager.files[fullPath] && !importOptions.inline) {\r\n                            importManager.files[fullPath] = { root: root, options: importOptions };\r\n                        }\r\n                        if (e && !importManager.error) {\r\n                            importManager.error = e;\r\n                        }\r\n                        callback(e, root, importedEqualsRoot, fullPath);\r\n                    }\r\n                };\r\n                var newFileInfo = {\r\n                    rewriteUrls: this.context.rewriteUrls,\r\n                    entryPath: currentFileInfo.entryPath,\r\n                    rootpath: currentFileInfo.rootpath,\r\n                    rootFilename: currentFileInfo.rootFilename\r\n                };\r\n                var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\r\n                if (!fileManager) {\r\n                    fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\r\n                    return;\r\n                }\r\n                var loadFileCallback = function (loadedFile) {\r\n                    var plugin;\r\n                    var resolvedFilename = loadedFile.filename;\r\n                    var contents = loadedFile.contents.replace(/^\\uFEFF/, '');\r\n                    // Pass on an updated rootpath if path of imported file is relative and file\r\n                    // is in a (sub|sup) directory\r\n                    //\r\n                    // Examples:\r\n                    // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/module/nav/'\r\n                    // - If path of imported file is '../mixins.less' and rootpath is 'less/',\r\n                    //   then rootpath should become 'less/../'\r\n                    newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\r\n                    if (newFileInfo.rewriteUrls) {\r\n                        newFileInfo.rootpath = fileManager.join((importManager.context.rootpath || ''), fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\r\n                        if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\r\n                            newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\r\n                        }\r\n                    }\r\n                    newFileInfo.filename = resolvedFilename;\r\n                    var newEnv = new contexts.Parse(importManager.context);\r\n                    newEnv.processImports = false;\r\n                    importManager.contents[resolvedFilename] = contents;\r\n                    if (currentFileInfo.reference || importOptions.reference) {\r\n                        newFileInfo.reference = true;\r\n                    }\r\n                    if (importOptions.isPlugin) {\r\n                        plugin = pluginLoader.evalPlugin(contents, newEnv, importManager, importOptions.pluginArgs, newFileInfo);\r\n                        if (plugin instanceof LessError) {\r\n                            fileParsedFunc(plugin, null, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            fileParsedFunc(null, plugin, resolvedFilename);\r\n                        }\r\n                    }\r\n                    else if (importOptions.inline) {\r\n                        fileParsedFunc(null, contents, resolvedFilename);\r\n                    }\r\n                    else {\r\n                        // import (multiple) parse trees apparently get altered and can't be cached.\r\n                        // TODO: investigate why this is\r\n                        if (importManager.files[resolvedFilename]\r\n                            && !importManager.files[resolvedFilename].options.multiple\r\n                            && !importOptions.multiple) {\r\n                            fileParsedFunc(null, importManager.files[resolvedFilename].root, resolvedFilename);\r\n                        }\r\n                        else {\r\n                            new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\r\n                                fileParsedFunc(e, root, resolvedFilename);\r\n                            });\r\n                        }\r\n                    }\r\n                };\r\n                var loadedFile;\r\n                var promise;\r\n                var context = clone(this.context);\r\n                if (tryAppendExtension) {\r\n                    context.ext = importOptions.isPlugin ? '.js' : '.less';\r\n                }\r\n                if (importOptions.isPlugin) {\r\n                    context.mime = 'application/javascript';\r\n                    if (context.syncImport) {\r\n                        loadedFile = pluginLoader.loadPluginSync(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                    else {\r\n                        promise = pluginLoader.loadPlugin(path, currentFileInfo.currentDirectory, context, environment, fileManager);\r\n                    }\r\n                }\r\n                else {\r\n                    if (context.syncImport) {\r\n                        loadedFile = fileManager.loadFileSync(path, currentFileInfo.currentDirectory, context, environment);\r\n                    }\r\n                    else {\r\n                        promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, context, environment, function (err, loadedFile) {\r\n                            if (err) {\r\n                                fileParsedFunc(err);\r\n                            }\r\n                            else {\r\n                                loadFileCallback(loadedFile);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                if (loadedFile) {\r\n                    if (!loadedFile.filename) {\r\n                        fileParsedFunc(loadedFile);\r\n                    }\r\n                    else {\r\n                        loadFileCallback(loadedFile);\r\n                    }\r\n                }\r\n                else if (promise) {\r\n                    promise.then(loadFileCallback, fileParsedFunc);\r\n                }\r\n            };\r\n            return ImportManager;\r\n        }());\r\n        return ImportManager;\r\n    }\n\n    function Parse (environment, ParseTree, ImportManager) {\r\n        var parse = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    parse.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                var context_1;\r\n                var rootFileInfo = void 0;\r\n                var pluginManager_1 = new PluginManagerFactory(this, !options.reUsePluginManager);\r\n                options.pluginManager = pluginManager_1;\r\n                context_1 = new contexts.Parse(options);\r\n                if (options.rootFileInfo) {\r\n                    rootFileInfo = options.rootFileInfo;\r\n                }\r\n                else {\r\n                    var filename = options.filename || 'input';\r\n                    var entryPath = filename.replace(/[^\\/\\\\]*$/, '');\r\n                    rootFileInfo = {\r\n                        filename: filename,\r\n                        rewriteUrls: context_1.rewriteUrls,\r\n                        rootpath: context_1.rootpath || '',\r\n                        currentDirectory: entryPath,\r\n                        entryPath: entryPath,\r\n                        rootFilename: filename\r\n                    };\r\n                    // add in a missing trailing slash\r\n                    if (rootFileInfo.rootpath && rootFileInfo.rootpath.slice(-1) !== '/') {\r\n                        rootFileInfo.rootpath += '/';\r\n                    }\r\n                }\r\n                var imports_1 = new ImportManager(this, context_1, rootFileInfo);\r\n                this.importManager = imports_1;\r\n                // TODO: allow the plugins to be just a list of paths or names\r\n                // Do an async plugin queue like lessc\r\n                if (options.plugins) {\r\n                    options.plugins.forEach(function (plugin) {\r\n                        var evalResult, contents;\r\n                        if (plugin.fileContent) {\r\n                            contents = plugin.fileContent.replace(/^\\uFEFF/, '');\r\n                            evalResult = pluginManager_1.Loader.evalPlugin(contents, context_1, imports_1, plugin.options, plugin.filename);\r\n                            if (evalResult instanceof LessError) {\r\n                                return callback(evalResult);\r\n                            }\r\n                        }\r\n                        else {\r\n                            pluginManager_1.addPlugin(plugin);\r\n                        }\r\n                    });\r\n                }\r\n                new Parser(context_1, imports_1, rootFileInfo)\r\n                    .parse(input, function (e, root) {\r\n                    if (e) {\r\n                        return callback(e);\r\n                    }\r\n                    callback(null, root, imports_1, options);\r\n                }, options);\r\n            }\r\n        };\r\n        return parse;\r\n    }\n\n    function Render (environment, ParseTree, ImportManager) {\r\n        var render = function (input, options, callback) {\r\n            if (typeof options === 'function') {\r\n                callback = options;\r\n                options = copyOptions(this.options, {});\r\n            }\r\n            else {\r\n                options = copyOptions(this.options, options || {});\r\n            }\r\n            if (!callback) {\r\n                var self_1 = this;\r\n                return new Promise(function (resolve, reject) {\r\n                    render.call(self_1, input, options, function (err, output) {\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                        else {\r\n                            resolve(output);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this.parse(input, options, function (err, root, imports, options) {\r\n                    if (err) {\r\n                        return callback(err);\r\n                    }\r\n                    var result;\r\n                    try {\r\n                        var parseTree = new ParseTree(root, imports);\r\n                        result = parseTree.toCSS(options);\r\n                    }\r\n                    catch (err) {\r\n                        return callback(err);\r\n                    }\r\n                    callback(null, result);\r\n                });\r\n            }\r\n        };\r\n        return render;\r\n    }\n\n    var version = \"4.1.1\";\n\n    function parseNodeVersion(version) {\n      var match = version.match(/^v(\\d{1,2})\\.(\\d{1,2})\\.(\\d{1,2})(?:-([0-9A-Za-z-.]+))?(?:\\+([0-9A-Za-z-.]+))?$/); // eslint-disable-line max-len\n      if (!match) {\n        throw new Error('Unable to parse: ' + version);\n      }\n\n      var res = {\n        major: parseInt(match[1], 10),\n        minor: parseInt(match[2], 10),\n        patch: parseInt(match[3], 10),\n        pre: match[4] || '',\n        build: match[5] || '',\n      };\n\n      return res;\n    }\n\n    var parseNodeVersion_1 = parseNodeVersion;\n\n    function lessRoot (environment, fileManagers) {\r\n        var sourceMapOutput, sourceMapBuilder, parseTree, importManager;\r\n        environment = new Environment(environment, fileManagers);\r\n        sourceMapOutput = SourceMapOutput(environment);\r\n        sourceMapBuilder = SourceMapBuilder(sourceMapOutput, environment);\r\n        parseTree = ParseTree(sourceMapBuilder);\r\n        importManager = ImportManager(environment);\r\n        var render = Render(environment, parseTree);\r\n        var parse = Parse(environment, parseTree, importManager);\r\n        var v = parseNodeVersion_1(\"v\" + version);\r\n        var initial = {\r\n            version: [v.major, v.minor, v.patch],\r\n            data: data,\r\n            tree: tree,\r\n            Environment: Environment,\r\n            AbstractFileManager: AbstractFileManager,\r\n            AbstractPluginLoader: AbstractPluginLoader,\r\n            environment: environment,\r\n            visitors: visitors,\r\n            Parser: Parser,\r\n            functions: functions(environment),\r\n            contexts: contexts,\r\n            SourceMapOutput: sourceMapOutput,\r\n            SourceMapBuilder: sourceMapBuilder,\r\n            ParseTree: parseTree,\r\n            ImportManager: importManager,\r\n            render: render,\r\n            parse: parse,\r\n            LessError: LessError,\r\n            transformTree: transformTree,\r\n            utils: utils,\r\n            PluginManager: PluginManagerFactory,\r\n            logger: logger\r\n        };\r\n        // Create a public API\r\n        var ctor = function (t) {\r\n            return function () {\r\n                var obj = Object.create(t.prototype);\r\n                t.apply(obj, Array.prototype.slice.call(arguments, 0));\r\n                return obj;\r\n            };\r\n        };\r\n        var t;\r\n        var api = Object.create(initial);\r\n        for (var n in initial.tree) {\r\n            /* eslint guard-for-in: 0 */\r\n            t = initial.tree[n];\r\n            if (typeof t === 'function') {\r\n                api[n.toLowerCase()] = ctor(t);\r\n            }\r\n            else {\r\n                api[n] = Object.create(null);\r\n                for (var o in t) {\r\n                    /* eslint guard-for-in: 0 */\r\n                    api[n][o.toLowerCase()] = ctor(t[o]);\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Some of the functions assume a `this` context of the API object,\r\n         * which causes it to fail when wrapped for ES6 imports.\r\n         *\r\n         * An assumed `this` should be removed in the future.\r\n         */\r\n        initial.parse = initial.parse.bind(api);\r\n        initial.render = initial.render.bind(api);\r\n        return api;\r\n    }\n\n    /* global window, XMLHttpRequest */\r\n    var options;\r\n    var logger$1;\r\n    var fileCache = {};\r\n    // TODOS - move log somewhere. pathDiff and doing something similar in node. use pathDiff in the other browser file for the initial load\r\n    var FileManager = function () { };\r\n    FileManager.prototype = Object.assign(new AbstractFileManager(), {\r\n        alwaysMakePathsAbsolute: function () {\r\n            return true;\r\n        },\r\n        join: function (basePath, laterPath) {\r\n            if (!basePath) {\r\n                return laterPath;\r\n            }\r\n            return this.extractUrlParts(laterPath, basePath).path;\r\n        },\r\n        doXHR: function (url, type, callback, errback) {\r\n            var xhr = new XMLHttpRequest();\r\n            var async = options.isFileProtocol ? options.fileAsync : true;\r\n            if (typeof xhr.overrideMimeType === 'function') {\r\n                xhr.overrideMimeType('text/css');\r\n            }\r\n            logger$1.debug(\"XHR: Getting '\" + url + \"'\");\r\n            xhr.open('GET', url, async);\r\n            xhr.setRequestHeader('Accept', type || 'text/x-less, text/css; q=0.9, */*; q=0.5');\r\n            xhr.send(null);\r\n            function handleResponse(xhr, callback, errback) {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    callback(xhr.responseText, xhr.getResponseHeader('Last-Modified'));\r\n                }\r\n                else if (typeof errback === 'function') {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            if (options.isFileProtocol && !options.fileAsync) {\r\n                if (xhr.status === 0 || (xhr.status >= 200 && xhr.status < 300)) {\r\n                    callback(xhr.responseText);\r\n                }\r\n                else {\r\n                    errback(xhr.status, url);\r\n                }\r\n            }\r\n            else if (async) {\r\n                xhr.onreadystatechange = function () {\r\n                    if (xhr.readyState == 4) {\r\n                        handleResponse(xhr, callback, errback);\r\n                    }\r\n                };\r\n            }\r\n            else {\r\n                handleResponse(xhr, callback, errback);\r\n            }\r\n        },\r\n        supports: function () {\r\n            return true;\r\n        },\r\n        clearFileCache: function () {\r\n            fileCache = {};\r\n        },\r\n        loadFile: function (filename, currentDirectory, options, environment) {\r\n            // TODO: Add prefix support like less-node?\r\n            // What about multiple paths?\r\n            if (currentDirectory && !this.isPathAbsolute(filename)) {\r\n                filename = currentDirectory + filename;\r\n            }\r\n            filename = options.ext ? this.tryAppendExtension(filename, options.ext) : filename;\r\n            options = options || {};\r\n            // sheet may be set to the stylesheet for the initial load or a collection of properties including\r\n            // some context variables for imports\r\n            var hrefParts = this.extractUrlParts(filename, window.location.href);\r\n            var href = hrefParts.url;\r\n            var self = this;\r\n            return new Promise(function (resolve, reject) {\r\n                if (options.useFileCache && fileCache[href]) {\r\n                    try {\r\n                        var lessText = fileCache[href];\r\n                        return resolve({ contents: lessText, filename: href, webInfo: { lastModified: new Date() } });\r\n                    }\r\n                    catch (e) {\r\n                        return reject({ filename: href, message: \"Error loading file \" + href + \" error was \" + e.message });\r\n                    }\r\n                }\r\n                self.doXHR(href, options.mime, function doXHRCallback(data, lastModified) {\r\n                    // per file cache\r\n                    fileCache[href] = data;\r\n                    // Use remote copy (re-parse)\r\n                    resolve({ contents: data, filename: href, webInfo: { lastModified: lastModified } });\r\n                }, function doXHRError(status, url) {\r\n                    reject({ type: 'File', message: \"'\" + url + \"' wasn't found (\" + status + \")\", href: href });\r\n                });\r\n            });\r\n        }\r\n    });\r\n    var FM = (function (opts, log) {\r\n        options = opts;\r\n        logger$1 = log;\r\n        return FileManager;\r\n    });\n\n    // TODO: Add tests for browser @plugin\r\n    /**\r\n     * Browser Plugin Loader\r\n     */\r\n    var PluginLoader = function (less) {\r\n        this.less = less;\r\n        // Should we shim this.require for browser? Probably not?\r\n    };\r\n    PluginLoader.prototype = Object.assign(new AbstractPluginLoader(), {\r\n        loadPlugin: function (filename, basePath, context, environment, fileManager) {\r\n            return new Promise(function (fulfill, reject) {\r\n                fileManager.loadFile(filename, basePath, context, environment)\r\n                    .then(fulfill).catch(reject);\r\n            });\r\n        }\r\n    });\n\n    var LogListener = (function (less, options) {\r\n        var logLevel_debug = 4;\r\n        var logLevel_info = 3;\r\n        var logLevel_warn = 2;\r\n        var logLevel_error = 1;\r\n        // The amount of logging in the javascript console.\r\n        // 3 - Debug, information and errors\r\n        // 2 - Information and errors\r\n        // 1 - Errors\r\n        // 0 - None\r\n        // Defaults to 2\r\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : (options.env === 'development' ? logLevel_info : logLevel_error);\r\n        if (!options.loggers) {\r\n            options.loggers = [{\r\n                    debug: function (msg) {\r\n                        if (options.logLevel >= logLevel_debug) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    info: function (msg) {\r\n                        if (options.logLevel >= logLevel_info) {\r\n                            console.log(msg);\r\n                        }\r\n                    },\r\n                    warn: function (msg) {\r\n                        if (options.logLevel >= logLevel_warn) {\r\n                            console.warn(msg);\r\n                        }\r\n                    },\r\n                    error: function (msg) {\r\n                        if (options.logLevel >= logLevel_error) {\r\n                            console.error(msg);\r\n                        }\r\n                    }\r\n                }];\r\n        }\r\n        for (var i = 0; i < options.loggers.length; i++) {\r\n            less.logger.addListener(options.loggers[i]);\r\n        }\r\n    });\n\n    var ErrorReporting = (function (window, less, options) {\r\n        function errorHTML(e, rootHref) {\r\n            var id = \"less-error-message:\" + extractId(rootHref || '');\r\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\r\n            var elem = window.document.createElement('div');\r\n            var timer;\r\n            var content;\r\n            var errors = [];\r\n            var filename = e.filename || rootHref;\r\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\r\n            elem.id = id;\r\n            elem.className = 'less-error-message';\r\n            content = \"<h3>\" + (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') +\r\n                (\"</h3><p>in <a href=\\\"\" + filename + \"\\\">\" + filenameNoPath + \"</a> \");\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \"on line \" + e.line + \", column \" + (e.column + 1) + \":</p><ul>\" + errors.join('') + \"</ul>\";\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"<br/>Stack Trace</br />\" + e.stack.split('\\n').slice(1).join('<br/>');\r\n            }\r\n            elem.innerHTML = content;\r\n            // CSS for error messages\r\n            browser.createCSS(window.document, [\r\n                '.less-error-message ul, .less-error-message li {',\r\n                'list-style-type: none;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message label {',\r\n                'font-size: 12px;',\r\n                'margin-right: 15px;',\r\n                'padding: 4px 0;',\r\n                'color: #cc7777;',\r\n                '}',\r\n                '.less-error-message pre {',\r\n                'color: #dd6666;',\r\n                'padding: 4px 0;',\r\n                'margin: 0;',\r\n                'display: inline-block;',\r\n                '}',\r\n                '.less-error-message pre.line {',\r\n                'color: #ff0000;',\r\n                '}',\r\n                '.less-error-message h3 {',\r\n                'font-size: 20px;',\r\n                'font-weight: bold;',\r\n                'padding: 15px 0 5px 0;',\r\n                'margin: 0;',\r\n                '}',\r\n                '.less-error-message a {',\r\n                'color: #10a',\r\n                '}',\r\n                '.less-error-message .error {',\r\n                'color: red;',\r\n                'font-weight: bold;',\r\n                'padding-bottom: 2px;',\r\n                'border-bottom: 1px dashed red;',\r\n                '}'\r\n            ].join('\\n'), { title: 'error-message' });\r\n            elem.style.cssText = [\r\n                'font-family: Arial, sans-serif',\r\n                'border: 1px solid #e00',\r\n                'background-color: #eee',\r\n                'border-radius: 5px',\r\n                '-webkit-border-radius: 5px',\r\n                '-moz-border-radius: 5px',\r\n                'color: #e00',\r\n                'padding: 15px',\r\n                'margin-bottom: 15px'\r\n            ].join(';');\r\n            if (options.env === 'development') {\r\n                timer = setInterval(function () {\r\n                    var document = window.document;\r\n                    var body = document.body;\r\n                    if (body) {\r\n                        if (document.getElementById(id)) {\r\n                            body.replaceChild(elem, document.getElementById(id));\r\n                        }\r\n                        else {\r\n                            body.insertBefore(elem, body.firstChild);\r\n                        }\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        function removeErrorHTML(path) {\r\n            var node = window.document.getElementById(\"less-error-message:\" + extractId(path));\r\n            if (node) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n        function removeError(path) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                removeErrorHTML(path);\r\n            }\r\n            else if (options.errorReporting === 'console') ;\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('remove', path);\r\n            }\r\n        }\r\n        function errorConsole(e, rootHref) {\r\n            var template = '{line} {content}';\r\n            var filename = e.filename || rootHref;\r\n            var errors = [];\r\n            var content = (e.type || 'Syntax') + \"Error: \" + (e.message || 'There is an error in your .less file') + \" in \" + filename;\r\n            var errorline = function (e, i, classname) {\r\n                if (e.extract[i] !== undefined) {\r\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1))\r\n                        .replace(/\\{class\\}/, classname)\r\n                        .replace(/\\{content\\}/, e.extract[i]));\r\n                }\r\n            };\r\n            if (e.line) {\r\n                errorline(e, 0, '');\r\n                errorline(e, 1, 'line');\r\n                errorline(e, 2, '');\r\n                content += \" on line \" + e.line + \", column \" + (e.column + 1) + \":\\n\" + errors.join('\\n');\r\n            }\r\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\r\n                content += \"\\nStack Trace\\n\" + e.stack;\r\n            }\r\n            less.logger.error(content);\r\n        }\r\n        function error(e, rootHref) {\r\n            if (!options.errorReporting || options.errorReporting === 'html') {\r\n                errorHTML(e, rootHref);\r\n            }\r\n            else if (options.errorReporting === 'console') {\r\n                errorConsole(e, rootHref);\r\n            }\r\n            else if (typeof options.errorReporting === 'function') {\r\n                options.errorReporting('add', e, rootHref);\r\n            }\r\n        }\r\n        return {\r\n            add: error,\r\n            remove: removeError\r\n        };\r\n    });\n\n    // Cache system is a bit outdated and could do with work\r\n    var Cache = (function (window, options, logger) {\r\n        var cache = null;\r\n        if (options.env !== 'development') {\r\n            try {\r\n                cache = (typeof window.localStorage === 'undefined') ? null : window.localStorage;\r\n            }\r\n            catch (_) { }\r\n        }\r\n        return {\r\n            setCSS: function (path, lastModified, modifyVars, styles) {\r\n                if (cache) {\r\n                    logger.info(\"saving \" + path + \" to cache.\");\r\n                    try {\r\n                        cache.setItem(path, styles);\r\n                        cache.setItem(path + \":timestamp\", lastModified);\r\n                        if (modifyVars) {\r\n                            cache.setItem(path + \":vars\", JSON.stringify(modifyVars));\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // TODO - could do with adding more robust error handling\r\n                        logger.error(\"failed to save \\\"\" + path + \"\\\" to local storage for caching.\");\r\n                    }\r\n                }\r\n            },\r\n            getCSS: function (path, webInfo, modifyVars) {\r\n                var css = cache && cache.getItem(path);\r\n                var timestamp = cache && cache.getItem(path + \":timestamp\");\r\n                var vars = cache && cache.getItem(path + \":vars\");\r\n                modifyVars = modifyVars || {};\r\n                vars = vars || \"{}\"; // if not set, treat as the JSON representation of an empty object\r\n                if (timestamp && webInfo.lastModified &&\r\n                    (new Date(webInfo.lastModified).valueOf() ===\r\n                        new Date(timestamp).valueOf()) &&\r\n                    JSON.stringify(modifyVars) === vars) {\r\n                    // Use local copy\r\n                    return css;\r\n                }\r\n            }\r\n        };\r\n    });\n\n    var ImageSize = (function () {\r\n        function imageSize() {\r\n            throw {\r\n                type: 'Runtime',\r\n                message: 'Image size functions are not supported in browser version of less'\r\n            };\r\n        }\r\n        var imageFunctions = {\r\n            'image-size': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-width': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            },\r\n            'image-height': function (filePathNode) {\r\n                imageSize();\r\n                return -1;\r\n            }\r\n        };\r\n        functionRegistry.addMultiple(imageFunctions);\r\n    });\n\n    //\r\n    var root = (function (window, options) {\r\n        var document = window.document;\r\n        var less = lessRoot();\r\n        less.options = options;\r\n        var environment = less.environment;\r\n        var FileManager = FM(options, less.logger);\r\n        var fileManager = new FileManager();\r\n        environment.addFileManager(fileManager);\r\n        less.FileManager = FileManager;\r\n        less.PluginLoader = PluginLoader;\r\n        LogListener(less, options);\r\n        var errors = ErrorReporting(window, less, options);\r\n        var cache = less.cache = options.cache || Cache(window, options, less.logger);\r\n        ImageSize(less.environment);\r\n        // Setup user functions - Deprecate?\r\n        if (options.functions) {\r\n            less.functions.functionRegistry.addMultiple(options.functions);\r\n        }\r\n        var typePattern = /^text\\/(x-)?less$/;\r\n        function clone(obj) {\r\n            var cloned = {};\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    cloned[prop] = obj[prop];\r\n                }\r\n            }\r\n            return cloned;\r\n        }\r\n        // only really needed for phantom\r\n        function bind(func, thisArg) {\r\n            var curryArgs = Array.prototype.slice.call(arguments, 2);\r\n            return function () {\r\n                var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\r\n                return func.apply(thisArg, args);\r\n            };\r\n        }\r\n        function loadStyles(modifyVars) {\r\n            var styles = document.getElementsByTagName('style');\r\n            var style;\r\n            for (var i = 0; i < styles.length; i++) {\r\n                style = styles[i];\r\n                if (style.type.match(typePattern)) {\r\n                    var instanceOptions = clone(options);\r\n                    instanceOptions.modifyVars = modifyVars;\r\n                    var lessText = style.innerHTML || '';\r\n                    instanceOptions.filename = document.location.href.replace(/#.*$/, '');\r\n                    /* jshint loopfunc:true */\r\n                    // use closure to store current style\r\n                    less.render(lessText, instanceOptions, bind(function (style, e, result) {\r\n                        if (e) {\r\n                            errors.add(e, 'inline');\r\n                        }\r\n                        else {\r\n                            style.type = 'text/css';\r\n                            if (style.styleSheet) {\r\n                                style.styleSheet.cssText = result.css;\r\n                            }\r\n                            else {\r\n                                style.innerHTML = result.css;\r\n                            }\r\n                        }\r\n                    }, null, style));\r\n                }\r\n            }\r\n        }\r\n        function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\r\n            var instanceOptions = clone(options);\r\n            addDataAttr(instanceOptions, sheet);\r\n            instanceOptions.mime = sheet.type;\r\n            if (modifyVars) {\r\n                instanceOptions.modifyVars = modifyVars;\r\n            }\r\n            function loadInitialFileCallback(loadedFile) {\r\n                var data = loadedFile.contents;\r\n                var path = loadedFile.filename;\r\n                var webInfo = loadedFile.webInfo;\r\n                var newFileInfo = {\r\n                    currentDirectory: fileManager.getPath(path),\r\n                    filename: path,\r\n                    rootFilename: path,\r\n                    rewriteUrls: instanceOptions.rewriteUrls\r\n                };\r\n                newFileInfo.entryPath = newFileInfo.currentDirectory;\r\n                newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\r\n                if (webInfo) {\r\n                    webInfo.remaining = remaining;\r\n                    var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\r\n                    if (!reload && css) {\r\n                        webInfo.local = true;\r\n                        callback(null, css, data, sheet, webInfo, path);\r\n                        return;\r\n                    }\r\n                }\r\n                // TODO add tests around how this behaves when reloading\r\n                errors.remove(path);\r\n                instanceOptions.rootFileInfo = newFileInfo;\r\n                less.render(data, instanceOptions, function (e, result) {\r\n                    if (e) {\r\n                        e.href = path;\r\n                        callback(e);\r\n                    }\r\n                    else {\r\n                        cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\r\n                        callback(null, result.css, data, sheet, webInfo, path);\r\n                    }\r\n                });\r\n            }\r\n            fileManager.loadFile(sheet.href, null, instanceOptions, environment)\r\n                .then(function (loadedFile) {\r\n                loadInitialFileCallback(loadedFile);\r\n            }).catch(function (err) {\r\n                console.log(err);\r\n                callback(err);\r\n            });\r\n        }\r\n        function loadStyleSheets(callback, reload, modifyVars) {\r\n            for (var i = 0; i < less.sheets.length; i++) {\r\n                loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\r\n            }\r\n        }\r\n        function initRunningMode() {\r\n            if (less.env === 'development') {\r\n                less.watchTimer = setInterval(function () {\r\n                    if (less.watchMode) {\r\n                        fileManager.clearFileCache();\r\n                        loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                            if (e) {\r\n                                errors.add(e, e.href || sheet.href);\r\n                            }\r\n                            else if (css) {\r\n                                browser.createCSS(window.document, css, sheet);\r\n                            }\r\n                        });\r\n                    }\r\n                }, options.poll);\r\n            }\r\n        }\r\n        //\r\n        // Watch mode\r\n        //\r\n        less.watch = function () {\r\n            if (!less.watchMode) {\r\n                less.env = 'development';\r\n                initRunningMode();\r\n            }\r\n            this.watchMode = true;\r\n            return true;\r\n        };\r\n        less.unwatch = function () { clearInterval(less.watchTimer); this.watchMode = false; return false; };\r\n        //\r\n        // Synchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\".\r\n        //\r\n        less.registerStylesheetsImmediately = function () {\r\n            var links = document.getElementsByTagName('link');\r\n            less.sheets = [];\r\n            for (var i = 0; i < links.length; i++) {\r\n                if (links[i].rel === 'stylesheet/less' || (links[i].rel.match(/stylesheet/) &&\r\n                    (links[i].type.match(typePattern)))) {\r\n                    less.sheets.push(links[i]);\r\n                }\r\n            }\r\n        };\r\n        //\r\n        // Asynchronously get all <link> tags with the 'rel' attribute set to\r\n        // \"stylesheet/less\", returning a Promise.\r\n        //\r\n        less.registerStylesheets = function () { return new Promise(function (resolve, reject) {\r\n            less.registerStylesheetsImmediately();\r\n            resolve();\r\n        }); };\r\n        //\r\n        // With this function, it's possible to alter variables and re-render\r\n        // CSS without reloading less-files\r\n        //\r\n        less.modifyVars = function (record) { return less.refresh(true, record, false); };\r\n        less.refresh = function (reload, modifyVars, clearFileCache) {\r\n            if ((reload || clearFileCache) && clearFileCache !== false) {\r\n                fileManager.clearFileCache();\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                var startTime;\r\n                var endTime;\r\n                var totalMilliseconds;\r\n                var remainingSheets;\r\n                startTime = endTime = new Date();\r\n                // Set counter for remaining unprocessed sheets\r\n                remainingSheets = less.sheets.length;\r\n                if (remainingSheets === 0) {\r\n                    endTime = new Date();\r\n                    totalMilliseconds = endTime - startTime;\r\n                    less.logger.info('Less has finished and no sheets were loaded.');\r\n                    resolve({\r\n                        startTime: startTime,\r\n                        endTime: endTime,\r\n                        totalMilliseconds: totalMilliseconds,\r\n                        sheets: less.sheets.length\r\n                    });\r\n                }\r\n                else {\r\n                    // Relies on less.sheets array, callback seems to be guaranteed to be called for every element of the array\r\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\r\n                        if (e) {\r\n                            errors.add(e, e.href || sheet.href);\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                        if (webInfo.local) {\r\n                            less.logger.info(\"Loading \" + sheet.href + \" from cache.\");\r\n                        }\r\n                        else {\r\n                            less.logger.info(\"Rendered \" + sheet.href + \" successfully.\");\r\n                        }\r\n                        browser.createCSS(window.document, css, sheet);\r\n                        less.logger.info(\"CSS for \" + sheet.href + \" generated in \" + (new Date() - endTime) + \"ms\");\r\n                        // Count completed sheet\r\n                        remainingSheets--;\r\n                        // Check if the last remaining sheet was processed and then call the promise\r\n                        if (remainingSheets === 0) {\r\n                            totalMilliseconds = new Date() - startTime;\r\n                            less.logger.info(\"Less has finished. CSS generated in \" + totalMilliseconds + \"ms\");\r\n                            resolve({\r\n                                startTime: startTime,\r\n                                endTime: endTime,\r\n                                totalMilliseconds: totalMilliseconds,\r\n                                sheets: less.sheets.length\r\n                            });\r\n                        }\r\n                        endTime = new Date();\r\n                    }, reload, modifyVars);\r\n                }\r\n                loadStyles(modifyVars);\r\n            });\r\n        };\r\n        less.refreshStyles = loadStyles;\r\n        return less;\r\n    });\n\n    /**\r\n     * Kicks off less and compiles any stylesheets\r\n     * used in the browser distributed version of less\r\n     * to kick-start less using the browser api\r\n     */\r\n    var options$1 = defaultOptions();\r\n    if (window.less) {\r\n        for (var key in window.less) {\r\n            if (window.less.hasOwnProperty(key)) {\r\n                options$1[key] = window.less[key];\r\n            }\r\n        }\r\n    }\r\n    addDefaultOptions(window, options$1);\r\n    options$1.plugins = options$1.plugins || [];\r\n    if (window.LESS_PLUGINS) {\r\n        options$1.plugins = options$1.plugins.concat(window.LESS_PLUGINS);\r\n    }\r\n    var less = root(window, options$1);\r\n    window.less = less;\r\n    var css;\r\n    var head;\r\n    var style;\r\n    // Always restore page visibility\r\n    function resolveOrReject(data) {\r\n        if (data.filename) {\r\n            console.warn(data);\r\n        }\r\n        if (!options$1.async) {\r\n            head.removeChild(style);\r\n        }\r\n    }\r\n    if (options$1.onReady) {\r\n        if (/!watch/.test(window.location.hash)) {\r\n            less.watch();\r\n        }\r\n        // Simulate synchronous stylesheet loading by hiding page rendering\r\n        if (!options$1.async) {\r\n            css = 'body { display: none !important }';\r\n            head = document.head || document.getElementsByTagName('head')[0];\r\n            style = document.createElement('style');\r\n            style.type = 'text/css';\r\n            if (style.styleSheet) {\r\n                style.styleSheet.cssText = css;\r\n            }\r\n            else {\r\n                style.appendChild(document.createTextNode(css));\r\n            }\r\n            head.appendChild(style);\r\n        }\r\n        less.registerStylesheetsImmediately();\r\n        less.pageLoadFinished = less.refresh(less.env === 'development').then(resolveOrReject, resolveOrReject);\r\n    }\n\n    return less;\n\n})));\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#navBar[data-v-5baecfa0]{width:100vw;height:72px;background-color:#fff;position:absolute;top:0;left:0;display:flex;justify-content:space-around;align-items:center}@media (max-width:1000px){#navBar[data-v-5baecfa0]{height:48px}}#navBar #navBarInnerWrapper[data-v-5baecfa0]{height:100%;width:1230px;display:flex;justify-content:space-between;align-items:center}@media (max-width:1270px){#navBar #navBarInnerWrapper[data-v-5baecfa0]{width:950px}}@media (max-width:1000px){#navBar #navBarInnerWrapper[data-v-5baecfa0]{width:90vw}}#navBar #navBarInnerWrapper #logo[data-v-5baecfa0]{height:50%}@media (max-width:1000px){#navBar #navBarInnerWrapper #navBarIndices[data-v-5baecfa0]{display:none}}#navBar #navBarInnerWrapper #navBarIndices .navBarIndex[data-v-5baecfa0]{margin:0 10px 0 10px;cursor:pointer;color:grey}#navBar #navBarInnerWrapper #navBarIndices .navBarIndex[data-v-5baecfa0]:hover{color:#000}#navBar #navBarInnerWrapper #navBarButtons[data-v-5baecfa0]{height:100%;display:flex;align-items:center}#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper[data-v-5baecfa0]{display:flex;align-items:center;justify-content:center;border-radius:25px;margin:0 10px 0 10px;cursor:pointer;height:50px;width:50px}@media (max-width:1000px){#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper[data-v-5baecfa0]{height:40px;width:40px;border-radius:20px}}#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper[data-v-5baecfa0]:hover{background-color:#d1d5db}#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper .navBarButton[data-v-5baecfa0]{height:28.8px}@media (max-width:1000px){#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper .navBarButton[data-v-5baecfa0]{display:none;height:19.2px}}#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper #navBarMobileMenu[data-v-5baecfa0]{display:none}@media (max-width:1000px){#navBar #navBarInnerWrapper #navBarButtons .navBarButtonWrapper #navBarMobileMenu[data-v-5baecfa0]{display:block;margin:0}}#navBar #navBarInnerWrapper #navBarButtons #navBarMobileMenuWrapper[data-v-5baecfa0]{display:none}@media (max-width:1000px){#navBar #navBarInnerWrapper #navBarButtons #navBarMobileMenuWrapper[data-v-5baecfa0]{display:flex;justify-content:center;align-items:center;margin:0;cursor:pointer}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","import listToStyles from './listToStyles'\n\nexport default function addStylesToShadowDOM (parentId, list, shadowRoot) {\n  var styles = listToStyles(parentId, list)\n  addStyles(styles, shadowRoot)\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nfunction addStyles (styles /* Array<StyleObject> */, shadowRoot) {\n  const injectedStyles =\n    shadowRoot._injectedStyles ||\n    (shadowRoot._injectedStyles = {})\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var style = injectedStyles[item.id]\n    if (!style) {\n      for (var j = 0; j < item.parts.length; j++) {\n        addStyle(item.parts[j], shadowRoot)\n      }\n      injectedStyles[item.id] = true\n    }\n  }\n}\n\nfunction createStyleElement (shadowRoot) {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  shadowRoot.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */, shadowRoot) {\n  var styleElement = createStyleElement(shadowRoot)\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","module.exports = __webpack_public_path__ + \"img/menu.b2d08dfb.svg\";","module.exports = __webpack_public_path__ + \"img/search.a4c07040.svg\";","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","const camelizeRE = /-(\\w)/g;\nconst camelize = str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '')\n};\n\nconst hyphenateRE = /\\B([A-Z])/g;\nconst hyphenate = str => {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n};\n\nfunction getInitialProps (propsList) {\n  const res = {};\n  propsList.forEach(key => {\n    res[key] = undefined;\n  });\n  return res\n}\n\nfunction injectHook (options, key, hook) {\n  options[key] = [].concat(options[key] || []);\n  options[key].unshift(hook);\n}\n\nfunction callHooks (vm, hook) {\n  if (vm) {\n    const hooks = vm.$options[hook] || [];\n    hooks.forEach(hook => {\n      hook.call(vm);\n    });\n  }\n}\n\nfunction createCustomEvent (name, args) {\n  return new CustomEvent(name, {\n    bubbles: false,\n    cancelable: false,\n    detail: args\n  })\n}\n\nconst isBoolean = val => /function Boolean/.test(String(val));\nconst isNumber = val => /function Number/.test(String(val));\n\nfunction convertAttributeValue (value, name, { type } = {}) {\n  if (isBoolean(type)) {\n    if (value === 'true' || value === 'false') {\n      return value === 'true'\n    }\n    if (value === '' || value === name || value != null) {\n      return true\n    }\n    return value\n  } else if (isNumber(type)) {\n    const parsed = parseFloat(value, 10);\n    return isNaN(parsed) ? value : parsed\n  } else {\n    return value\n  }\n}\n\nfunction toVNodes (h, children) {\n  const res = [];\n  for (let i = 0, l = children.length; i < l; i++) {\n    res.push(toVNode(h, children[i]));\n  }\n  return res\n}\n\nfunction toVNode (h, node) {\n  if (node.nodeType === 3) {\n    return node.data.trim() ? node.data : null\n  } else if (node.nodeType === 1) {\n    const data = {\n      attrs: getAttributes(node),\n      domProps: {\n        innerHTML: node.innerHTML\n      }\n    };\n    if (data.attrs.slot) {\n      data.slot = data.attrs.slot;\n      delete data.attrs.slot;\n    }\n    return h(node.tagName, data)\n  } else {\n    return null\n  }\n}\n\nfunction getAttributes (node) {\n  const res = {};\n  for (let i = 0, l = node.attributes.length; i < l; i++) {\n    const attr = node.attributes[i];\n    res[attr.nodeName] = attr.nodeValue;\n  }\n  return res\n}\n\nfunction wrap (Vue, Component) {\n  const isAsync = typeof Component === 'function' && !Component.cid;\n  let isInitialized = false;\n  let hyphenatedPropsList;\n  let camelizedPropsList;\n  let camelizedPropsMap;\n\n  function initialize (Component) {\n    if (isInitialized) return\n\n    const options = typeof Component === 'function'\n      ? Component.options\n      : Component;\n\n    // extract props info\n    const propsList = Array.isArray(options.props)\n      ? options.props\n      : Object.keys(options.props || {});\n    hyphenatedPropsList = propsList.map(hyphenate);\n    camelizedPropsList = propsList.map(camelize);\n    const originalPropsAsObject = Array.isArray(options.props) ? {} : options.props || {};\n    camelizedPropsMap = camelizedPropsList.reduce((map, key, i) => {\n      map[key] = originalPropsAsObject[propsList[i]];\n      return map\n    }, {});\n\n    // proxy $emit to native DOM events\n    injectHook(options, 'beforeCreate', function () {\n      const emit = this.$emit;\n      this.$emit = (name, ...args) => {\n        this.$root.$options.customElement.dispatchEvent(createCustomEvent(name, args));\n        return emit.call(this, name, ...args)\n      };\n    });\n\n    injectHook(options, 'created', function () {\n      // sync default props values to wrapper on created\n      camelizedPropsList.forEach(key => {\n        this.$root.props[key] = this[key];\n      });\n    });\n\n    // proxy props as Element properties\n    camelizedPropsList.forEach(key => {\n      Object.defineProperty(CustomElement.prototype, key, {\n        get () {\n          return this._wrapper.props[key]\n        },\n        set (newVal) {\n          this._wrapper.props[key] = newVal;\n        },\n        enumerable: false,\n        configurable: true\n      });\n    });\n\n    isInitialized = true;\n  }\n\n  function syncAttribute (el, key) {\n    const camelized = camelize(key);\n    const value = el.hasAttribute(key) ? el.getAttribute(key) : undefined;\n    el._wrapper.props[camelized] = convertAttributeValue(\n      value,\n      key,\n      camelizedPropsMap[camelized]\n    );\n  }\n\n  class CustomElement extends HTMLElement {\n    constructor () {\n      const self = super();\n      self.attachShadow({ mode: 'open' });\n\n      const wrapper = self._wrapper = new Vue({\n        name: 'shadow-root',\n        customElement: self,\n        shadowRoot: self.shadowRoot,\n        data () {\n          return {\n            props: {},\n            slotChildren: []\n          }\n        },\n        render (h) {\n          return h(Component, {\n            ref: 'inner',\n            props: this.props\n          }, this.slotChildren)\n        }\n      });\n\n      // Use MutationObserver to react to future attribute & slot content change\n      const observer = new MutationObserver(mutations => {\n        let hasChildrenChange = false;\n        for (let i = 0; i < mutations.length; i++) {\n          const m = mutations[i];\n          if (isInitialized && m.type === 'attributes' && m.target === self) {\n            syncAttribute(self, m.attributeName);\n          } else {\n            hasChildrenChange = true;\n          }\n        }\n        if (hasChildrenChange) {\n          wrapper.slotChildren = Object.freeze(toVNodes(\n            wrapper.$createElement,\n            self.childNodes\n          ));\n        }\n      });\n      observer.observe(self, {\n        childList: true,\n        subtree: true,\n        characterData: true,\n        attributes: true\n      });\n    }\n\n    get vueComponent () {\n      return this._wrapper.$refs.inner\n    }\n\n    connectedCallback () {\n      const wrapper = this._wrapper;\n      if (!wrapper._isMounted) {\n        // initialize attributes\n        const syncInitialAttributes = () => {\n          wrapper.props = getInitialProps(camelizedPropsList);\n          hyphenatedPropsList.forEach(key => {\n            syncAttribute(this, key);\n          });\n        };\n\n        if (isInitialized) {\n          syncInitialAttributes();\n        } else {\n          // async & unresolved\n          Component().then(resolved => {\n            if (resolved.__esModule || resolved[Symbol.toStringTag] === 'Module') {\n              resolved = resolved.default;\n            }\n            initialize(resolved);\n            syncInitialAttributes();\n          });\n        }\n        // initialize children\n        wrapper.slotChildren = Object.freeze(toVNodes(\n          wrapper.$createElement,\n          this.childNodes\n        ));\n        wrapper.$mount();\n        this.shadowRoot.appendChild(wrapper.$el);\n      } else {\n        callHooks(this.vueComponent, 'activated');\n      }\n    }\n\n    disconnectedCallback () {\n      callHooks(this.vueComponent, 'deactivated');\n    }\n  }\n\n  if (!isAsync) {\n    initialize(Component);\n  }\n\n  return CustomElement\n}\n\nexport default wrap;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('nav-bar'),_c('div',[_vm._v(\"happy\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"navBar\"}},[_c('div',{attrs:{\"id\":\"navBarInnerWrapper\"}},[_c('img',{attrs:{\"src\":require(\"../assets/Logo.svg\"),\"id\":\"logo\",\"alt\":\"logo\"}}),_c('div',{attrs:{\"id\":\"navBarIndices\"}},[_c('span',{staticClass:\"navBarIndex\"},[_vm._v(\"用户讨论\")]),_c('span',{staticClass:\"navBarIndex\"},[_vm._v(\"内容整理\")]),_c('span',{staticClass:\"navBarIndex\"},[_vm._v(\"实用工具\")]),_c('span',{staticClass:\"navBarIndex\"},[_vm._v(\"新人指南\")]),_c('span')]),_c('div',{attrs:{\"id\":\"navBarButtons\"}},[_c('div',{staticClass:\"navBarButtonWrapper\"},[_c('img',{staticClass:\"navBarButton\",attrs:{\"src\":require(\"../assets/search.svg\"),\"alt\":\"search\"}})]),_c('div',{staticClass:\"navBarButtonWrapper\"},[_c('img',{staticClass:\"navBarButton\",attrs:{\"src\":require(\"../assets/user.svg\"),\"alt\":\"user\"}})]),_c('div',{staticClass:\"navBarButtonWrapper\",attrs:{\"id\":\"navBarMobileMenuWrapper\"}},[_c('img',{staticClass:\"navBarButton\",attrs:{\"id\":\"navBarMobileMenu\",\"src\":require(\"../assets/menu.svg\"),\"alt\":\"menu\"}})])])])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"navBar\">\r\n        <div id=\"navBarInnerWrapper\">\r\n            <img src=\"../assets/Logo.svg\" id=\"logo\" alt=\"logo\"/>\r\n            <div id=\"navBarIndices\">\r\n                <span class=\"navBarIndex\">用户讨论</span>\r\n                <span class=\"navBarIndex\">内容整理</span>\r\n                <span class=\"navBarIndex\">实用工具</span>\r\n                <span class=\"navBarIndex\">新人指南</span>\r\n                <span></span>\r\n            </div>\r\n            <div id=\"navBarButtons\">\r\n                <div class=\"navBarButtonWrapper\">\r\n                    <img class=\"navBarButton\" src=\"../assets/search.svg\" alt=\"search\"/>\r\n                </div>\r\n                <div class=\"navBarButtonWrapper\">\r\n                    <img class=\"navBarButton\" src=\"../assets/user.svg\" alt=\"user\"/>\r\n                </div>\r\n                <div id=\"navBarMobileMenuWrapper\" class=\"navBarButtonWrapper\">\r\n                    <img id=\"navBarMobileMenu\" class=\"navBarButton\" src=\"../assets/menu.svg\" alt=\"menu\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"navBar\",\r\n    props: ['happy']\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@primary-color: white;\r\n#navBar {\r\n  width: 100vw;\r\n  height: 72px;\r\n  background-color: white;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  @media (max-width: 1000px) {\r\n    height: 48px;\r\n  }\r\n\r\n  #navBarInnerWrapper {\r\n    height: 100%;\r\n    width: 1230px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    @media (max-width: 1270px) {\r\n      width: 950px;\r\n    }\r\n    @media (max-width: 1000px) {\r\n      width: 90vw;\r\n    }\r\n\r\n    #logo {\r\n      height: 50%;\r\n    }\r\n\r\n    #navBarIndices {\r\n      @media (max-width: 1000px) {\r\n        display: none;\r\n      }\r\n\r\n      .navBarIndex {\r\n        margin: 0 10px 0 10px;\r\n        cursor: pointer;\r\n        color: grey;\r\n\r\n        &:hover {\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n\r\n    #navBarButtons {\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .navBarButtonWrapper {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-radius: 25px;\r\n        margin: 0 10px 0 10px;\r\n        cursor: pointer;\r\n        height: 50px;\r\n        width: 50px;\r\n        @media (max-width: 1000px) {\r\n          height: 40px;\r\n          width: 40px;\r\n          border-radius: 20px;\r\n        }\r\n\r\n        &:hover {\r\n          background-color: #D1D5DB;\r\n        }\r\n\r\n        .navBarButton {\r\n          height: 28.8px;\r\n          @media (max-width: 1000px) {\r\n            display: none;\r\n            height: 19.2px;\r\n          }\r\n        }\r\n\r\n        #navBarMobileMenu {\r\n          display: none;\r\n          @media (max-width: 1000px) {\r\n            display: block;\r\n            margin: 0;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      #navBarMobileMenuWrapper {\r\n        display: none;\r\n        @media (max-width: 1000px) {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          margin: 0;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./navBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./navBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./navBar.vue?vue&type=template&id=5baecfa0&scoped=true&\"\nimport script from \"./navBar.vue?vue&type=script&lang=js&\"\nexport * from \"./navBar.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./navBar.vue?vue&type=style&index=0&id=5baecfa0&scoped=true&lang=less&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  \"5baecfa0\",\n  null\n  ,true\n)\n\nexport default component.exports","<template>\n    <div id=\"app\">\n        <nav-bar></nav-bar>\n        <div>happy</div>\n    </div>\n\n</template>\n\n<script>\nimport navBar from \"@/components/navBar\";\n\nexport default {\n    name: 'App',\n    components: {\n        navBar\n    }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=42affa64&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  \n}\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  ,true\n)\n\nexport default component.exports","import Vue from 'vue'\n import App from './App.vue'\n// import wrap from '@vue/web-component-wrapper';\n// import navBar from \"./components/navBar\";\nimport less from 'less'\nVue.use(less);\nVue.config.productionTip = false\n\n// const customElement = wrap(Vue, navBar);\n// window.customElements.define('asf-navbar', customElement);\nimport wrap from '@vue/web-component-wrapper';\nimport VueWebComponent from './components/navBar';\n\nconst CustomElement = wrap(Vue, VueWebComponent);\n\nwindow.customElements.define('asf-navbar', CustomElement);\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app')\n\n","import './setPublicPath'\nimport Vue from 'vue'\nimport wrap from '@vue/web-component-wrapper'\n\n// runtime shared by every component chunk\nimport 'css-loader/dist/runtime/api.js'\nimport 'vue-style-loader/lib/addStylesShadow'\nimport 'vue-loader/lib/runtime/componentNormalizer'\n\nimport asfNavbar from '~root/src/main.js?shadow'\nwindow.customElements.define('asf-navbar', wrap(Vue, asfNavbar))","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./navBar.vue?vue&type=style&index=0&id=5baecfa0&scoped=true&lang=less&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to Shadow Root\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesShadow.js\").default\nmodule.exports.__inject__ = function (shadowRoot) {\n  add(\"672710e8\", content, shadowRoot)\n};","// addapted from the document.currentScript polyfill by Adam Miller\n// MIT license\n// source: https://github.com/amiller-gh/currentScript-polyfill\n\n// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.getCurrentScript = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function () {\n  function getCurrentScript () {\n    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')\n    // for chrome\n    if (!descriptor && 'currentScript' in document && document.currentScript) {\n      return document.currentScript\n    }\n\n    // for other browsers with native support for currentScript\n    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {\n      return document.currentScript\n    }\n  \n    // IE 8-10 support script readyState\n    // IE 11+ & Firefox support stack trace\n    try {\n      throw new Error();\n    }\n    catch (err) {\n      // Find the second match for the \"at\" string to get file src url from stack.\n      var ieStackRegExp = /.*at [^(]*\\((.*):(.+):(.+)\\)$/ig,\n        ffStackRegExp = /@([^@]*):(\\d+):(\\d+)\\s*$/ig,\n        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),\n        scriptLocation = (stackDetails && stackDetails[1]) || false,\n        line = (stackDetails && stackDetails[2]) || false,\n        currentLocation = document.location.href.replace(document.location.hash, ''),\n        pageSource,\n        inlineScriptSourceRegExp,\n        inlineScriptSource,\n        scripts = document.getElementsByTagName('script'); // Live NodeList collection\n  \n      if (scriptLocation === currentLocation) {\n        pageSource = document.documentElement.outerHTML;\n        inlineScriptSourceRegExp = new RegExp('(?:[^\\\\n]+?\\\\n){0,' + (line - 2) + '}[^<]*<script>([\\\\d\\\\D]*?)<\\\\/script>[\\\\d\\\\D]*', 'i');\n        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();\n      }\n  \n      for (var i = 0; i < scripts.length; i++) {\n        // If ready state is interactive, return the script tag\n        if (scripts[i].readyState === 'interactive') {\n          return scripts[i];\n        }\n  \n        // If src matches, return the script tag\n        if (scripts[i].src === scriptLocation) {\n          return scripts[i];\n        }\n  \n        // If inline source matches, return the script tag\n        if (\n          scriptLocation === currentLocation &&\n          scripts[i].innerHTML &&\n          scripts[i].innerHTML.trim() === inlineScriptSource\n        ) {\n          return scripts[i];\n        }\n      }\n  \n      // If no match, return null\n      return null;\n    }\n  };\n\n  return getCurrentScript\n}));\n","module.exports = Vue;","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-4!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./navBar.vue?vue&type=style&index=0&id=5baecfa0&scoped=true&lang=less&\""],"sourceRoot":""}